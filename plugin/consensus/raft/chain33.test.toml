Title="local"

[log]
# 日志级别，支持debug(dbug)/info/warn/error(eror)/crit
loglevel = "debug"
logConsoleLevel = "info"
# 日志文件名，可带目录，所有生成的日志文件都放到此目录下
logFile = "logs/chain33.log"
# 单个日志文件的最大值（单位：兆）
maxFileSize = 300
# 最多保存的历史日志文件个数
maxBackups = 100
# 最多保存的历史日志消息（单位：天）
maxAge = 28
# 日志文件名是否使用本地事件（否则使用UTC时间）
localTime = true
# 历史日志文件是否压缩（压缩格式为gz）
compress = true
# 是否打印调用源文件和行号
callerFile = false
# 是否打印调用方法
callerFunction = false

[blockchain]
defCacheSize=512
maxFetchBlockNum=128
timeoutSeconds=5
batchBlockNum=128
driver="leveldb"
dbPath="datadir"
dbCache=64
isStrongConsistency=true
singleMode=true
batchsync=false
enableTxQuickIndex=true

[p2p]
types=["dht"]
enable=false
msgCacheSize=10240
driver="leveldb"
dbPath="datadir/addrbook"
dbCache=4
grpcLogFile="grpc33.log"

[rpc]
jrpcBindAddr="localhost:8801"
grpcBindAddr="localhost:8802"
whitelist=["127.0.0.1"]
jrpcFuncWhitelist=["*"]
grpcFuncWhitelist=["*"]

[mempool]
name="timeline"
poolCacheSize=10240
minTxFeeRate=100000
maxTxNumPerAccount=100

[mempool.sub.timeline]
poolCacheSize=10240

[mempool.sub.score]
poolCacheSize=10240
timeParam=1      #时间占价格比例
priceConstant=1544  #手续费相对于时间的一个合适的常量,取当前unxi时间戳前四位数,排序时手续费高1e-5~=快1s
pricePower=1     #常量比例

[mempool.sub.price]
poolCacheSize=10240

[consensus]
# 共识驱动名,支持solo/raft/ticket/tendermint/pbft
name="raft"
minerstart=false
genesis="14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"

[mver.consensus]
fundKeyAddr = "1BQXS6TxaYYG5mADaWij4AxhZZUTpw95a5"
powLimitBits = "0x1f00ffff"
maxTxNumber = 1600      #160

[mver.consensus.ForkChainParamV1]
maxTxNumber = 10000

[mver.consensus.ForkChainParamV2]
powLimitBits = "0x1f2fffff"

[consensus.sub.raft]
genesis="14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"
genesisBlockTime=1514533394
# =============== raft共识配置参数 ===========================
# 共识节点ID，raft共识用到，不同的节点设置不同的nodeId（目前只支持1，2，3这种设置）
nodeID=1
# raft共识用到，通过这个端口进行节点的增加和删除
raftAPIPort=9121
# raft共识用到，指示这个节点是否新增加节点
isNewJoinNode=false
# raft共识用到，指示raft集群中的服务器IP和端口
peersURL="http://127.0.0.1:9021"
# raft共识用到，指示raft集群中只读节点的IP（只同步日志，不参与raft共识）
readOnlyPeersURL=""
addPeersURL=""
#raft中多少条记录打包一个snapshot，默认为10000(这里为了测试调整小一点）
defaultSnapCount=2
#raft中写区块时间间隔，默认为1秒
writeBlockSeconds=1
#raft中leader发送心跳包时间间隔，默认为1秒
heartbeatTick=1
#raft中leader打包空区块的时间间隔，默认为0，表示不打包空区块
emptyBlockInterval=120
# =============== raft共识配置参数 ===========================

[store]
name="kvdb"
driver="leveldb"
dbPath="datadir/mavltree"
dbCache=128

[store.sub.kvdb]
enableMavlPrefix=false
enableMVCC=false

[wallet]
minFee=100000
driver="memdb"
dbPath="wallet"
dbCache=16
signType="secp256k1"

[wallet.sub.ticket]
minerdisable=true
minerwhitelist=["*"]
minerWaitTime="1s"


[exec]
enableStat=false
enableMVCC=false
alias=["token1:token","token2:token","token3:token"]
saveTokenTxList=false

[exec.sub.relay]
genesis="14KEKbYtKKQm4wMthSK9J4La4nAiidGozt"

[exec.sub.cert]
# 是否启用证书验证和签名
enable=false
# 加密文件路径
cryptoPath="authdir/crypto"
# 带证书签名类型，支持"auth_ecdsa", "auth_sm2"
signType="auth_ecdsa"

[exec.sub.manage]
superManager=[
    "1Bsg9j6gW83sShoee1fZAt9TkUjcrCgA9S",
    "12qyocayNF7Lv6C9qW4avxs2E7U41fKSfv",
    "1Q8hGLfoGe63efeWa8fJ4Pnukhkngt6poK"
]

[exec.sub.autonomy]
total="16htvcBNSEA7fZhAdLJphDwQRQJaHpyHTp"
useBalance=false

[metrics]
#是否使能发送metrics数据的发送
enableMetrics=false
#数据保存模式
dataEmitMode="influxdb"