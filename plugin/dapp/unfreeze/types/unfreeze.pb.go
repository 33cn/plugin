// Copyright Fuzamei Corp. 2018 All Rights Reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: unfreeze.proto

package types

import (
	context "context"
	reflect "reflect"
	sync "sync"

	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Unfreeze struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//解冻交易ID（唯一识别码）
	UnfreezeID string `protobuf:"bytes,1,opt,name=unfreezeID,proto3" json:"unfreezeID,omitempty"`
	//开始时间
	StartTime int64 `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//币种
	AssetExec   string `protobuf:"bytes,3,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	AssetSymbol string `protobuf:"bytes,4,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	//冻结总额
	TotalCount int64 `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	//发币人地址
	Initiator string `protobuf:"bytes,6,opt,name=initiator,proto3" json:"initiator,omitempty"`
	//收币人地址
	Beneficiary string `protobuf:"bytes,7,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	//解冻剩余币数
	Remaining int64 `protobuf:"varint,8,opt,name=remaining,proto3" json:"remaining,omitempty"`
	//解冻方式（百分比；固额）
	Means string `protobuf:"bytes,9,opt,name=means,proto3" json:"means,omitempty"`
	// Types that are assignable to MeansOpt:
	//	*Unfreeze_FixAmount
	//	*Unfreeze_LeftProportion
	MeansOpt   isUnfreeze_MeansOpt `protobuf_oneof:"meansOpt"`
	Terminated bool                `protobuf:"varint,12,opt,name=terminated,proto3" json:"terminated,omitempty"`
}

func (x *Unfreeze) Reset() {
	*x = Unfreeze{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unfreeze) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unfreeze) ProtoMessage() {}

func (x *Unfreeze) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unfreeze.ProtoReflect.Descriptor instead.
func (*Unfreeze) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{0}
}

func (x *Unfreeze) GetUnfreezeID() string {
	if x != nil {
		return x.UnfreezeID
	}
	return ""
}

func (x *Unfreeze) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Unfreeze) GetAssetExec() string {
	if x != nil {
		return x.AssetExec
	}
	return ""
}

func (x *Unfreeze) GetAssetSymbol() string {
	if x != nil {
		return x.AssetSymbol
	}
	return ""
}

func (x *Unfreeze) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Unfreeze) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *Unfreeze) GetBeneficiary() string {
	if x != nil {
		return x.Beneficiary
	}
	return ""
}

func (x *Unfreeze) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *Unfreeze) GetMeans() string {
	if x != nil {
		return x.Means
	}
	return ""
}

func (m *Unfreeze) GetMeansOpt() isUnfreeze_MeansOpt {
	if m != nil {
		return m.MeansOpt
	}
	return nil
}

func (x *Unfreeze) GetFixAmount() *FixAmount {
	if x, ok := x.GetMeansOpt().(*Unfreeze_FixAmount); ok {
		return x.FixAmount
	}
	return nil
}

func (x *Unfreeze) GetLeftProportion() *LeftProportion {
	if x, ok := x.GetMeansOpt().(*Unfreeze_LeftProportion); ok {
		return x.LeftProportion
	}
	return nil
}

func (x *Unfreeze) GetTerminated() bool {
	if x != nil {
		return x.Terminated
	}
	return false
}

type isUnfreeze_MeansOpt interface {
	isUnfreeze_MeansOpt()
}

type Unfreeze_FixAmount struct {
	FixAmount *FixAmount `protobuf:"bytes,10,opt,name=fixAmount,proto3,oneof"`
}

type Unfreeze_LeftProportion struct {
	LeftProportion *LeftProportion `protobuf:"bytes,11,opt,name=leftProportion,proto3,oneof"`
}

func (*Unfreeze_FixAmount) isUnfreeze_MeansOpt() {}

func (*Unfreeze_LeftProportion) isUnfreeze_MeansOpt() {}

// 按时间固定额度解冻
type FixAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period int64 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	Amount int64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *FixAmount) Reset() {
	*x = FixAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FixAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FixAmount) ProtoMessage() {}

func (x *FixAmount) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FixAmount.ProtoReflect.Descriptor instead.
func (*FixAmount) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{1}
}

func (x *FixAmount) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *FixAmount) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// 固定时间间隔按余量百分比解冻
type LeftProportion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period        int64 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	TenThousandth int64 `protobuf:"varint,2,opt,name=tenThousandth,proto3" json:"tenThousandth,omitempty"`
}

func (x *LeftProportion) Reset() {
	*x = LeftProportion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeftProportion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeftProportion) ProtoMessage() {}

func (x *LeftProportion) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeftProportion.ProtoReflect.Descriptor instead.
func (*LeftProportion) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{2}
}

func (x *LeftProportion) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *LeftProportion) GetTenThousandth() int64 {
	if x != nil {
		return x.TenThousandth
	}
	return 0
}

// message for execs.unfreeze
type UnfreezeAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*UnfreezeAction_Create
	//	*UnfreezeAction_Withdraw
	//	*UnfreezeAction_Terminate
	Value isUnfreezeAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,4,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *UnfreezeAction) Reset() {
	*x = UnfreezeAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeAction) ProtoMessage() {}

func (x *UnfreezeAction) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeAction.ProtoReflect.Descriptor instead.
func (*UnfreezeAction) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{3}
}

func (m *UnfreezeAction) GetValue() isUnfreezeAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UnfreezeAction) GetCreate() *UnfreezeCreate {
	if x, ok := x.GetValue().(*UnfreezeAction_Create); ok {
		return x.Create
	}
	return nil
}

func (x *UnfreezeAction) GetWithdraw() *UnfreezeWithdraw {
	if x, ok := x.GetValue().(*UnfreezeAction_Withdraw); ok {
		return x.Withdraw
	}
	return nil
}

func (x *UnfreezeAction) GetTerminate() *UnfreezeTerminate {
	if x, ok := x.GetValue().(*UnfreezeAction_Terminate); ok {
		return x.Terminate
	}
	return nil
}

func (x *UnfreezeAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isUnfreezeAction_Value interface {
	isUnfreezeAction_Value()
}

type UnfreezeAction_Create struct {
	Create *UnfreezeCreate `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type UnfreezeAction_Withdraw struct {
	Withdraw *UnfreezeWithdraw `protobuf:"bytes,2,opt,name=withdraw,proto3,oneof"`
}

type UnfreezeAction_Terminate struct {
	Terminate *UnfreezeTerminate `protobuf:"bytes,3,opt,name=terminate,proto3,oneof"`
}

func (*UnfreezeAction_Create) isUnfreezeAction_Value() {}

func (*UnfreezeAction_Withdraw) isUnfreezeAction_Value() {}

func (*UnfreezeAction_Terminate) isUnfreezeAction_Value() {}

// action
type UnfreezeCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64  `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	AssetExec   string `protobuf:"bytes,2,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	AssetSymbol string `protobuf:"bytes,3,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	TotalCount  int64  `protobuf:"varint,4,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	Beneficiary string `protobuf:"bytes,5,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	Means       string `protobuf:"bytes,6,opt,name=means,proto3" json:"means,omitempty"`
	// Types that are assignable to MeansOpt:
	//	*UnfreezeCreate_FixAmount
	//	*UnfreezeCreate_LeftProportion
	MeansOpt isUnfreezeCreate_MeansOpt `protobuf_oneof:"meansOpt"`
}

func (x *UnfreezeCreate) Reset() {
	*x = UnfreezeCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeCreate) ProtoMessage() {}

func (x *UnfreezeCreate) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeCreate.ProtoReflect.Descriptor instead.
func (*UnfreezeCreate) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{4}
}

func (x *UnfreezeCreate) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *UnfreezeCreate) GetAssetExec() string {
	if x != nil {
		return x.AssetExec
	}
	return ""
}

func (x *UnfreezeCreate) GetAssetSymbol() string {
	if x != nil {
		return x.AssetSymbol
	}
	return ""
}

func (x *UnfreezeCreate) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *UnfreezeCreate) GetBeneficiary() string {
	if x != nil {
		return x.Beneficiary
	}
	return ""
}

func (x *UnfreezeCreate) GetMeans() string {
	if x != nil {
		return x.Means
	}
	return ""
}

func (m *UnfreezeCreate) GetMeansOpt() isUnfreezeCreate_MeansOpt {
	if m != nil {
		return m.MeansOpt
	}
	return nil
}

func (x *UnfreezeCreate) GetFixAmount() *FixAmount {
	if x, ok := x.GetMeansOpt().(*UnfreezeCreate_FixAmount); ok {
		return x.FixAmount
	}
	return nil
}

func (x *UnfreezeCreate) GetLeftProportion() *LeftProportion {
	if x, ok := x.GetMeansOpt().(*UnfreezeCreate_LeftProportion); ok {
		return x.LeftProportion
	}
	return nil
}

type isUnfreezeCreate_MeansOpt interface {
	isUnfreezeCreate_MeansOpt()
}

type UnfreezeCreate_FixAmount struct {
	FixAmount *FixAmount `protobuf:"bytes,7,opt,name=fixAmount,proto3,oneof"`
}

type UnfreezeCreate_LeftProportion struct {
	LeftProportion *LeftProportion `protobuf:"bytes,8,opt,name=leftProportion,proto3,oneof"`
}

func (*UnfreezeCreate_FixAmount) isUnfreezeCreate_MeansOpt() {}

func (*UnfreezeCreate_LeftProportion) isUnfreezeCreate_MeansOpt() {}

type UnfreezeWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnfreezeID string `protobuf:"bytes,1,opt,name=unfreezeID,proto3" json:"unfreezeID,omitempty"`
}

func (x *UnfreezeWithdraw) Reset() {
	*x = UnfreezeWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeWithdraw) ProtoMessage() {}

func (x *UnfreezeWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeWithdraw.ProtoReflect.Descriptor instead.
func (*UnfreezeWithdraw) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{5}
}

func (x *UnfreezeWithdraw) GetUnfreezeID() string {
	if x != nil {
		return x.UnfreezeID
	}
	return ""
}

type UnfreezeTerminate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnfreezeID string `protobuf:"bytes,1,opt,name=unfreezeID,proto3" json:"unfreezeID,omitempty"`
}

func (x *UnfreezeTerminate) Reset() {
	*x = UnfreezeTerminate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfreezeTerminate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfreezeTerminate) ProtoMessage() {}

func (x *UnfreezeTerminate) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfreezeTerminate.ProtoReflect.Descriptor instead.
func (*UnfreezeTerminate) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{6}
}

func (x *UnfreezeTerminate) GetUnfreezeID() string {
	if x != nil {
		return x.UnfreezeID
	}
	return ""
}

// receipt
type ReceiptUnfreeze struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prev    *Unfreeze `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current *Unfreeze `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *ReceiptUnfreeze) Reset() {
	*x = ReceiptUnfreeze{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptUnfreeze) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptUnfreeze) ProtoMessage() {}

func (x *ReceiptUnfreeze) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptUnfreeze.ProtoReflect.Descriptor instead.
func (*ReceiptUnfreeze) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiptUnfreeze) GetPrev() *Unfreeze {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *ReceiptUnfreeze) GetCurrent() *Unfreeze {
	if x != nil {
		return x.Current
	}
	return nil
}

type LocalUnfreeze struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unfreeze *Unfreeze `protobuf:"bytes,1,opt,name=unfreeze,proto3" json:"unfreeze,omitempty"`
	TxIndex  string    `protobuf:"bytes,2,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
}

func (x *LocalUnfreeze) Reset() {
	*x = LocalUnfreeze{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalUnfreeze) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalUnfreeze) ProtoMessage() {}

func (x *LocalUnfreeze) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalUnfreeze.ProtoReflect.Descriptor instead.
func (*LocalUnfreeze) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{8}
}

func (x *LocalUnfreeze) GetUnfreeze() *Unfreeze {
	if x != nil {
		return x.Unfreeze
	}
	return nil
}

func (x *LocalUnfreeze) GetTxIndex() string {
	if x != nil {
		return x.TxIndex
	}
	return ""
}

// query
type ReplyQueryUnfreezeWithdraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnfreezeID      string `protobuf:"bytes,1,opt,name=unfreezeID,proto3" json:"unfreezeID,omitempty"`
	AvailableAmount int64  `protobuf:"varint,2,opt,name=availableAmount,proto3" json:"availableAmount,omitempty"`
}

func (x *ReplyQueryUnfreezeWithdraw) Reset() {
	*x = ReplyQueryUnfreezeWithdraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyQueryUnfreezeWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyQueryUnfreezeWithdraw) ProtoMessage() {}

func (x *ReplyQueryUnfreezeWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyQueryUnfreezeWithdraw.ProtoReflect.Descriptor instead.
func (*ReplyQueryUnfreezeWithdraw) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{9}
}

func (x *ReplyQueryUnfreezeWithdraw) GetUnfreezeID() string {
	if x != nil {
		return x.UnfreezeID
	}
	return ""
}

func (x *ReplyQueryUnfreezeWithdraw) GetAvailableAmount() int64 {
	if x != nil {
		return x.AvailableAmount
	}
	return 0
}

type ReqUnfreezes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction   int32  `protobuf:"varint,1,opt,name=direction,proto3" json:"direction,omitempty"`
	Count       int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	FromKey     string `protobuf:"bytes,3,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	Initiator   string `protobuf:"bytes,4,opt,name=initiator,proto3" json:"initiator,omitempty"`
	Beneficiary string `protobuf:"bytes,5,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
}

func (x *ReqUnfreezes) Reset() {
	*x = ReqUnfreezes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUnfreezes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUnfreezes) ProtoMessage() {}

func (x *ReqUnfreezes) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUnfreezes.ProtoReflect.Descriptor instead.
func (*ReqUnfreezes) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{10}
}

func (x *ReqUnfreezes) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *ReqUnfreezes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqUnfreezes) GetFromKey() string {
	if x != nil {
		return x.FromKey
	}
	return ""
}

func (x *ReqUnfreezes) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *ReqUnfreezes) GetBeneficiary() string {
	if x != nil {
		return x.Beneficiary
	}
	return ""
}

type ReplyUnfreeze struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//解冻交易ID（唯一识别码）
	UnfreezeID string `protobuf:"bytes,1,opt,name=unfreezeID,proto3" json:"unfreezeID,omitempty"`
	//开始时间
	StartTime int64 `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	//币种
	AssetExec   string `protobuf:"bytes,3,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	AssetSymbol string `protobuf:"bytes,4,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	//冻结总额
	TotalCount int64 `protobuf:"varint,5,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
	//发币人地址
	Initiator string `protobuf:"bytes,6,opt,name=initiator,proto3" json:"initiator,omitempty"`
	//收币人地址
	Beneficiary string `protobuf:"bytes,7,opt,name=beneficiary,proto3" json:"beneficiary,omitempty"`
	//解冻剩余币数
	Remaining int64 `protobuf:"varint,8,opt,name=remaining,proto3" json:"remaining,omitempty"`
	//解冻方式（百分比；固额）
	Means string `protobuf:"bytes,9,opt,name=means,proto3" json:"means,omitempty"`
	// Types that are assignable to MeansOpt:
	//	*ReplyUnfreeze_FixAmount
	//	*ReplyUnfreeze_LeftProportion
	MeansOpt   isReplyUnfreeze_MeansOpt `protobuf_oneof:"meansOpt"`
	Terminated bool                     `protobuf:"varint,12,opt,name=terminated,proto3" json:"terminated,omitempty"`
	Key        string                   `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ReplyUnfreeze) Reset() {
	*x = ReplyUnfreeze{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyUnfreeze) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyUnfreeze) ProtoMessage() {}

func (x *ReplyUnfreeze) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyUnfreeze.ProtoReflect.Descriptor instead.
func (*ReplyUnfreeze) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{11}
}

func (x *ReplyUnfreeze) GetUnfreezeID() string {
	if x != nil {
		return x.UnfreezeID
	}
	return ""
}

func (x *ReplyUnfreeze) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReplyUnfreeze) GetAssetExec() string {
	if x != nil {
		return x.AssetExec
	}
	return ""
}

func (x *ReplyUnfreeze) GetAssetSymbol() string {
	if x != nil {
		return x.AssetSymbol
	}
	return ""
}

func (x *ReplyUnfreeze) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ReplyUnfreeze) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *ReplyUnfreeze) GetBeneficiary() string {
	if x != nil {
		return x.Beneficiary
	}
	return ""
}

func (x *ReplyUnfreeze) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *ReplyUnfreeze) GetMeans() string {
	if x != nil {
		return x.Means
	}
	return ""
}

func (m *ReplyUnfreeze) GetMeansOpt() isReplyUnfreeze_MeansOpt {
	if m != nil {
		return m.MeansOpt
	}
	return nil
}

func (x *ReplyUnfreeze) GetFixAmount() *FixAmount {
	if x, ok := x.GetMeansOpt().(*ReplyUnfreeze_FixAmount); ok {
		return x.FixAmount
	}
	return nil
}

func (x *ReplyUnfreeze) GetLeftProportion() *LeftProportion {
	if x, ok := x.GetMeansOpt().(*ReplyUnfreeze_LeftProportion); ok {
		return x.LeftProportion
	}
	return nil
}

func (x *ReplyUnfreeze) GetTerminated() bool {
	if x != nil {
		return x.Terminated
	}
	return false
}

func (x *ReplyUnfreeze) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type isReplyUnfreeze_MeansOpt interface {
	isReplyUnfreeze_MeansOpt()
}

type ReplyUnfreeze_FixAmount struct {
	FixAmount *FixAmount `protobuf:"bytes,10,opt,name=fixAmount,proto3,oneof"`
}

type ReplyUnfreeze_LeftProportion struct {
	LeftProportion *LeftProportion `protobuf:"bytes,11,opt,name=leftProportion,proto3,oneof"`
}

func (*ReplyUnfreeze_FixAmount) isReplyUnfreeze_MeansOpt() {}

func (*ReplyUnfreeze_LeftProportion) isReplyUnfreeze_MeansOpt() {}

type ReplyUnfreezes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unfreeze []*ReplyUnfreeze `protobuf:"bytes,1,rep,name=unfreeze,proto3" json:"unfreeze,omitempty"`
}

func (x *ReplyUnfreezes) Reset() {
	*x = ReplyUnfreezes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_unfreeze_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyUnfreezes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyUnfreezes) ProtoMessage() {}

func (x *ReplyUnfreezes) ProtoReflect() protoreflect.Message {
	mi := &file_unfreeze_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyUnfreezes.ProtoReflect.Descriptor instead.
func (*ReplyUnfreezes) Descriptor() ([]byte, []int) {
	return file_unfreeze_proto_rawDescGZIP(), []int{12}
}

func (x *ReplyUnfreezes) GetUnfreeze() []*ReplyUnfreeze {
	if x != nil {
		return x.Unfreeze
	}
	return nil
}

var File_unfreeze_proto protoreflect.FileDescriptor

var file_unfreeze_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x03, 0x0a, 0x08, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x65, 0x61, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69, 0x78,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x61, 0x6e, 0x73,
	0x4f, 0x70, 0x74, 0x22, 0x3b, 0x0a, 0x09, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x0e, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65,
	0x6e, 0x54, 0x68, 0x6f, 0x75, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x54, 0x68, 0x6f, 0x75, 0x73, 0x61, 0x6e, 0x64, 0x74, 0x68,
	0x22, 0xcb, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55,
	0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48,
	0x00, 0x52, 0x08, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5,
	0x02, 0x0a, 0x0e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x66, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x65, 0x66,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x66, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65,
	0x61, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x22, 0x32, 0x0a, 0x10, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x11, 0x55, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x22,
	0x61, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x22, 0x56, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x55, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x52, 0x08, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x66, 0x0a, 0x1a, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x22, 0xd2, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x6e, 0x66, 0x72, 0x65,
	0x65, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x65, 0x61, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x46, 0x69, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x65, 0x66, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65,
	0x61, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55,
	0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x08, 0x75, 0x6e, 0x66, 0x72,
	0x65, 0x65, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65,
	0x52, 0x08, 0x75, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x32, 0x8e, 0x01, 0x0a, 0x08, 0x75,
	0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x10,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x1a, 0x21, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x6e,
	0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x71, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x55, 0x6e, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_unfreeze_proto_rawDescOnce sync.Once
	file_unfreeze_proto_rawDescData = file_unfreeze_proto_rawDesc
)

func file_unfreeze_proto_rawDescGZIP() []byte {
	file_unfreeze_proto_rawDescOnce.Do(func() {
		file_unfreeze_proto_rawDescData = protoimpl.X.CompressGZIP(file_unfreeze_proto_rawDescData)
	})
	return file_unfreeze_proto_rawDescData
}

var file_unfreeze_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_unfreeze_proto_goTypes = []interface{}{
	(*Unfreeze)(nil),                   // 0: types.Unfreeze
	(*FixAmount)(nil),                  // 1: types.FixAmount
	(*LeftProportion)(nil),             // 2: types.LeftProportion
	(*UnfreezeAction)(nil),             // 3: types.UnfreezeAction
	(*UnfreezeCreate)(nil),             // 4: types.UnfreezeCreate
	(*UnfreezeWithdraw)(nil),           // 5: types.UnfreezeWithdraw
	(*UnfreezeTerminate)(nil),          // 6: types.UnfreezeTerminate
	(*ReceiptUnfreeze)(nil),            // 7: types.ReceiptUnfreeze
	(*LocalUnfreeze)(nil),              // 8: types.LocalUnfreeze
	(*ReplyQueryUnfreezeWithdraw)(nil), // 9: types.ReplyQueryUnfreezeWithdraw
	(*ReqUnfreezes)(nil),               // 10: types.ReqUnfreezes
	(*ReplyUnfreeze)(nil),              // 11: types.ReplyUnfreeze
	(*ReplyUnfreezes)(nil),             // 12: types.ReplyUnfreezes
	(*types.ReqString)(nil),            // 13: types.ReqString
}
var file_unfreeze_proto_depIdxs = []int32{
	1,  // 0: types.Unfreeze.fixAmount:type_name -> types.FixAmount
	2,  // 1: types.Unfreeze.leftProportion:type_name -> types.LeftProportion
	4,  // 2: types.UnfreezeAction.create:type_name -> types.UnfreezeCreate
	5,  // 3: types.UnfreezeAction.withdraw:type_name -> types.UnfreezeWithdraw
	6,  // 4: types.UnfreezeAction.terminate:type_name -> types.UnfreezeTerminate
	1,  // 5: types.UnfreezeCreate.fixAmount:type_name -> types.FixAmount
	2,  // 6: types.UnfreezeCreate.leftProportion:type_name -> types.LeftProportion
	0,  // 7: types.ReceiptUnfreeze.prev:type_name -> types.Unfreeze
	0,  // 8: types.ReceiptUnfreeze.current:type_name -> types.Unfreeze
	0,  // 9: types.LocalUnfreeze.unfreeze:type_name -> types.Unfreeze
	1,  // 10: types.ReplyUnfreeze.fixAmount:type_name -> types.FixAmount
	2,  // 11: types.ReplyUnfreeze.leftProportion:type_name -> types.LeftProportion
	11, // 12: types.ReplyUnfreezes.unfreeze:type_name -> types.ReplyUnfreeze
	13, // 13: types.unfreeze.GetUnfreezeWithdraw:input_type -> types.ReqString
	13, // 14: types.unfreeze.QueryUnfreeze:input_type -> types.ReqString
	9,  // 15: types.unfreeze.GetUnfreezeWithdraw:output_type -> types.ReplyQueryUnfreezeWithdraw
	0,  // 16: types.unfreeze.QueryUnfreeze:output_type -> types.Unfreeze
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_unfreeze_proto_init() }
func file_unfreeze_proto_init() {
	if File_unfreeze_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_unfreeze_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unfreeze); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FixAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeftProportion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfreezeTerminate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptUnfreeze); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalUnfreeze); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyQueryUnfreezeWithdraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUnfreezes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyUnfreeze); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_unfreeze_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyUnfreezes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_unfreeze_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Unfreeze_FixAmount)(nil),
		(*Unfreeze_LeftProportion)(nil),
	}
	file_unfreeze_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UnfreezeAction_Create)(nil),
		(*UnfreezeAction_Withdraw)(nil),
		(*UnfreezeAction_Terminate)(nil),
	}
	file_unfreeze_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*UnfreezeCreate_FixAmount)(nil),
		(*UnfreezeCreate_LeftProportion)(nil),
	}
	file_unfreeze_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ReplyUnfreeze_FixAmount)(nil),
		(*ReplyUnfreeze_LeftProportion)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_unfreeze_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_unfreeze_proto_goTypes,
		DependencyIndexes: file_unfreeze_proto_depIdxs,
		MessageInfos:      file_unfreeze_proto_msgTypes,
	}.Build()
	File_unfreeze_proto = out.File
	file_unfreeze_proto_rawDesc = nil
	file_unfreeze_proto_goTypes = nil
	file_unfreeze_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UnfreezeClient is the client API for Unfreeze service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UnfreezeClient interface {
	GetUnfreezeWithdraw(ctx context.Context, in *types.ReqString, opts ...grpc.CallOption) (*ReplyQueryUnfreezeWithdraw, error)
	QueryUnfreeze(ctx context.Context, in *types.ReqString, opts ...grpc.CallOption) (*Unfreeze, error)
}

type unfreezeClient struct {
	cc grpc.ClientConnInterface
}

func NewUnfreezeClient(cc grpc.ClientConnInterface) UnfreezeClient {
	return &unfreezeClient{cc}
}

func (c *unfreezeClient) GetUnfreezeWithdraw(ctx context.Context, in *types.ReqString, opts ...grpc.CallOption) (*ReplyQueryUnfreezeWithdraw, error) {
	out := new(ReplyQueryUnfreezeWithdraw)
	err := c.cc.Invoke(ctx, "/types.unfreeze/GetUnfreezeWithdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unfreezeClient) QueryUnfreeze(ctx context.Context, in *types.ReqString, opts ...grpc.CallOption) (*Unfreeze, error) {
	out := new(Unfreeze)
	err := c.cc.Invoke(ctx, "/types.unfreeze/QueryUnfreeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UnfreezeServer is the server API for Unfreeze service.
type UnfreezeServer interface {
	GetUnfreezeWithdraw(context.Context, *types.ReqString) (*ReplyQueryUnfreezeWithdraw, error)
	QueryUnfreeze(context.Context, *types.ReqString) (*Unfreeze, error)
}

// UnimplementedUnfreezeServer can be embedded to have forward compatible implementations.
type UnimplementedUnfreezeServer struct {
}

func (*UnimplementedUnfreezeServer) GetUnfreezeWithdraw(context.Context, *types.ReqString) (*ReplyQueryUnfreezeWithdraw, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUnfreezeWithdraw not implemented")
}
func (*UnimplementedUnfreezeServer) QueryUnfreeze(context.Context, *types.ReqString) (*Unfreeze, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUnfreeze not implemented")
}

func RegisterUnfreezeServer(s *grpc.Server, srv UnfreezeServer) {
	s.RegisterService(&_Unfreeze_serviceDesc, srv)
}

func _Unfreeze_GetUnfreezeWithdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnfreezeServer).GetUnfreezeWithdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.unfreeze/GetUnfreezeWithdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnfreezeServer).GetUnfreezeWithdraw(ctx, req.(*types.ReqString))
	}
	return interceptor(ctx, in, info, handler)
}

func _Unfreeze_QueryUnfreeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UnfreezeServer).QueryUnfreeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.unfreeze/QueryUnfreeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UnfreezeServer).QueryUnfreeze(ctx, req.(*types.ReqString))
	}
	return interceptor(ctx, in, info, handler)
}

var _Unfreeze_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.unfreeze",
	HandlerType: (*UnfreezeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUnfreezeWithdraw",
			Handler:    _Unfreeze_GetUnfreezeWithdraw_Handler,
		},
		{
			MethodName: "QueryUnfreeze",
			Handler:    _Unfreeze_QueryUnfreeze_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "unfreeze.proto",
}
