// Code generated by protoc-gen-go. DO NOT EDIT.
// source: echo.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	echo.proto

It has these top-level messages:
	Ping
	Pang
	EchoAction
	PingLog
	PangLog
	Query
	QueryResult
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ping操作action
type Ping struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Ping) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// pang操作action
type Pang struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Pang) Reset()                    { *m = Pang{} }
func (m *Pang) String() string            { return proto.CompactTextString(m) }
func (*Pang) ProtoMessage()               {}
func (*Pang) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pang) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 本执行器的统一Action结构
type EchoAction struct {
	// Types that are valid to be assigned to Value:
	//	*EchoAction_Ping
	//	*EchoAction_Pang
	Value isEchoAction_Value `protobuf_oneof:"value"`
	Ty    int32              `protobuf:"varint,3,opt,name=ty" json:"ty,omitempty"`
}

func (m *EchoAction) Reset()                    { *m = EchoAction{} }
func (m *EchoAction) String() string            { return proto.CompactTextString(m) }
func (*EchoAction) ProtoMessage()               {}
func (*EchoAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isEchoAction_Value interface {
	isEchoAction_Value()
}

type EchoAction_Ping struct {
	Ping *Ping `protobuf:"bytes,1,opt,name=ping,oneof"`
}
type EchoAction_Pang struct {
	Pang *Pang `protobuf:"bytes,2,opt,name=pang,oneof"`
}

func (*EchoAction_Ping) isEchoAction_Value() {}
func (*EchoAction_Pang) isEchoAction_Value() {}

func (m *EchoAction) GetValue() isEchoAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *EchoAction) GetPing() *Ping {
	if x, ok := m.GetValue().(*EchoAction_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *EchoAction) GetPang() *Pang {
	if x, ok := m.GetValue().(*EchoAction_Pang); ok {
		return x.Pang
	}
	return nil
}

func (m *EchoAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*EchoAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _EchoAction_OneofMarshaler, _EchoAction_OneofUnmarshaler, _EchoAction_OneofSizer, []interface{}{
		(*EchoAction_Ping)(nil),
		(*EchoAction_Pang)(nil),
	}
}

func _EchoAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*EchoAction)
	// value
	switch x := m.Value.(type) {
	case *EchoAction_Ping:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ping); err != nil {
			return err
		}
	case *EchoAction_Pang:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pang); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("EchoAction.Value has unexpected type %T", x)
	}
	return nil
}

func _EchoAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*EchoAction)
	switch tag {
	case 1: // value.ping
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ping)
		err := b.DecodeMessage(msg)
		m.Value = &EchoAction_Ping{msg}
		return true, err
	case 2: // value.pang
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Pang)
		err := b.DecodeMessage(msg)
		m.Value = &EchoAction_Pang{msg}
		return true, err
	default:
		return false, nil
	}
}

func _EchoAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*EchoAction)
	// value
	switch x := m.Value.(type) {
	case *EchoAction_Ping:
		s := proto.Size(x.Ping)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *EchoAction_Pang:
		s := proto.Size(x.Pang)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ping操作生成的日志结构
type PingLog struct {
	Msg   string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	Echo  string `protobuf:"bytes,2,opt,name=echo" json:"echo,omitempty"`
	Count int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *PingLog) Reset()                    { *m = PingLog{} }
func (m *PingLog) String() string            { return proto.CompactTextString(m) }
func (*PingLog) ProtoMessage()               {}
func (*PingLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PingLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PingLog) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *PingLog) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// pang操作生成的日志结构
type PangLog struct {
	Msg   string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	Echo  string `protobuf:"bytes,2,opt,name=echo" json:"echo,omitempty"`
	Count int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *PangLog) Reset()                    { *m = PangLog{} }
func (m *PangLog) String() string            { return proto.CompactTextString(m) }
func (*PangLog) ProtoMessage()               {}
func (*PangLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PangLog) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PangLog) GetEcho() string {
	if m != nil {
		return m.Echo
	}
	return ""
}

func (m *PangLog) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// 查询请求结构
type Query struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Query) Reset()                    { *m = Query{} }
func (m *Query) String() string            { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()               {}
func (*Query) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Query) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 查询结果结构
type QueryResult struct {
	Msg   string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *QueryResult) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *QueryResult) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*Ping)(nil), "types.Ping")
	proto.RegisterType((*Pang)(nil), "types.Pang")
	proto.RegisterType((*EchoAction)(nil), "types.EchoAction")
	proto.RegisterType((*PingLog)(nil), "types.PingLog")
	proto.RegisterType((*PangLog)(nil), "types.PangLog")
	proto.RegisterType((*Query)(nil), "types.Query")
	proto.RegisterType((*QueryResult)(nil), "types.QueryResult")
}

func init() { proto.RegisterFile("echo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0xd1, 0x41, 0x4b, 0x86, 0x30,
	0x18, 0x07, 0xf0, 0xdc, 0xeb, 0x12, 0x1f, 0x21, 0x62, 0x74, 0x58, 0x37, 0xf3, 0xe4, 0xc9, 0x43,
	0xd1, 0x07, 0x28, 0x10, 0x3a, 0x74, 0xa8, 0x7d, 0x83, 0x35, 0x86, 0x4a, 0xb6, 0x89, 0x6e, 0xc1,
	0xbe, 0x7d, 0xec, 0x51, 0xa2, 0x60, 0xb7, 0xf7, 0xf6, 0xc8, 0xff, 0xcf, 0xef, 0x71, 0x1b, 0x80,
	0x56, 0xa3, 0xed, 0x96, 0xd5, 0x3a, 0xcb, 0xa8, 0x0b, 0x8b, 0xde, 0x1a, 0x0e, 0xf9, 0xdb, 0x64,
	0x06, 0x76, 0x0d, 0xa7, 0xaf, 0x6d, 0xe0, 0x59, 0x9d, 0xb5, 0xa5, 0x88, 0x23, 0x26, 0x32, 0x99,
	0x7c, 0x02, 0xf4, 0x6a, 0xb4, 0x4f, 0xca, 0x4d, 0xd6, 0xb0, 0x3b, 0xc8, 0x97, 0xc9, 0xec, 0x85,
	0xea, 0xbe, 0xea, 0xd0, 0xed, 0x22, 0xfa, 0x72, 0x21, 0x30, 0xc2, 0x8a, 0x34, 0x03, 0x27, 0xff,
	0x2b, 0xf2, 0xa8, 0xc4, 0x2d, 0x57, 0x40, 0x5c, 0xe0, 0xa7, 0x3a, 0x6b, 0xa9, 0x20, 0x2e, 0x3c,
	0x17, 0x40, 0xbf, 0xe5, 0xec, 0x75, 0xd3, 0x43, 0x11, 0xad, 0x57, 0x9b, 0xf8, 0x13, 0xc6, 0x20,
	0x8f, 0x47, 0x42, 0xb8, 0x14, 0x38, 0xb3, 0x1b, 0xa0, 0xca, 0x7a, 0xe3, 0x0e, 0x6c, 0xff, 0x40,
	0x46, 0x9e, 0xcf, 0xdc, 0x02, 0x7d, 0xf7, 0x7a, 0x0d, 0x89, 0x5b, 0x79, 0x84, 0x0a, 0x23, 0xa1,
	0x37, 0x3f, 0xbb, 0xc4, 0x96, 0x5f, 0x91, 0xfc, 0x11, 0x3f, 0x2e, 0xf1, 0x39, 0x1e, 0x7e, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x88, 0xae, 0x53, 0xfd, 0x9c, 0x01, 0x00, 0x00,
}
