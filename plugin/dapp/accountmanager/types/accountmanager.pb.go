// Code generated by protoc-gen-go. DO NOT EDIT.
// source: accountmanager.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	accountmanager.proto

It has these top-level messages:
	Accountmanager
	AccountmanagerAction
	Register
	ResetKey
	Apply
	Asset
	Transfer
	Supervise
	Account
	AccountReceipt
	ReplyAccountList
	TransferReceipt
	SuperviseReceipt
	QueryExpiredAccounts
	QueryAccountsByStatus
	QueryAccountByID
	QueryAccountByAddr
	QueryBalanceByID
	Balance
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Accountmanager struct {
}

func (m *Accountmanager) Reset()                    { *m = Accountmanager{} }
func (m *Accountmanager) String() string            { return proto.CompactTextString(m) }
func (*Accountmanager) ProtoMessage()               {}
func (*Accountmanager) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AccountmanagerAction struct {
	// Types that are valid to be assigned to Value:
	//	*AccountmanagerAction_Register
	//	*AccountmanagerAction_ResetKey
	//	*AccountmanagerAction_Transfer
	//	*AccountmanagerAction_Supervise
	//	*AccountmanagerAction_Apply
	Value isAccountmanagerAction_Value `protobuf_oneof:"value"`
	Ty    int32                        `protobuf:"varint,6,opt,name=ty" json:"ty,omitempty"`
}

func (m *AccountmanagerAction) Reset()                    { *m = AccountmanagerAction{} }
func (m *AccountmanagerAction) String() string            { return proto.CompactTextString(m) }
func (*AccountmanagerAction) ProtoMessage()               {}
func (*AccountmanagerAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isAccountmanagerAction_Value interface {
	isAccountmanagerAction_Value()
}

type AccountmanagerAction_Register struct {
	Register *Register `protobuf:"bytes,1,opt,name=register,oneof"`
}
type AccountmanagerAction_ResetKey struct {
	ResetKey *ResetKey `protobuf:"bytes,2,opt,name=resetKey,oneof"`
}
type AccountmanagerAction_Transfer struct {
	Transfer *Transfer `protobuf:"bytes,3,opt,name=transfer,oneof"`
}
type AccountmanagerAction_Supervise struct {
	Supervise *Supervise `protobuf:"bytes,4,opt,name=supervise,oneof"`
}
type AccountmanagerAction_Apply struct {
	Apply *Apply `protobuf:"bytes,5,opt,name=apply,oneof"`
}

func (*AccountmanagerAction_Register) isAccountmanagerAction_Value()  {}
func (*AccountmanagerAction_ResetKey) isAccountmanagerAction_Value()  {}
func (*AccountmanagerAction_Transfer) isAccountmanagerAction_Value()  {}
func (*AccountmanagerAction_Supervise) isAccountmanagerAction_Value() {}
func (*AccountmanagerAction_Apply) isAccountmanagerAction_Value()     {}

func (m *AccountmanagerAction) GetValue() isAccountmanagerAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *AccountmanagerAction) GetRegister() *Register {
	if x, ok := m.GetValue().(*AccountmanagerAction_Register); ok {
		return x.Register
	}
	return nil
}

func (m *AccountmanagerAction) GetResetKey() *ResetKey {
	if x, ok := m.GetValue().(*AccountmanagerAction_ResetKey); ok {
		return x.ResetKey
	}
	return nil
}

func (m *AccountmanagerAction) GetTransfer() *Transfer {
	if x, ok := m.GetValue().(*AccountmanagerAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (m *AccountmanagerAction) GetSupervise() *Supervise {
	if x, ok := m.GetValue().(*AccountmanagerAction_Supervise); ok {
		return x.Supervise
	}
	return nil
}

func (m *AccountmanagerAction) GetApply() *Apply {
	if x, ok := m.GetValue().(*AccountmanagerAction_Apply); ok {
		return x.Apply
	}
	return nil
}

func (m *AccountmanagerAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AccountmanagerAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AccountmanagerAction_OneofMarshaler, _AccountmanagerAction_OneofUnmarshaler, _AccountmanagerAction_OneofSizer, []interface{}{
		(*AccountmanagerAction_Register)(nil),
		(*AccountmanagerAction_ResetKey)(nil),
		(*AccountmanagerAction_Transfer)(nil),
		(*AccountmanagerAction_Supervise)(nil),
		(*AccountmanagerAction_Apply)(nil),
	}
}

func _AccountmanagerAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AccountmanagerAction)
	// value
	switch x := m.Value.(type) {
	case *AccountmanagerAction_Register:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Register); err != nil {
			return err
		}
	case *AccountmanagerAction_ResetKey:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ResetKey); err != nil {
			return err
		}
	case *AccountmanagerAction_Transfer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case *AccountmanagerAction_Supervise:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Supervise); err != nil {
			return err
		}
	case *AccountmanagerAction_Apply:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Apply); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AccountmanagerAction.Value has unexpected type %T", x)
	}
	return nil
}

func _AccountmanagerAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AccountmanagerAction)
	switch tag {
	case 1: // value.register
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Register)
		err := b.DecodeMessage(msg)
		m.Value = &AccountmanagerAction_Register{msg}
		return true, err
	case 2: // value.resetKey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ResetKey)
		err := b.DecodeMessage(msg)
		m.Value = &AccountmanagerAction_ResetKey{msg}
		return true, err
	case 3: // value.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transfer)
		err := b.DecodeMessage(msg)
		m.Value = &AccountmanagerAction_Transfer{msg}
		return true, err
	case 4: // value.supervise
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Supervise)
		err := b.DecodeMessage(msg)
		m.Value = &AccountmanagerAction_Supervise{msg}
		return true, err
	case 5: // value.apply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Apply)
		err := b.DecodeMessage(msg)
		m.Value = &AccountmanagerAction_Apply{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AccountmanagerAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AccountmanagerAction)
	// value
	switch x := m.Value.(type) {
	case *AccountmanagerAction_Register:
		s := proto.Size(x.Register)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AccountmanagerAction_ResetKey:
		s := proto.Size(x.ResetKey)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AccountmanagerAction_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AccountmanagerAction_Supervise:
		s := proto.Size(x.Supervise)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AccountmanagerAction_Apply:
		s := proto.Size(x.Apply)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 注册
type Register struct {
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
}

func (m *Register) Reset()                    { *m = Register{} }
func (m *Register) String() string            { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()               {}
func (*Register) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Register) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

// 重置公钥
type ResetKey struct {
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
	Addr      string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
}

func (m *ResetKey) Reset()                    { *m = ResetKey{} }
func (m *ResetKey) String() string            { return proto.CompactTextString(m) }
func (*ResetKey) ProtoMessage()               {}
func (*ResetKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ResetKey) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *ResetKey) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// 用户申请服务
type Apply struct {
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
	// 操作， 1 撤销账户公钥重置, 2 锁定期结束后，执行重置公钥操作
	Op int32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
}

func (m *Apply) Reset()                    { *m = Apply{} }
func (m *Apply) String() string            { return proto.CompactTextString(m) }
func (*Apply) ProtoMessage()               {}
func (*Apply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Apply) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Apply) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

// 资产类型
type Asset struct {
	Execer string `protobuf:"bytes,1,opt,name=execer" json:"execer,omitempty"`
	Symbol string `protobuf:"bytes,2,opt,name=symbol" json:"symbol,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Asset) GetExecer() string {
	if m != nil {
		return m.Execer
	}
	return ""
}

func (m *Asset) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

// 合约内部账户之间转账
type Transfer struct {
	// 资产类型
	Asset *Asset `protobuf:"bytes,1,opt,name=Asset" json:"Asset,omitempty"`
	// from账户
	FromAccountID string `protobuf:"bytes,2,opt,name=fromAccountID" json:"fromAccountID,omitempty"`
	// to账户
	ToAccountID string `protobuf:"bytes,3,opt,name=toAccountID" json:"toAccountID,omitempty"`
	// 转账金额
	Amount int64 `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
}

func (m *Transfer) Reset()                    { *m = Transfer{} }
func (m *Transfer) String() string            { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()               {}
func (*Transfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Transfer) GetAsset() *Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

func (m *Transfer) GetFromAccountID() string {
	if m != nil {
		return m.FromAccountID
	}
	return ""
}

func (m *Transfer) GetToAccountID() string {
	if m != nil {
		return m.ToAccountID
	}
	return ""
}

func (m *Transfer) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// 管理员监管操作
type Supervise struct {
	// 账户名单
	AccountIDs []string `protobuf:"bytes,1,rep,name=accountIDs" json:"accountIDs,omitempty"`
	// 操作， 1为冻结，2为解冻，3增加有效期
	Op int32 `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
}

func (m *Supervise) Reset()                    { *m = Supervise{} }
func (m *Supervise) String() string            { return proto.CompactTextString(m) }
func (*Supervise) ProtoMessage()               {}
func (*Supervise) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Supervise) GetAccountIDs() []string {
	if m != nil {
		return m.AccountIDs
	}
	return nil
}

func (m *Supervise) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

type Account struct {
	// 账户名称
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
	// 地址
	Addr string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	// 上一次公钥地址
	PrevAddr string `protobuf:"bytes,3,opt,name=prevAddr" json:"prevAddr,omitempty"`
	// 账户状态 1 正常， 2表示冻结, 3表示锁定 4,过期注销
	Status int32 `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	// 注册时间
	CreateTime int64 `protobuf:"varint,5,opt,name=createTime" json:"createTime,omitempty"`
	// 失效时间
	ExpireTime int64 `protobuf:"varint,6,opt,name=expireTime" json:"expireTime,omitempty"`
	// 锁定时间
	LockTime int64 `protobuf:"varint,7,opt,name=lockTime" json:"lockTime,omitempty"`
	// 索引
	Index int64 `protobuf:"varint,8,opt,name=index" json:"index,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Account) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *Account) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *Account) GetPrevAddr() string {
	if m != nil {
		return m.PrevAddr
	}
	return ""
}

func (m *Account) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Account) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Account) GetExpireTime() int64 {
	if m != nil {
		return m.ExpireTime
	}
	return 0
}

func (m *Account) GetLockTime() int64 {
	if m != nil {
		return m.LockTime
	}
	return 0
}

func (m *Account) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type AccountReceipt struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *AccountReceipt) Reset()                    { *m = AccountReceipt{} }
func (m *AccountReceipt) String() string            { return proto.CompactTextString(m) }
func (*AccountReceipt) ProtoMessage()               {}
func (*AccountReceipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AccountReceipt) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ReplyAccountList struct {
	Accounts   []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	PrimaryKey string     `protobuf:"bytes,2,opt,name=primaryKey" json:"primaryKey,omitempty"`
}

func (m *ReplyAccountList) Reset()                    { *m = ReplyAccountList{} }
func (m *ReplyAccountList) String() string            { return proto.CompactTextString(m) }
func (*ReplyAccountList) ProtoMessage()               {}
func (*ReplyAccountList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReplyAccountList) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *ReplyAccountList) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

type TransferReceipt struct {
	FromAccount *Account `protobuf:"bytes,1,opt,name=FromAccount" json:"FromAccount,omitempty"`
	ToAccount   *Account `protobuf:"bytes,2,opt,name=ToAccount" json:"ToAccount,omitempty"`
	Index       int64    `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *TransferReceipt) Reset()                    { *m = TransferReceipt{} }
func (m *TransferReceipt) String() string            { return proto.CompactTextString(m) }
func (*TransferReceipt) ProtoMessage()               {}
func (*TransferReceipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *TransferReceipt) GetFromAccount() *Account {
	if m != nil {
		return m.FromAccount
	}
	return nil
}

func (m *TransferReceipt) GetToAccount() *Account {
	if m != nil {
		return m.ToAccount
	}
	return nil
}

func (m *TransferReceipt) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

// 回执日志
type SuperviseReceipt struct {
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts" json:"accounts,omitempty"`
	Op       int32      `protobuf:"varint,2,opt,name=op" json:"op,omitempty"`
	Index    int64      `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
}

func (m *SuperviseReceipt) Reset()                    { *m = SuperviseReceipt{} }
func (m *SuperviseReceipt) String() string            { return proto.CompactTextString(m) }
func (*SuperviseReceipt) ProtoMessage()               {}
func (*SuperviseReceipt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SuperviseReceipt) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *SuperviseReceipt) GetOp() int32 {
	if m != nil {
		return m.Op
	}
	return 0
}

func (m *SuperviseReceipt) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type QueryExpiredAccounts struct {
	PrimaryKey string `protobuf:"bytes,1,opt,name=primaryKey" json:"primaryKey,omitempty"`
	// 第一次需要传入逾期时间，时间戳
	ExpiredTime int64 `protobuf:"varint,2,opt,name=expiredTime" json:"expiredTime,omitempty"`
	// 单页返回多少条记录，默认返回10条
	// 0降序，1升序，默认降序
	Direction int32 `protobuf:"varint,3,opt,name=direction" json:"direction,omitempty"`
}

func (m *QueryExpiredAccounts) Reset()                    { *m = QueryExpiredAccounts{} }
func (m *QueryExpiredAccounts) String() string            { return proto.CompactTextString(m) }
func (*QueryExpiredAccounts) ProtoMessage()               {}
func (*QueryExpiredAccounts) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *QueryExpiredAccounts) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *QueryExpiredAccounts) GetExpiredTime() int64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func (m *QueryExpiredAccounts) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type QueryAccountsByStatus struct {
	// 账户状态 1 正常， 2表示冻结, 3表示锁定
	Status int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	// 主键索引
	PrimaryKey string `protobuf:"bytes,3,opt,name=primaryKey" json:"primaryKey,omitempty"`
	// 0降序，1升序，默认降序
	Direction int32 `protobuf:"varint,5,opt,name=direction" json:"direction,omitempty"`
}

func (m *QueryAccountsByStatus) Reset()                    { *m = QueryAccountsByStatus{} }
func (m *QueryAccountsByStatus) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountsByStatus) ProtoMessage()               {}
func (*QueryAccountsByStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *QueryAccountsByStatus) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *QueryAccountsByStatus) GetPrimaryKey() string {
	if m != nil {
		return m.PrimaryKey
	}
	return ""
}

func (m *QueryAccountsByStatus) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type QueryAccountByID struct {
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
}

func (m *QueryAccountByID) Reset()                    { *m = QueryAccountByID{} }
func (m *QueryAccountByID) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountByID) ProtoMessage()               {}
func (*QueryAccountByID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *QueryAccountByID) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

type QueryAccountByAddr struct {
	Addr string `protobuf:"bytes,1,opt,name=addr" json:"addr,omitempty"`
}

func (m *QueryAccountByAddr) Reset()                    { *m = QueryAccountByAddr{} }
func (m *QueryAccountByAddr) String() string            { return proto.CompactTextString(m) }
func (*QueryAccountByAddr) ProtoMessage()               {}
func (*QueryAccountByAddr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *QueryAccountByAddr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type QueryBalanceByID struct {
	AccountID string `protobuf:"bytes,1,opt,name=accountID" json:"accountID,omitempty"`
	Asset     *Asset `protobuf:"bytes,2,opt,name=asset" json:"asset,omitempty"`
}

func (m *QueryBalanceByID) Reset()                    { *m = QueryBalanceByID{} }
func (m *QueryBalanceByID) String() string            { return proto.CompactTextString(m) }
func (*QueryBalanceByID) ProtoMessage()               {}
func (*QueryBalanceByID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *QueryBalanceByID) GetAccountID() string {
	if m != nil {
		return m.AccountID
	}
	return ""
}

func (m *QueryBalanceByID) GetAsset() *Asset {
	if m != nil {
		return m.Asset
	}
	return nil
}

type Balance struct {
	Balance int64 `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
	Frozen  int64 `protobuf:"varint,2,opt,name=frozen" json:"frozen,omitempty"`
}

func (m *Balance) Reset()                    { *m = Balance{} }
func (m *Balance) String() string            { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()               {}
func (*Balance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Balance) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Balance) GetFrozen() int64 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

func init() {
	proto.RegisterType((*Accountmanager)(nil), "types.Accountmanager")
	proto.RegisterType((*AccountmanagerAction)(nil), "types.AccountmanagerAction")
	proto.RegisterType((*Register)(nil), "types.Register")
	proto.RegisterType((*ResetKey)(nil), "types.ResetKey")
	proto.RegisterType((*Apply)(nil), "types.Apply")
	proto.RegisterType((*Asset)(nil), "types.asset")
	proto.RegisterType((*Transfer)(nil), "types.Transfer")
	proto.RegisterType((*Supervise)(nil), "types.Supervise")
	proto.RegisterType((*Account)(nil), "types.account")
	proto.RegisterType((*AccountReceipt)(nil), "types.AccountReceipt")
	proto.RegisterType((*ReplyAccountList)(nil), "types.ReplyAccountList")
	proto.RegisterType((*TransferReceipt)(nil), "types.TransferReceipt")
	proto.RegisterType((*SuperviseReceipt)(nil), "types.SuperviseReceipt")
	proto.RegisterType((*QueryExpiredAccounts)(nil), "types.QueryExpiredAccounts")
	proto.RegisterType((*QueryAccountsByStatus)(nil), "types.QueryAccountsByStatus")
	proto.RegisterType((*QueryAccountByID)(nil), "types.QueryAccountByID")
	proto.RegisterType((*QueryAccountByAddr)(nil), "types.QueryAccountByAddr")
	proto.RegisterType((*QueryBalanceByID)(nil), "types.QueryBalanceByID")
	proto.RegisterType((*Balance)(nil), "types.balance")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Accountmanager service

type AccountmanagerClient interface {
}

type accountmanagerClient struct {
	cc *grpc.ClientConn
}

func NewAccountmanagerClient(cc *grpc.ClientConn) AccountmanagerClient {
	return &accountmanagerClient{cc}
}

// Server API for Accountmanager service

type AccountmanagerServer interface {
}

func RegisterAccountmanagerServer(s *grpc.Server, srv AccountmanagerServer) {
	s.RegisterService(&_Accountmanager_serviceDesc, srv)
}

var _Accountmanager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.accountmanager",
	HandlerType: (*AccountmanagerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "accountmanager.proto",
}

func init() { proto.RegisterFile("accountmanager.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 719 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcf, 0x6a, 0x1b, 0x3f,
	0x10, 0xce, 0x7a, 0xb3, 0xb6, 0x77, 0xf2, 0xfb, 0x39, 0x46, 0xb8, 0x61, 0x29, 0xa5, 0x18, 0x91,
	0x83, 0x29, 0x6d, 0x08, 0x29, 0xa5, 0xd0, 0xf4, 0x62, 0x93, 0x96, 0x84, 0xf6, 0x52, 0xc5, 0xe7,
	0x82, 0xb2, 0x56, 0xc2, 0x52, 0xdb, 0xbb, 0x68, 0x65, 0x93, 0xed, 0x0b, 0xf4, 0xd6, 0x53, 0x5f,
	0xb0, 0x6f, 0x52, 0x34, 0x92, 0xf6, 0x5f, 0x9a, 0x86, 0x9c, 0xbc, 0xf3, 0x7d, 0x9f, 0x66, 0x46,
	0x33, 0xa3, 0x31, 0x8c, 0x78, 0x1c, 0xa7, 0x9b, 0xb5, 0x5a, 0xf1, 0x35, 0xbf, 0x11, 0xf2, 0x28,
	0x93, 0xa9, 0x4a, 0x49, 0xa0, 0x8a, 0x4c, 0xe4, 0x74, 0x08, 0x83, 0x69, 0x83, 0xa6, 0xbf, 0x3a,
	0x30, 0x6a, 0x42, 0xd3, 0x58, 0x25, 0xe9, 0x9a, 0xbc, 0x82, 0xbe, 0x14, 0x37, 0x49, 0xae, 0x84,
	0x8c, 0xbc, 0xb1, 0x37, 0xd9, 0x3b, 0xd9, 0x3f, 0x42, 0x27, 0x47, 0xcc, 0xc2, 0xe7, 0x3b, 0xac,
	0x94, 0x18, 0x79, 0x2e, 0xd4, 0x27, 0x51, 0x44, 0x9d, 0x96, 0xdc, 0xc0, 0x46, 0x6e, 0xbe, 0xb5,
	0x5c, 0x49, 0xbe, 0xce, 0xaf, 0x85, 0x8c, 0xfc, 0x86, 0x7c, 0x6e, 0x61, 0x2d, 0x77, 0x12, 0x72,
	0x0c, 0x61, 0xbe, 0xc9, 0x84, 0xdc, 0x26, 0xb9, 0x88, 0x76, 0x51, 0x3f, 0xb4, 0xfa, 0x4b, 0x87,
	0x9f, 0xef, 0xb0, 0x4a, 0x44, 0x0e, 0x21, 0xe0, 0x59, 0xb6, 0x2c, 0xa2, 0x00, 0xd5, 0xff, 0x59,
	0xf5, 0x54, 0x63, 0xe7, 0x3b, 0xcc, 0x90, 0x64, 0x00, 0x1d, 0x55, 0x44, 0xdd, 0xb1, 0x37, 0x09,
	0x58, 0x47, 0x15, 0xb3, 0x1e, 0x04, 0x5b, 0xbe, 0xdc, 0x08, 0x3a, 0x81, 0xbe, 0xbb, 0x26, 0x79,
	0x06, 0xa1, 0xad, 0xe9, 0xc5, 0x19, 0x96, 0x22, 0x64, 0x15, 0x40, 0xdf, 0x6b, 0xa5, 0xbd, 0xd5,
	0x3f, 0x95, 0x84, 0xc0, 0x2e, 0x5f, 0x2c, 0x24, 0x96, 0x27, 0x64, 0xf8, 0x4d, 0xdf, 0x40, 0x80,
	0x29, 0x3d, 0x70, 0x74, 0x00, 0x9d, 0x34, 0xc3, 0x83, 0x01, 0xeb, 0xa4, 0x19, 0x7d, 0x0b, 0x01,
	0xcf, 0x73, 0xa1, 0xc8, 0x01, 0x74, 0xc5, 0xad, 0x88, 0x6d, 0x8f, 0x42, 0x66, 0x2d, 0x8d, 0xe7,
	0xc5, 0xea, 0x2a, 0x5d, 0xda, 0x68, 0xd6, 0xa2, 0x3f, 0x3d, 0xe8, 0xbb, 0x0a, 0x13, 0x0a, 0xc1,
	0x54, 0x7b, 0xb1, 0xfd, 0x75, 0x35, 0x42, 0xcf, 0xcc, 0x50, 0xe4, 0x10, 0xfe, 0xbf, 0x96, 0xe9,
	0x6a, 0x5a, 0xe6, 0x66, 0xfc, 0x35, 0x41, 0x32, 0x86, 0x3d, 0x95, 0x56, 0x1a, 0x1f, 0x35, 0x75,
	0x48, 0x27, 0xc4, 0x57, 0xfa, 0x1b, 0xdb, 0xe7, 0x33, 0x6b, 0xd1, 0x53, 0x08, 0xcb, 0x0e, 0x92,
	0xe7, 0x00, 0xe5, 0x9d, 0xf3, 0xc8, 0x1b, 0xfb, 0x93, 0x90, 0xd5, 0x90, 0x3b, 0x65, 0xf8, 0xed,
	0x41, 0xcf, 0xd2, 0x8f, 0xaf, 0x3d, 0x79, 0x0a, 0xfd, 0x4c, 0x8a, 0xed, 0x54, 0xe3, 0x26, 0xe3,
	0xd2, 0xc6, 0xfa, 0x29, 0xae, 0x36, 0x39, 0xa6, 0x1b, 0x30, 0x6b, 0xe9, 0x0c, 0x63, 0x29, 0xb8,
	0x12, 0xf3, 0x64, 0x25, 0x70, 0xb6, 0x7c, 0x56, 0x43, 0x34, 0x2f, 0x6e, 0xb3, 0x44, 0x1a, 0xbe,
	0x6b, 0xf8, 0x0a, 0xd1, 0x31, 0x97, 0x69, 0xfc, 0x0d, 0xd9, 0x1e, 0xb2, 0xa5, 0x4d, 0x46, 0x10,
	0x24, 0xeb, 0x85, 0xb8, 0x8d, 0xfa, 0x48, 0x18, 0x83, 0xbe, 0x2b, 0x9f, 0x2c, 0x13, 0xb1, 0x48,
	0x32, 0x45, 0x26, 0xe5, 0xa5, 0x6d, 0xe3, 0x06, 0xae, 0x71, 0x56, 0xe7, 0x68, 0xfa, 0x15, 0x86,
	0x4c, 0x64, 0xcb, 0xc2, 0x3a, 0xf8, 0x9c, 0xe4, 0x8a, 0xbc, 0x80, 0xbe, 0xa5, 0x4d, 0x85, 0xef,
	0x1e, 0x2f, 0x79, 0x7d, 0x9b, 0x4c, 0x26, 0x2b, 0x2e, 0x0b, 0xf7, 0xac, 0x43, 0x56, 0x43, 0xe8,
	0x0f, 0x0f, 0xf6, 0xdd, 0x34, 0xb9, 0xec, 0x8e, 0x61, 0xef, 0x63, 0x35, 0x1b, 0xf7, 0x64, 0x58,
	0x97, 0x90, 0x97, 0x10, 0xce, 0xdd, 0xa4, 0xd8, 0xdd, 0xd1, 0xd6, 0x57, 0x82, 0xaa, 0x4a, 0x7e,
	0xbd, 0x4a, 0x0b, 0x18, 0x96, 0x63, 0xe4, 0x32, 0x79, 0xcc, 0x4d, 0x5b, 0x93, 0x75, 0x4f, 0x94,
	0x2d, 0x8c, 0xbe, 0x6c, 0x84, 0x2c, 0x3e, 0x60, 0x43, 0x17, 0xd3, 0xbf, 0xd7, 0xc9, 0x6b, 0xd7,
	0x49, 0x3f, 0x0f, 0x33, 0x03, 0x0b, 0x6c, 0x7c, 0x07, 0x7d, 0xd6, 0x21, 0x3d, 0xbd, 0x8b, 0x44,
	0x0a, 0x5c, 0xbd, 0x18, 0x33, 0x60, 0x15, 0x40, 0x57, 0xf0, 0x04, 0xe3, 0xba, 0x80, 0xb3, 0xe2,
	0xd2, 0x8c, 0x63, 0x35, 0xa6, 0x5e, 0x7b, 0x4c, 0x6b, 0x09, 0xf9, 0x77, 0x12, 0x6a, 0x84, 0x0b,
	0xda, 0xe1, 0x8e, 0x61, 0x58, 0x0f, 0x37, 0x2b, 0x2e, 0xce, 0x1e, 0x58, 0x82, 0x13, 0x20, 0xcd,
	0x13, 0xf8, 0x88, 0xdc, 0xa3, 0xf3, 0x6a, 0x0b, 0x6f, 0x6e, 0x7d, 0xcf, 0xf8, 0x92, 0xaf, 0x63,
	0xf1, 0xb0, 0x6f, 0xbd, 0xa5, 0x70, 0x23, 0xd9, 0xd1, 0x68, 0x6d, 0x29, 0xfc, 0xa1, 0xa7, 0xd0,
	0xbb, 0x32, 0x0e, 0x49, 0x54, 0x7e, 0xa2, 0x2b, 0x9f, 0x95, 0xcc, 0x01, 0x74, 0xaf, 0x65, 0xfa,
	0x5d, 0xac, 0x6d, 0x03, 0xac, 0x75, 0x32, 0x84, 0x41, 0xf3, 0x3f, 0xf3, 0xaa, 0x8b, 0x7f, 0x9a,
	0xaf, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x71, 0xbc, 0x47, 0xe4, 0x4c, 0x07, 0x00, 0x00,
}
