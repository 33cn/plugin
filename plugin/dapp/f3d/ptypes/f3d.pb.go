// Code generated by protoc-gen-go. DO NOT EDIT.
// source: f3d.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoundInfo struct {
	// 游戏轮次
	Round int64 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	// 本轮游戏开始事件
	BeginTime int64 `protobuf:"varint,2,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	// 本轮游戏结束时间
	EndTime int64 `protobuf:"varint,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 本轮游戏目前为止最后一把钥匙持有人（游戏开奖时，这个就是中奖人）
	LastOwner string `protobuf:"bytes,4,opt,name=lastOwner,proto3" json:"lastOwner,omitempty"`
	// 最后一把钥匙的购买时间
	LastKeyTime int64 `protobuf:"varint,5,opt,name=lastKeyTime,proto3" json:"lastKeyTime,omitempty"`
	// 最后一把钥匙的价格
	LastKeyPrice float32 `protobuf:"fixed32,6,opt,name=lastKeyPrice,proto3" json:"lastKeyPrice,omitempty"`
	// 本轮游戏奖金池总额
	BonusPool float32 `protobuf:"fixed32,7,opt,name=bonusPool,proto3" json:"bonusPool,omitempty"`
	// 本轮游戏参与地址数
	UserCount int64 `protobuf:"varint,8,opt,name=userCount,proto3" json:"userCount,omitempty"`
	// 本轮游戏募集到的key个数
	KeyCount int64 `protobuf:"varint,9,opt,name=keyCount,proto3" json:"keyCount,omitempty"`
	// 距离开奖剩余时间
	RemainTime           int64    `protobuf:"varint,10,opt,name=remainTime,proto3" json:"remainTime,omitempty"`
	UpdateTime           int64    `protobuf:"varint,11,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundInfo) Reset()         { *m = RoundInfo{} }
func (m *RoundInfo) String() string { return proto.CompactTextString(m) }
func (*RoundInfo) ProtoMessage()    {}
func (*RoundInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{0}
}
func (m *RoundInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundInfo.Unmarshal(m, b)
}
func (m *RoundInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundInfo.Marshal(b, m, deterministic)
}
func (dst *RoundInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundInfo.Merge(dst, src)
}
func (m *RoundInfo) XXX_Size() int {
	return xxx_messageInfo_RoundInfo.Size(m)
}
func (m *RoundInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RoundInfo proto.InternalMessageInfo

func (m *RoundInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundInfo) GetBeginTime() int64 {
	if m != nil {
		return m.BeginTime
	}
	return 0
}

func (m *RoundInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *RoundInfo) GetLastOwner() string {
	if m != nil {
		return m.LastOwner
	}
	return ""
}

func (m *RoundInfo) GetLastKeyTime() int64 {
	if m != nil {
		return m.LastKeyTime
	}
	return 0
}

func (m *RoundInfo) GetLastKeyPrice() float32 {
	if m != nil {
		return m.LastKeyPrice
	}
	return 0
}

func (m *RoundInfo) GetBonusPool() float32 {
	if m != nil {
		return m.BonusPool
	}
	return 0
}

func (m *RoundInfo) GetUserCount() int64 {
	if m != nil {
		return m.UserCount
	}
	return 0
}

func (m *RoundInfo) GetKeyCount() int64 {
	if m != nil {
		return m.KeyCount
	}
	return 0
}

func (m *RoundInfo) GetRemainTime() int64 {
	if m != nil {
		return m.RemainTime
	}
	return 0
}

func (m *RoundInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

type KeyInfo struct {
	// 游戏轮次  (是由系统合约填写后存储）
	Round int64 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	// 本次购买key的价格 (是由系统合约填写后存储）
	KeyPrice float32 `protobuf:"fixed32,2,opt,name=keyPrice,proto3" json:"keyPrice,omitempty"`
	// 用户本次买的key的数量
	KeyNum int64 `protobuf:"varint,3,opt,name=keyNum,proto3" json:"keyNum,omitempty"`
	// 用户地址 (是由系统合约填写后存储）
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	// 交易确认存储时间（被打包的时间）
	BuyKeyTime int64 `protobuf:"varint,7,opt,name=buyKeyTime,proto3" json:"buyKeyTime,omitempty"`
	// 买票的txHash
	BuyKeyTxHash         string   `protobuf:"bytes,9,opt,name=buyKeyTxHash,proto3" json:"buyKeyTxHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyInfo) Reset()         { *m = KeyInfo{} }
func (m *KeyInfo) String() string { return proto.CompactTextString(m) }
func (*KeyInfo) ProtoMessage()    {}
func (*KeyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{1}
}
func (m *KeyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyInfo.Unmarshal(m, b)
}
func (m *KeyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyInfo.Marshal(b, m, deterministic)
}
func (dst *KeyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyInfo.Merge(dst, src)
}
func (m *KeyInfo) XXX_Size() int {
	return xxx_messageInfo_KeyInfo.Size(m)
}
func (m *KeyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_KeyInfo proto.InternalMessageInfo

func (m *KeyInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *KeyInfo) GetKeyPrice() float32 {
	if m != nil {
		return m.KeyPrice
	}
	return 0
}

func (m *KeyInfo) GetKeyNum() int64 {
	if m != nil {
		return m.KeyNum
	}
	return 0
}

func (m *KeyInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *KeyInfo) GetBuyKeyTime() int64 {
	if m != nil {
		return m.BuyKeyTime
	}
	return 0
}

func (m *KeyInfo) GetBuyKeyTxHash() string {
	if m != nil {
		return m.BuyKeyTxHash
	}
	return ""
}

// message for execs.f3d
type F3DAction struct {
	// Types that are valid to be assigned to Value:
	//	*F3DAction_Start
	//	*F3DAction_Draw
	//	*F3DAction_Buy
	Value                isF3DAction_Value `protobuf_oneof:"value"`
	Ty                   int32             `protobuf:"varint,4,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *F3DAction) Reset()         { *m = F3DAction{} }
func (m *F3DAction) String() string { return proto.CompactTextString(m) }
func (*F3DAction) ProtoMessage()    {}
func (*F3DAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{2}
}
func (m *F3DAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F3DAction.Unmarshal(m, b)
}
func (m *F3DAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F3DAction.Marshal(b, m, deterministic)
}
func (dst *F3DAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F3DAction.Merge(dst, src)
}
func (m *F3DAction) XXX_Size() int {
	return xxx_messageInfo_F3DAction.Size(m)
}
func (m *F3DAction) XXX_DiscardUnknown() {
	xxx_messageInfo_F3DAction.DiscardUnknown(m)
}

var xxx_messageInfo_F3DAction proto.InternalMessageInfo

type isF3DAction_Value interface {
	isF3DAction_Value()
}

type F3DAction_Start struct {
	Start *F3DStart `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}
type F3DAction_Draw struct {
	Draw *F3DLuckyDraw `protobuf:"bytes,2,opt,name=draw,proto3,oneof"`
}
type F3DAction_Buy struct {
	Buy *F3DBuyKey `protobuf:"bytes,3,opt,name=buy,proto3,oneof"`
}

func (*F3DAction_Start) isF3DAction_Value() {}
func (*F3DAction_Draw) isF3DAction_Value()  {}
func (*F3DAction_Buy) isF3DAction_Value()   {}

func (m *F3DAction) GetValue() isF3DAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *F3DAction) GetStart() *F3DStart {
	if x, ok := m.GetValue().(*F3DAction_Start); ok {
		return x.Start
	}
	return nil
}

func (m *F3DAction) GetDraw() *F3DLuckyDraw {
	if x, ok := m.GetValue().(*F3DAction_Draw); ok {
		return x.Draw
	}
	return nil
}

func (m *F3DAction) GetBuy() *F3DBuyKey {
	if x, ok := m.GetValue().(*F3DAction_Buy); ok {
		return x.Buy
	}
	return nil
}

func (m *F3DAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*F3DAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _F3DAction_OneofMarshaler, _F3DAction_OneofUnmarshaler, _F3DAction_OneofSizer, []interface{}{
		(*F3DAction_Start)(nil),
		(*F3DAction_Draw)(nil),
		(*F3DAction_Buy)(nil),
	}
}

func _F3DAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*F3DAction)
	// value
	switch x := m.Value.(type) {
	case *F3DAction_Start:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Start); err != nil {
			return err
		}
	case *F3DAction_Draw:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Draw); err != nil {
			return err
		}
	case *F3DAction_Buy:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Buy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("F3DAction.Value has unexpected type %T", x)
	}
	return nil
}

func _F3DAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*F3DAction)
	switch tag {
	case 1: // value.start
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(F3DStart)
		err := b.DecodeMessage(msg)
		m.Value = &F3DAction_Start{msg}
		return true, err
	case 2: // value.draw
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(F3DLuckyDraw)
		err := b.DecodeMessage(msg)
		m.Value = &F3DAction_Draw{msg}
		return true, err
	case 3: // value.buy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(F3DBuyKey)
		err := b.DecodeMessage(msg)
		m.Value = &F3DAction_Buy{msg}
		return true, err
	default:
		return false, nil
	}
}

func _F3DAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*F3DAction)
	// value
	switch x := m.Value.(type) {
	case *F3DAction_Start:
		s := proto.Size(x.Start)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *F3DAction_Draw:
		s := proto.Size(x.Draw)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *F3DAction_Buy:
		s := proto.Size(x.Buy)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type F3DStart struct {
	// 轮次，这个填不填不重要，合约里面会自动校验的
	Round                int64    `protobuf:"varint,1,opt,name=Round,proto3" json:"Round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F3DStart) Reset()         { *m = F3DStart{} }
func (m *F3DStart) String() string { return proto.CompactTextString(m) }
func (*F3DStart) ProtoMessage()    {}
func (*F3DStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{3}
}
func (m *F3DStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F3DStart.Unmarshal(m, b)
}
func (m *F3DStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F3DStart.Marshal(b, m, deterministic)
}
func (dst *F3DStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F3DStart.Merge(dst, src)
}
func (m *F3DStart) XXX_Size() int {
	return xxx_messageInfo_F3DStart.Size(m)
}
func (m *F3DStart) XXX_DiscardUnknown() {
	xxx_messageInfo_F3DStart.DiscardUnknown(m)
}

var xxx_messageInfo_F3DStart proto.InternalMessageInfo

func (m *F3DStart) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type F3DLuckyDraw struct {
	// 轮次，这个填不填不重要，合约里面会自动校验的
	Round                int64    `protobuf:"varint,1,opt,name=Round,proto3" json:"Round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F3DLuckyDraw) Reset()         { *m = F3DLuckyDraw{} }
func (m *F3DLuckyDraw) String() string { return proto.CompactTextString(m) }
func (*F3DLuckyDraw) ProtoMessage()    {}
func (*F3DLuckyDraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{4}
}
func (m *F3DLuckyDraw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F3DLuckyDraw.Unmarshal(m, b)
}
func (m *F3DLuckyDraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F3DLuckyDraw.Marshal(b, m, deterministic)
}
func (dst *F3DLuckyDraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F3DLuckyDraw.Merge(dst, src)
}
func (m *F3DLuckyDraw) XXX_Size() int {
	return xxx_messageInfo_F3DLuckyDraw.Size(m)
}
func (m *F3DLuckyDraw) XXX_DiscardUnknown() {
	xxx_messageInfo_F3DLuckyDraw.DiscardUnknown(m)
}

var xxx_messageInfo_F3DLuckyDraw proto.InternalMessageInfo

func (m *F3DLuckyDraw) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type F3DBuyKey struct {
	// 用户本次买的key的数量
	KeyNum               int64    `protobuf:"varint,3,opt,name=keyNum,proto3" json:"keyNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F3DBuyKey) Reset()         { *m = F3DBuyKey{} }
func (m *F3DBuyKey) String() string { return proto.CompactTextString(m) }
func (*F3DBuyKey) ProtoMessage()    {}
func (*F3DBuyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{5}
}
func (m *F3DBuyKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F3DBuyKey.Unmarshal(m, b)
}
func (m *F3DBuyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F3DBuyKey.Marshal(b, m, deterministic)
}
func (dst *F3DBuyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F3DBuyKey.Merge(dst, src)
}
func (m *F3DBuyKey) XXX_Size() int {
	return xxx_messageInfo_F3DBuyKey.Size(m)
}
func (m *F3DBuyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_F3DBuyKey.DiscardUnknown(m)
}

var xxx_messageInfo_F3DBuyKey proto.InternalMessageInfo

func (m *F3DBuyKey) GetKeyNum() int64 {
	if m != nil {
		return m.KeyNum
	}
	return 0
}

// 查询f3d 游戏信息,这里面其实包含了key的最新价格信息
type QueryF3DByRound struct {
	// 轮次，默认查询最新的
	Round                int64    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryF3DByRound) Reset()         { *m = QueryF3DByRound{} }
func (m *QueryF3DByRound) String() string { return proto.CompactTextString(m) }
func (*QueryF3DByRound) ProtoMessage()    {}
func (*QueryF3DByRound) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{6}
}
func (m *QueryF3DByRound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryF3DByRound.Unmarshal(m, b)
}
func (m *QueryF3DByRound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryF3DByRound.Marshal(b, m, deterministic)
}
func (dst *QueryF3DByRound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryF3DByRound.Merge(dst, src)
}
func (m *QueryF3DByRound) XXX_Size() int {
	return xxx_messageInfo_QueryF3DByRound.Size(m)
}
func (m *QueryF3DByRound) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryF3DByRound.DiscardUnknown(m)
}

var xxx_messageInfo_QueryF3DByRound proto.InternalMessageInfo

func (m *QueryF3DByRound) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type QueryF3DListByRound struct {
	// 轮次，默认查询最新的
	StartRound int64 `protobuf:"varint,1,opt,name=startRound,proto3" json:"startRound,omitempty"`
	// 单页返回多少条记录，默认返回10条，单次最多返回50条
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// 0降序，1升序，默认降序
	Direction            int32    `protobuf:"varint,5,opt,name=direction,proto3" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryF3DListByRound) Reset()         { *m = QueryF3DListByRound{} }
func (m *QueryF3DListByRound) String() string { return proto.CompactTextString(m) }
func (*QueryF3DListByRound) ProtoMessage()    {}
func (*QueryF3DListByRound) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{7}
}
func (m *QueryF3DListByRound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryF3DListByRound.Unmarshal(m, b)
}
func (m *QueryF3DListByRound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryF3DListByRound.Marshal(b, m, deterministic)
}
func (dst *QueryF3DListByRound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryF3DListByRound.Merge(dst, src)
}
func (m *QueryF3DListByRound) XXX_Size() int {
	return xxx_messageInfo_QueryF3DListByRound.Size(m)
}
func (m *QueryF3DListByRound) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryF3DListByRound.DiscardUnknown(m)
}

var xxx_messageInfo_QueryF3DListByRound proto.InternalMessageInfo

func (m *QueryF3DListByRound) GetStartRound() int64 {
	if m != nil {
		return m.StartRound
	}
	return 0
}

func (m *QueryF3DListByRound) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryF3DListByRound) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

// key 信息查询
type QueryKeysByRoundAndAddr struct {
	// 轮次,必填参数
	Round int64 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	// 用户地址
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryKeysByRoundAndAddr) Reset()         { *m = QueryKeysByRoundAndAddr{} }
func (m *QueryKeysByRoundAndAddr) String() string { return proto.CompactTextString(m) }
func (*QueryKeysByRoundAndAddr) ProtoMessage()    {}
func (*QueryKeysByRoundAndAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{8}
}
func (m *QueryKeysByRoundAndAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryKeysByRoundAndAddr.Unmarshal(m, b)
}
func (m *QueryKeysByRoundAndAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryKeysByRoundAndAddr.Marshal(b, m, deterministic)
}
func (dst *QueryKeysByRoundAndAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryKeysByRoundAndAddr.Merge(dst, src)
}
func (m *QueryKeysByRoundAndAddr) XXX_Size() int {
	return xxx_messageInfo_QueryKeysByRoundAndAddr.Size(m)
}
func (m *QueryKeysByRoundAndAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryKeysByRoundAndAddr.DiscardUnknown(m)
}

var xxx_messageInfo_QueryKeysByRoundAndAddr proto.InternalMessageInfo

func (m *QueryKeysByRoundAndAddr) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *QueryKeysByRoundAndAddr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

// 用户key数量查询
type QueryKeyCountByRoundAndAddr struct {
	// 轮次,必填参数
	Round int64 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	// 用户地址
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryKeyCountByRoundAndAddr) Reset()         { *m = QueryKeyCountByRoundAndAddr{} }
func (m *QueryKeyCountByRoundAndAddr) String() string { return proto.CompactTextString(m) }
func (*QueryKeyCountByRoundAndAddr) ProtoMessage()    {}
func (*QueryKeyCountByRoundAndAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{9}
}
func (m *QueryKeyCountByRoundAndAddr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryKeyCountByRoundAndAddr.Unmarshal(m, b)
}
func (m *QueryKeyCountByRoundAndAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryKeyCountByRoundAndAddr.Marshal(b, m, deterministic)
}
func (dst *QueryKeyCountByRoundAndAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryKeyCountByRoundAndAddr.Merge(dst, src)
}
func (m *QueryKeyCountByRoundAndAddr) XXX_Size() int {
	return xxx_messageInfo_QueryKeyCountByRoundAndAddr.Size(m)
}
func (m *QueryKeyCountByRoundAndAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryKeyCountByRoundAndAddr.DiscardUnknown(m)
}

var xxx_messageInfo_QueryKeyCountByRoundAndAddr proto.InternalMessageInfo

func (m *QueryKeyCountByRoundAndAddr) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *QueryKeyCountByRoundAndAddr) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type QueryAddrInfo struct {
	Round                int64    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryAddrInfo) Reset()         { *m = QueryAddrInfo{} }
func (m *QueryAddrInfo) String() string { return proto.CompactTextString(m) }
func (*QueryAddrInfo) ProtoMessage()    {}
func (*QueryAddrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{10}
}
func (m *QueryAddrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAddrInfo.Unmarshal(m, b)
}
func (m *QueryAddrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAddrInfo.Marshal(b, m, deterministic)
}
func (dst *QueryAddrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAddrInfo.Merge(dst, src)
}
func (m *QueryAddrInfo) XXX_Size() int {
	return xxx_messageInfo_QueryAddrInfo.Size(m)
}
func (m *QueryAddrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAddrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAddrInfo proto.InternalMessageInfo

func (m *QueryAddrInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *QueryAddrInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *QueryAddrInfo) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *QueryAddrInfo) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type F3DRecord struct {
	// 用户地址
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// index
	Index int64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// round
	Round                int64    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *F3DRecord) Reset()         { *m = F3DRecord{} }
func (m *F3DRecord) String() string { return proto.CompactTextString(m) }
func (*F3DRecord) ProtoMessage()    {}
func (*F3DRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{11}
}
func (m *F3DRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_F3DRecord.Unmarshal(m, b)
}
func (m *F3DRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_F3DRecord.Marshal(b, m, deterministic)
}
func (dst *F3DRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_F3DRecord.Merge(dst, src)
}
func (m *F3DRecord) XXX_Size() int {
	return xxx_messageInfo_F3DRecord.Size(m)
}
func (m *F3DRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_F3DRecord.DiscardUnknown(m)
}

var xxx_messageInfo_F3DRecord proto.InternalMessageInfo

func (m *F3DRecord) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *F3DRecord) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *F3DRecord) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

// f3d round查询返回数据
type ReplyF3DList struct {
	Rounds               []*RoundInfo `protobuf:"bytes,1,rep,name=rounds,proto3" json:"rounds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyF3DList) Reset()         { *m = ReplyF3DList{} }
func (m *ReplyF3DList) String() string { return proto.CompactTextString(m) }
func (*ReplyF3DList) ProtoMessage()    {}
func (*ReplyF3DList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{12}
}
func (m *ReplyF3DList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyF3DList.Unmarshal(m, b)
}
func (m *ReplyF3DList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyF3DList.Marshal(b, m, deterministic)
}
func (dst *ReplyF3DList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyF3DList.Merge(dst, src)
}
func (m *ReplyF3DList) XXX_Size() int {
	return xxx_messageInfo_ReplyF3DList.Size(m)
}
func (m *ReplyF3DList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyF3DList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyF3DList proto.InternalMessageInfo

func (m *ReplyF3DList) GetRounds() []*RoundInfo {
	if m != nil {
		return m.Rounds
	}
	return nil
}

type ReplyF3D struct {
	Round                *RoundInfo `protobuf:"bytes,1,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReplyF3D) Reset()         { *m = ReplyF3D{} }
func (m *ReplyF3D) String() string { return proto.CompactTextString(m) }
func (*ReplyF3D) ProtoMessage()    {}
func (*ReplyF3D) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{13}
}
func (m *ReplyF3D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyF3D.Unmarshal(m, b)
}
func (m *ReplyF3D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyF3D.Marshal(b, m, deterministic)
}
func (dst *ReplyF3D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyF3D.Merge(dst, src)
}
func (m *ReplyF3D) XXX_Size() int {
	return xxx_messageInfo_ReplyF3D.Size(m)
}
func (m *ReplyF3D) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyF3D.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyF3D proto.InternalMessageInfo

func (m *ReplyF3D) GetRound() *RoundInfo {
	if m != nil {
		return m.Round
	}
	return nil
}

// 用户查询买的key信息返回数据
type ReplyKeyList struct {
	Keys                 []*KeyInfo `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ReplyKeyList) Reset()         { *m = ReplyKeyList{} }
func (m *ReplyKeyList) String() string { return proto.CompactTextString(m) }
func (*ReplyKeyList) ProtoMessage()    {}
func (*ReplyKeyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{14}
}
func (m *ReplyKeyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyKeyList.Unmarshal(m, b)
}
func (m *ReplyKeyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyKeyList.Marshal(b, m, deterministic)
}
func (dst *ReplyKeyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyKeyList.Merge(dst, src)
}
func (m *ReplyKeyList) XXX_Size() int {
	return xxx_messageInfo_ReplyKeyList.Size(m)
}
func (m *ReplyKeyList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyKeyList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyKeyList proto.InternalMessageInfo

func (m *ReplyKeyList) GetKeys() []*KeyInfo {
	if m != nil {
		return m.Keys
	}
	return nil
}

type ReplyKey struct {
	Key                  *KeyInfo `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyKey) Reset()         { *m = ReplyKey{} }
func (m *ReplyKey) String() string { return proto.CompactTextString(m) }
func (*ReplyKey) ProtoMessage()    {}
func (*ReplyKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{15}
}
func (m *ReplyKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyKey.Unmarshal(m, b)
}
func (m *ReplyKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyKey.Marshal(b, m, deterministic)
}
func (dst *ReplyKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyKey.Merge(dst, src)
}
func (m *ReplyKey) XXX_Size() int {
	return xxx_messageInfo_ReplyKey.Size(m)
}
func (m *ReplyKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyKey.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyKey proto.InternalMessageInfo

func (m *ReplyKey) GetKey() *KeyInfo {
	if m != nil {
		return m.Key
	}
	return nil
}

type ReplyKeyCount struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyKeyCount) Reset()         { *m = ReplyKeyCount{} }
func (m *ReplyKeyCount) String() string { return proto.CompactTextString(m) }
func (*ReplyKeyCount) ProtoMessage()    {}
func (*ReplyKeyCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{16}
}
func (m *ReplyKeyCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyKeyCount.Unmarshal(m, b)
}
func (m *ReplyKeyCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyKeyCount.Marshal(b, m, deterministic)
}
func (dst *ReplyKeyCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyKeyCount.Merge(dst, src)
}
func (m *ReplyKeyCount) XXX_Size() int {
	return xxx_messageInfo_ReplyKeyCount.Size(m)
}
func (m *ReplyKeyCount) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyKeyCount.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyKeyCount proto.InternalMessageInfo

func (m *ReplyKeyCount) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ReplyAddrInfoList struct {
	AddrInfoList         []*AddrInfo `protobuf:"bytes,1,rep,name=addrInfoList,proto3" json:"addrInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReplyAddrInfoList) Reset()         { *m = ReplyAddrInfoList{} }
func (m *ReplyAddrInfoList) String() string { return proto.CompactTextString(m) }
func (*ReplyAddrInfoList) ProtoMessage()    {}
func (*ReplyAddrInfoList) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{17}
}
func (m *ReplyAddrInfoList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAddrInfoList.Unmarshal(m, b)
}
func (m *ReplyAddrInfoList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAddrInfoList.Marshal(b, m, deterministic)
}
func (dst *ReplyAddrInfoList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAddrInfoList.Merge(dst, src)
}
func (m *ReplyAddrInfoList) XXX_Size() int {
	return xxx_messageInfo_ReplyAddrInfoList.Size(m)
}
func (m *ReplyAddrInfoList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAddrInfoList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAddrInfoList proto.InternalMessageInfo

func (m *ReplyAddrInfoList) GetAddrInfoList() []*AddrInfo {
	if m != nil {
		return m.AddrInfoList
	}
	return nil
}

type AddrInfo struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	KeyNum               int64    `protobuf:"varint,2,opt,name=keyNum,proto3" json:"keyNum,omitempty"`
	IsFirstBuy           bool     `protobuf:"varint,3,opt,name=isFirstBuy,proto3" json:"isFirstBuy,omitempty"`
	Round                int64    `protobuf:"varint,4,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddrInfo) Reset()         { *m = AddrInfo{} }
func (m *AddrInfo) String() string { return proto.CompactTextString(m) }
func (*AddrInfo) ProtoMessage()    {}
func (*AddrInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{18}
}
func (m *AddrInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddrInfo.Unmarshal(m, b)
}
func (m *AddrInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddrInfo.Marshal(b, m, deterministic)
}
func (dst *AddrInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddrInfo.Merge(dst, src)
}
func (m *AddrInfo) XXX_Size() int {
	return xxx_messageInfo_AddrInfo.Size(m)
}
func (m *AddrInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AddrInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AddrInfo proto.InternalMessageInfo

func (m *AddrInfo) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *AddrInfo) GetKeyNum() int64 {
	if m != nil {
		return m.KeyNum
	}
	return 0
}

func (m *AddrInfo) GetIsFirstBuy() bool {
	if m != nil {
		return m.IsFirstBuy
	}
	return false
}

func (m *AddrInfo) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

// 合约内部日志记录，待补全
type ReceiptF3D struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Index                int64    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Count                int64    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	PrevCount            int64    `protobuf:"varint,5,opt,name=prevCount,proto3" json:"prevCount,omitempty"`
	IsFirstBuy           bool     `protobuf:"varint,6,opt,name=isFirstBuy,proto3" json:"isFirstBuy,omitempty"`
	KeyNum               int64    `protobuf:"varint,7,opt,name=keyNum,proto3" json:"keyNum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptF3D) Reset()         { *m = ReceiptF3D{} }
func (m *ReceiptF3D) String() string { return proto.CompactTextString(m) }
func (*ReceiptF3D) ProtoMessage()    {}
func (*ReceiptF3D) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{19}
}
func (m *ReceiptF3D) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptF3D.Unmarshal(m, b)
}
func (m *ReceiptF3D) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptF3D.Marshal(b, m, deterministic)
}
func (dst *ReceiptF3D) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptF3D.Merge(dst, src)
}
func (m *ReceiptF3D) XXX_Size() int {
	return xxx_messageInfo_ReceiptF3D.Size(m)
}
func (m *ReceiptF3D) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptF3D.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptF3D proto.InternalMessageInfo

func (m *ReceiptF3D) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReceiptF3D) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *ReceiptF3D) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ReceiptF3D) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReceiptF3D) GetPrevCount() int64 {
	if m != nil {
		return m.PrevCount
	}
	return 0
}

func (m *ReceiptF3D) GetIsFirstBuy() bool {
	if m != nil {
		return m.IsFirstBuy
	}
	return false
}

func (m *ReceiptF3D) GetKeyNum() int64 {
	if m != nil {
		return m.KeyNum
	}
	return 0
}

type Config struct {
	Manager              string   `protobuf:"bytes,1,opt,name=manager,proto3" json:"manager,omitempty"`
	Developer            string   `protobuf:"bytes,2,opt,name=developer,proto3" json:"developer,omitempty"`
	WinnerBonus          float32  `protobuf:"fixed32,3,opt,name=winnerBonus,proto3" json:"winnerBonus,omitempty"`
	KeyBonus             float32  `protobuf:"fixed32,4,opt,name=keyBonus,proto3" json:"keyBonus,omitempty"`
	PoolBonus            float32  `protobuf:"fixed32,5,opt,name=poolBonus,proto3" json:"poolBonus,omitempty"`
	DeveloperBonus       float32  `protobuf:"fixed32,6,opt,name=developerBonus,proto3" json:"developerBonus,omitempty"`
	LifeTime             int64    `protobuf:"varint,7,opt,name=lifeTime,proto3" json:"lifeTime,omitempty"`
	KeyIncrTime          int64    `protobuf:"varint,8,opt,name=keyIncrTime,proto3" json:"keyIncrTime,omitempty"`
	MaxkeyIncrTime       int64    `protobuf:"varint,9,opt,name=maxkeyIncrTime,proto3" json:"maxkeyIncrTime,omitempty"`
	NouserDecrTime       int64    `protobuf:"varint,10,opt,name=nouserDecrTime,proto3" json:"nouserDecrTime,omitempty"`
	StartKeyPrice        float32  `protobuf:"fixed32,11,opt,name=startKeyPrice,proto3" json:"startKeyPrice,omitempty"`
	IncrKeyPrice         float32  `protobuf:"fixed32,12,opt,name=incrKeyPrice,proto3" json:"incrKeyPrice,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d_918d68436dd5fc0b, []int{20}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetManager() string {
	if m != nil {
		return m.Manager
	}
	return ""
}

func (m *Config) GetDeveloper() string {
	if m != nil {
		return m.Developer
	}
	return ""
}

func (m *Config) GetWinnerBonus() float32 {
	if m != nil {
		return m.WinnerBonus
	}
	return 0
}

func (m *Config) GetKeyBonus() float32 {
	if m != nil {
		return m.KeyBonus
	}
	return 0
}

func (m *Config) GetPoolBonus() float32 {
	if m != nil {
		return m.PoolBonus
	}
	return 0
}

func (m *Config) GetDeveloperBonus() float32 {
	if m != nil {
		return m.DeveloperBonus
	}
	return 0
}

func (m *Config) GetLifeTime() int64 {
	if m != nil {
		return m.LifeTime
	}
	return 0
}

func (m *Config) GetKeyIncrTime() int64 {
	if m != nil {
		return m.KeyIncrTime
	}
	return 0
}

func (m *Config) GetMaxkeyIncrTime() int64 {
	if m != nil {
		return m.MaxkeyIncrTime
	}
	return 0
}

func (m *Config) GetNouserDecrTime() int64 {
	if m != nil {
		return m.NouserDecrTime
	}
	return 0
}

func (m *Config) GetStartKeyPrice() float32 {
	if m != nil {
		return m.StartKeyPrice
	}
	return 0
}

func (m *Config) GetIncrKeyPrice() float32 {
	if m != nil {
		return m.IncrKeyPrice
	}
	return 0
}

func init() {
	proto.RegisterType((*RoundInfo)(nil), "types.RoundInfo")
	proto.RegisterType((*KeyInfo)(nil), "types.KeyInfo")
	proto.RegisterType((*F3DAction)(nil), "types.F3dAction")
	proto.RegisterType((*F3DStart)(nil), "types.F3dStart")
	proto.RegisterType((*F3DLuckyDraw)(nil), "types.F3dLuckyDraw")
	proto.RegisterType((*F3DBuyKey)(nil), "types.F3dBuyKey")
	proto.RegisterType((*QueryF3DByRound)(nil), "types.QueryF3dByRound")
	proto.RegisterType((*QueryF3DListByRound)(nil), "types.QueryF3dListByRound")
	proto.RegisterType((*QueryKeysByRoundAndAddr)(nil), "types.QueryKeysByRoundAndAddr")
	proto.RegisterType((*QueryKeyCountByRoundAndAddr)(nil), "types.QueryKeyCountByRoundAndAddr")
	proto.RegisterType((*QueryAddrInfo)(nil), "types.QueryAddrInfo")
	proto.RegisterType((*F3DRecord)(nil), "types.F3dRecord")
	proto.RegisterType((*ReplyF3DList)(nil), "types.ReplyF3dList")
	proto.RegisterType((*ReplyF3D)(nil), "types.ReplyF3d")
	proto.RegisterType((*ReplyKeyList)(nil), "types.ReplyKeyList")
	proto.RegisterType((*ReplyKey)(nil), "types.ReplyKey")
	proto.RegisterType((*ReplyKeyCount)(nil), "types.ReplyKeyCount")
	proto.RegisterType((*ReplyAddrInfoList)(nil), "types.ReplyAddrInfoList")
	proto.RegisterType((*AddrInfo)(nil), "types.AddrInfo")
	proto.RegisterType((*ReceiptF3D)(nil), "types.ReceiptF3d")
	proto.RegisterType((*Config)(nil), "types.Config")
}

func init() { proto.RegisterFile("f3d.proto", fileDescriptor_f3d_918d68436dd5fc0b) }

var fileDescriptor_f3d_918d68436dd5fc0b = []byte{
	// 895 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xae, 0xed, 0xfc, 0x9e, 0xa4, 0x5d, 0x98, 0x45, 0x10, 0x01, 0xaa, 0x22, 0x53, 0x76, 0x8b,
	0x84, 0x7a, 0x91, 0xdc, 0x70, 0xdb, 0x76, 0x55, 0x82, 0xb2, 0x82, 0x65, 0xe0, 0x05, 0xdc, 0xf8,
	0xb4, 0x58, 0x71, 0xec, 0x68, 0x6c, 0xb7, 0x9d, 0x77, 0x41, 0xbc, 0x00, 0x2f, 0xc0, 0x8b, 0xf0,
	0x3e, 0x68, 0xce, 0xcc, 0x78, 0x26, 0x21, 0xed, 0xc5, 0xde, 0xe5, 0x7c, 0xdf, 0x37, 0x73, 0x7e,
	0x3d, 0x27, 0x30, 0xbc, 0x9b, 0xa7, 0x17, 0x5b, 0x51, 0xd6, 0x25, 0xeb, 0xd6, 0x72, 0x8b, 0x55,
	0xfc, 0x6f, 0x08, 0x43, 0x5e, 0x36, 0x45, 0xfa, 0x53, 0x71, 0x57, 0xb2, 0xcf, 0xa0, 0x2b, 0x94,
	0x31, 0x09, 0xa6, 0xc1, 0x79, 0xc4, 0xb5, 0xc1, 0xbe, 0x86, 0xe1, 0x2d, 0xde, 0x67, 0xc5, 0xef,
	0xd9, 0x06, 0x27, 0x21, 0x31, 0x0e, 0x60, 0x13, 0xe8, 0x63, 0x91, 0x12, 0x17, 0x11, 0x67, 0x4d,
	0x75, 0x2e, 0x4f, 0xaa, 0xfa, 0x97, 0xc7, 0x02, 0xc5, 0xa4, 0x33, 0x0d, 0xce, 0x87, 0xdc, 0x01,
	0x6c, 0x0a, 0x23, 0x65, 0x2c, 0x51, 0xd2, 0xd9, 0x2e, 0x9d, 0xf5, 0x21, 0x16, 0xc3, 0xd8, 0x98,
	0x1f, 0x44, 0xb6, 0xc2, 0x49, 0x6f, 0x1a, 0x9c, 0x87, 0x7c, 0x07, 0xa3, 0xd8, 0xca, 0xa2, 0xa9,
	0x3e, 0x94, 0x65, 0x3e, 0xe9, 0x93, 0xc0, 0x01, 0x8a, 0x6d, 0x2a, 0x14, 0xd7, 0x65, 0x53, 0xd4,
	0x93, 0x81, 0x8e, 0xbc, 0x05, 0xd8, 0x97, 0x30, 0x58, 0xa3, 0xd4, 0xe4, 0x90, 0xc8, 0xd6, 0x66,
	0xa7, 0x00, 0x02, 0x37, 0x89, 0x49, 0x1a, 0x88, 0xf5, 0x10, 0xc5, 0x37, 0xdb, 0x34, 0xa9, 0x91,
	0xf8, 0x91, 0xe6, 0x1d, 0x12, 0xff, 0x1d, 0x40, 0x7f, 0x89, 0xf2, 0x85, 0xaa, 0x6a, 0xef, 0x3a,
	0xb3, 0x90, 0x02, 0x6f, 0x6d, 0xf6, 0x39, 0xf4, 0xd6, 0x28, 0x7f, 0x6e, 0x36, 0xa6, 0xa4, 0xc6,
	0x62, 0x0c, 0x3a, 0x49, 0x9a, 0xda, 0x62, 0xd2, 0x6f, 0x15, 0xc9, 0x6d, 0x23, 0x6d, 0x19, 0xfb,
	0x3a, 0x12, 0x87, 0xa8, 0x2a, 0x1a, 0xeb, 0x69, 0x91, 0x54, 0x7f, 0x50, 0xa6, 0x43, 0xbe, 0x83,
	0xc5, 0x7f, 0x05, 0x30, 0xbc, 0x99, 0xa7, 0x97, 0xab, 0x3a, 0x2b, 0x0b, 0xf6, 0x16, 0xba, 0x55,
	0x9d, 0x88, 0x9a, 0xe2, 0x1d, 0xcd, 0x5e, 0x5d, 0xd0, 0xa8, 0x5c, 0xdc, 0xcc, 0xd3, 0xdf, 0x14,
	0xbc, 0x38, 0xe2, 0x9a, 0x67, 0xdf, 0x41, 0x27, 0x15, 0xc9, 0x23, 0x85, 0x3f, 0x9a, 0xbd, 0x76,
	0xba, 0xf7, 0xcd, 0x6a, 0x2d, 0xdf, 0x89, 0xe4, 0x71, 0x71, 0xc4, 0x49, 0xc2, 0xce, 0x20, 0xba,
	0x6d, 0x24, 0xa5, 0x33, 0x9a, 0x7d, 0xe2, 0x94, 0x57, 0x14, 0xc6, 0xe2, 0x88, 0x2b, 0x9a, 0x9d,
	0x40, 0x58, 0x4b, 0xca, 0xae, 0xcb, 0xc3, 0x5a, 0x5e, 0xf5, 0xa1, 0xfb, 0x90, 0xe4, 0x0d, 0xc6,
	0x53, 0x18, 0x58, 0xf7, 0xaa, 0x9c, 0xdc, 0x2f, 0x27, 0x19, 0xf1, 0x19, 0x8c, 0x7d, 0xc7, 0xcf,
	0xa8, 0xbe, 0xa1, 0x3c, 0xb5, 0xd3, 0xe7, 0xaa, 0x1c, 0xbf, 0x85, 0x57, 0xbf, 0x36, 0x28, 0xa4,
	0x52, 0x4a, 0x3a, 0x77, 0xb8, 0x85, 0x71, 0x06, 0xaf, 0xad, 0xf0, 0x7d, 0x56, 0xd5, 0x56, 0x7c,
	0x0a, 0x40, 0xf5, 0xf1, 0xfd, 0x7b, 0x88, 0xba, 0x6c, 0x45, 0x43, 0x17, 0x52, 0xa2, 0xda, 0x50,
	0xb3, 0x9a, 0x66, 0x02, 0xa9, 0x05, 0xf4, 0x35, 0x74, 0xb9, 0x03, 0xe2, 0x6b, 0xf8, 0x82, 0x5c,
	0x2d, 0x51, 0x56, 0xc6, 0xcf, 0x65, 0x91, 0x5e, 0xaa, 0x01, 0x38, 0x3c, 0x5e, 0x76, 0x54, 0x42,
	0x37, 0x2a, 0xf1, 0x8f, 0xf0, 0x95, 0xbd, 0x84, 0xa6, 0xfc, 0xa3, 0x2f, 0xda, 0xc0, 0x31, 0x5d,
	0xa4, 0x8e, 0xbd, 0x30, 0xe2, 0x07, 0x8e, 0xba, 0xe4, 0xa3, 0x67, 0x93, 0xef, 0xec, 0x27, 0xbf,
	0xa4, 0xae, 0x71, 0x5c, 0x95, 0xc2, 0x5d, 0x1a, 0xec, 0x5e, 0x9a, 0x15, 0x29, 0x3e, 0x99, 0xd7,
	0x49, 0x1b, 0x2e, 0xa8, 0xc8, 0x6f, 0xda, 0x0f, 0x30, 0xe6, 0xb8, 0xcd, 0x6d, 0xd3, 0xd8, 0x39,
	0xf4, 0x88, 0xa8, 0x26, 0xc1, 0x34, 0xf2, 0x86, 0xb3, 0x7d, 0x15, 0xb9, 0xe1, 0xe3, 0x19, 0x0c,
	0xec, 0x49, 0xf6, 0xc6, 0x4f, 0xf8, 0xd0, 0x21, 0xe3, 0x6d, 0x66, 0xbc, 0x2d, 0x51, 0x92, 0xb7,
	0x18, 0x3a, 0x6b, 0x94, 0xd6, 0xd7, 0x89, 0x39, 0x66, 0x5e, 0x0a, 0x4e, 0x5c, 0xfc, 0xbd, 0xf1,
	0xa3, 0x66, 0x74, 0x0a, 0xd1, 0x1a, 0xa5, 0xf1, 0xb2, 0x2f, 0x57, 0x54, 0xfc, 0x2d, 0x1c, 0x5b,
	0xb5, 0x7e, 0xba, 0xda, 0x0a, 0x9b, 0x5e, 0x90, 0x11, 0x2f, 0xe0, 0x53, 0x92, 0xd9, 0x96, 0x51,
	0x34, 0x73, 0x18, 0x27, 0x9e, 0x6d, 0xa2, 0xb2, 0x1f, 0xbc, 0x95, 0xf2, 0x1d, 0x51, 0x9c, 0xc3,
	0xa0, 0xed, 0xfb, 0xa1, 0x66, 0xb8, 0xcf, 0x2a, 0xdc, 0x79, 0xbc, 0x4e, 0x01, 0xb2, 0xea, 0x26,
	0x13, 0x55, 0x7d, 0x65, 0x5e, 0x82, 0x01, 0xf7, 0x10, 0xd7, 0xae, 0x8e, 0xdf, 0xae, 0x7f, 0x02,
	0x00, 0x8e, 0x2b, 0xcc, 0xb6, 0xb5, 0xaa, 0xfb, 0x33, 0xdd, 0xd7, 0x07, 0x43, 0x7f, 0xf8, 0xda,
	0x99, 0x88, 0xf6, 0x66, 0x42, 0x17, 0xa7, 0xe3, 0x15, 0x47, 0x8d, 0xdf, 0x56, 0xe0, 0x83, 0x5e,
	0x05, 0x7a, 0x13, 0x39, 0x60, 0x2f, 0xf0, 0xde, 0xff, 0x02, 0x77, 0x09, 0xf7, 0x77, 0xde, 0x91,
	0x3f, 0x23, 0xe8, 0x5d, 0x97, 0xc5, 0x5d, 0x76, 0xaf, 0x96, 0xe4, 0x26, 0x29, 0x92, 0x7b, 0xb4,
	0x91, 0x5b, 0x93, 0x26, 0x1f, 0x1f, 0x30, 0x2f, 0xb7, 0x68, 0x3f, 0x14, 0x07, 0xa8, 0x25, 0xf9,
	0x98, 0x15, 0x05, 0x8a, 0x2b, 0xb5, 0xd3, 0x28, 0x95, 0x90, 0xfb, 0x90, 0x59, 0x23, 0x9a, 0xee,
	0xb4, 0x6b, 0x44, 0x73, 0x2a, 0xad, 0xb2, 0xcc, 0x35, 0xd9, 0xd5, 0xcb, 0xb1, 0x05, 0xd8, 0x1b,
	0x38, 0x69, 0x1d, 0x69, 0x89, 0x5e, 0xb0, 0x7b, 0xa8, 0xf2, 0x90, 0x67, 0x77, 0xe8, 0xad, 0x97,
	0xd6, 0x56, 0xf1, 0xad, 0xd5, 0x30, 0xae, 0x04, 0xd1, 0x7a, 0xc5, 0xfa, 0x90, 0xf2, 0xb2, 0x49,
	0x9e, 0x7c, 0x91, 0x5e, 0xb5, 0x7b, 0xa8, 0xd2, 0x15, 0xa5, 0xda, 0xcd, 0xef, 0xd0, 0xe8, 0xf4,
	0xd2, 0xdd, 0x43, 0xd9, 0x19, 0x1c, 0xd3, 0x53, 0xda, 0xfe, 0x2b, 0x18, 0x51, 0xd0, 0xbb, 0xa0,
	0x5a, 0x7a, 0x59, 0xb1, 0x12, 0xad, 0x68, 0xac, 0xff, 0x3a, 0xf8, 0xd8, 0x6d, 0x8f, 0xfe, 0x08,
	0xcd, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x41, 0xf4, 0x8d, 0xb6, 0x15, 0x09, 0x00, 0x00,
}
