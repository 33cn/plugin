// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: x2ethereum.proto

package types

import (
	context "context"
	reflect "reflect"
	sync "sync"

	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EthBridgeStatus int32

const (
	EthBridgeStatus_PendingStatusText EthBridgeStatus = 0
	EthBridgeStatus_SuccessStatusText EthBridgeStatus = 1
	EthBridgeStatus_FailedStatusText  EthBridgeStatus = 2
)

// Enum value maps for EthBridgeStatus.
var (
	EthBridgeStatus_name = map[int32]string{
		0: "PendingStatusText",
		1: "SuccessStatusText",
		2: "FailedStatusText",
	}
	EthBridgeStatus_value = map[string]int32{
		"PendingStatusText": 0,
		"SuccessStatusText": 1,
		"FailedStatusText":  2,
	}
)

func (x EthBridgeStatus) Enum() *EthBridgeStatus {
	p := new(EthBridgeStatus)
	*p = x
	return p
}

func (x EthBridgeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EthBridgeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_x2ethereum_proto_enumTypes[0].Descriptor()
}

func (EthBridgeStatus) Type() protoreflect.EnumType {
	return &file_x2ethereum_proto_enumTypes[0]
}

func (x EthBridgeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EthBridgeStatus.Descriptor instead.
func (EthBridgeStatus) EnumDescriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{0}
}

type X2EthereumAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*X2EthereumAction_Eth2Chain33Lock
	//	*X2EthereumAction_Eth2Chain33Burn
	//	*X2EthereumAction_Chain33ToEthBurn
	//	*X2EthereumAction_Chain33ToEthLock
	//	*X2EthereumAction_AddValidator
	//	*X2EthereumAction_RemoveValidator
	//	*X2EthereumAction_ModifyPower
	//	*X2EthereumAction_SetConsensusThreshold
	//	*X2EthereumAction_Transfer
	//	*X2EthereumAction_TransferToExec
	//	*X2EthereumAction_WithdrawFromExec
	Value isX2EthereumAction_Value `protobuf_oneof:"value"`
	Ty    int32                    `protobuf:"varint,12,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *X2EthereumAction) Reset() {
	*x = X2EthereumAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *X2EthereumAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X2EthereumAction) ProtoMessage() {}

func (x *X2EthereumAction) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X2EthereumAction.ProtoReflect.Descriptor instead.
func (*X2EthereumAction) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{0}
}

func (m *X2EthereumAction) GetValue() isX2EthereumAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *X2EthereumAction) GetEth2Chain33Lock() *Eth2Chain33 {
	if x, ok := x.GetValue().(*X2EthereumAction_Eth2Chain33Lock); ok {
		return x.Eth2Chain33Lock
	}
	return nil
}

func (x *X2EthereumAction) GetEth2Chain33Burn() *Eth2Chain33 {
	if x, ok := x.GetValue().(*X2EthereumAction_Eth2Chain33Burn); ok {
		return x.Eth2Chain33Burn
	}
	return nil
}

func (x *X2EthereumAction) GetChain33ToEthBurn() *Chain33ToEth {
	if x, ok := x.GetValue().(*X2EthereumAction_Chain33ToEthBurn); ok {
		return x.Chain33ToEthBurn
	}
	return nil
}

func (x *X2EthereumAction) GetChain33ToEthLock() *Chain33ToEth {
	if x, ok := x.GetValue().(*X2EthereumAction_Chain33ToEthLock); ok {
		return x.Chain33ToEthLock
	}
	return nil
}

func (x *X2EthereumAction) GetAddValidator() *MsgValidator {
	if x, ok := x.GetValue().(*X2EthereumAction_AddValidator); ok {
		return x.AddValidator
	}
	return nil
}

func (x *X2EthereumAction) GetRemoveValidator() *MsgValidator {
	if x, ok := x.GetValue().(*X2EthereumAction_RemoveValidator); ok {
		return x.RemoveValidator
	}
	return nil
}

func (x *X2EthereumAction) GetModifyPower() *MsgValidator {
	if x, ok := x.GetValue().(*X2EthereumAction_ModifyPower); ok {
		return x.ModifyPower
	}
	return nil
}

func (x *X2EthereumAction) GetSetConsensusThreshold() *MsgConsensusThreshold {
	if x, ok := x.GetValue().(*X2EthereumAction_SetConsensusThreshold); ok {
		return x.SetConsensusThreshold
	}
	return nil
}

func (x *X2EthereumAction) GetTransfer() *types.AssetsTransfer {
	if x, ok := x.GetValue().(*X2EthereumAction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

func (x *X2EthereumAction) GetTransferToExec() *types.AssetsTransferToExec {
	if x, ok := x.GetValue().(*X2EthereumAction_TransferToExec); ok {
		return x.TransferToExec
	}
	return nil
}

func (x *X2EthereumAction) GetWithdrawFromExec() *types.AssetsWithdraw {
	if x, ok := x.GetValue().(*X2EthereumAction_WithdrawFromExec); ok {
		return x.WithdrawFromExec
	}
	return nil
}

func (x *X2EthereumAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isX2EthereumAction_Value interface {
	isX2EthereumAction_Value()
}

type X2EthereumAction_Eth2Chain33Lock struct {
	Eth2Chain33Lock *Eth2Chain33 `protobuf:"bytes,1,opt,name=eth2Chain33Lock,proto3,oneof"`
}

type X2EthereumAction_Eth2Chain33Burn struct {
	Eth2Chain33Burn *Eth2Chain33 `protobuf:"bytes,2,opt,name=eth2Chain33Burn,proto3,oneof"`
}

type X2EthereumAction_Chain33ToEthBurn struct {
	Chain33ToEthBurn *Chain33ToEth `protobuf:"bytes,3,opt,name=chain33ToEthBurn,proto3,oneof"`
}

type X2EthereumAction_Chain33ToEthLock struct {
	Chain33ToEthLock *Chain33ToEth `protobuf:"bytes,4,opt,name=chain33ToEthLock,proto3,oneof"`
}

type X2EthereumAction_AddValidator struct {
	AddValidator *MsgValidator `protobuf:"bytes,5,opt,name=addValidator,proto3,oneof"`
}

type X2EthereumAction_RemoveValidator struct {
	RemoveValidator *MsgValidator `protobuf:"bytes,6,opt,name=removeValidator,proto3,oneof"`
}

type X2EthereumAction_ModifyPower struct {
	ModifyPower *MsgValidator `protobuf:"bytes,7,opt,name=modifyPower,proto3,oneof"`
}

type X2EthereumAction_SetConsensusThreshold struct {
	SetConsensusThreshold *MsgConsensusThreshold `protobuf:"bytes,8,opt,name=setConsensusThreshold,proto3,oneof"`
}

type X2EthereumAction_Transfer struct {
	Transfer *types.AssetsTransfer `protobuf:"bytes,9,opt,name=transfer,proto3,oneof"`
}

type X2EthereumAction_TransferToExec struct {
	TransferToExec *types.AssetsTransferToExec `protobuf:"bytes,10,opt,name=transferToExec,proto3,oneof"`
}

type X2EthereumAction_WithdrawFromExec struct {
	WithdrawFromExec *types.AssetsWithdraw `protobuf:"bytes,11,opt,name=withdrawFromExec,proto3,oneof"`
}

func (*X2EthereumAction_Eth2Chain33Lock) isX2EthereumAction_Value() {}

func (*X2EthereumAction_Eth2Chain33Burn) isX2EthereumAction_Value() {}

func (*X2EthereumAction_Chain33ToEthBurn) isX2EthereumAction_Value() {}

func (*X2EthereumAction_Chain33ToEthLock) isX2EthereumAction_Value() {}

func (*X2EthereumAction_AddValidator) isX2EthereumAction_Value() {}

func (*X2EthereumAction_RemoveValidator) isX2EthereumAction_Value() {}

func (*X2EthereumAction_ModifyPower) isX2EthereumAction_Value() {}

func (*X2EthereumAction_SetConsensusThreshold) isX2EthereumAction_Value() {}

func (*X2EthereumAction_Transfer) isX2EthereumAction_Value() {}

func (*X2EthereumAction_TransferToExec) isX2EthereumAction_Value() {}

func (*X2EthereumAction_WithdrawFromExec) isX2EthereumAction_Value() {}

type MsgConsensusThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsensusThreshold int64 `protobuf:"varint,1,opt,name=consensusThreshold,proto3" json:"consensusThreshold,omitempty"`
}

func (x *MsgConsensusThreshold) Reset() {
	*x = MsgConsensusThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgConsensusThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgConsensusThreshold) ProtoMessage() {}

func (x *MsgConsensusThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgConsensusThreshold.ProtoReflect.Descriptor instead.
func (*MsgConsensusThreshold) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{1}
}

func (x *MsgConsensusThreshold) GetConsensusThreshold() int64 {
	if x != nil {
		return x.ConsensusThreshold
	}
	return 0
}

type MsgValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Power   int64  `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *MsgValidator) Reset() {
	*x = MsgValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgValidator) ProtoMessage() {}

func (x *MsgValidator) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgValidator.ProtoReflect.Descriptor instead.
func (*MsgValidator) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{2}
}

func (x *MsgValidator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MsgValidator) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

// EthBridgeClaim is a structure that contains all the data for a particular bridge claim
type Eth2Chain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumChainID       int64  `protobuf:"varint,1,opt,name=EthereumChainID,proto3" json:"EthereumChainID,omitempty"`
	BridgeContractAddress string `protobuf:"bytes,2,opt,name=BridgeContractAddress,proto3" json:"BridgeContractAddress,omitempty"`
	Nonce                 int64  `protobuf:"varint,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	IssuerDotSymbol       string `protobuf:"bytes,4,opt,name=IssuerDotSymbol,proto3" json:"IssuerDotSymbol,omitempty"`
	TokenContractAddress  string `protobuf:"bytes,6,opt,name=TokenContractAddress,proto3" json:"TokenContractAddress,omitempty"`
	EthereumSender        string `protobuf:"bytes,7,opt,name=EthereumSender,proto3" json:"EthereumSender,omitempty"`
	Chain33Receiver       string `protobuf:"bytes,8,opt,name=Chain33Receiver,proto3" json:"Chain33Receiver,omitempty"`
	ValidatorAddress      string `protobuf:"bytes,9,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	Amount                string `protobuf:"bytes,10,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ClaimType             int64  `protobuf:"varint,11,opt,name=ClaimType,proto3" json:"ClaimType,omitempty"`
	Decimals              int64  `protobuf:"varint,12,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
}

func (x *Eth2Chain33) Reset() {
	*x = Eth2Chain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eth2Chain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eth2Chain33) ProtoMessage() {}

func (x *Eth2Chain33) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eth2Chain33.ProtoReflect.Descriptor instead.
func (*Eth2Chain33) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{3}
}

func (x *Eth2Chain33) GetEthereumChainID() int64 {
	if x != nil {
		return x.EthereumChainID
	}
	return 0
}

func (x *Eth2Chain33) GetBridgeContractAddress() string {
	if x != nil {
		return x.BridgeContractAddress
	}
	return ""
}

func (x *Eth2Chain33) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Eth2Chain33) GetIssuerDotSymbol() string {
	if x != nil {
		return x.IssuerDotSymbol
	}
	return ""
}

func (x *Eth2Chain33) GetTokenContractAddress() string {
	if x != nil {
		return x.TokenContractAddress
	}
	return ""
}

func (x *Eth2Chain33) GetEthereumSender() string {
	if x != nil {
		return x.EthereumSender
	}
	return ""
}

func (x *Eth2Chain33) GetChain33Receiver() string {
	if x != nil {
		return x.Chain33Receiver
	}
	return ""
}

func (x *Eth2Chain33) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *Eth2Chain33) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Eth2Chain33) GetClaimType() int64 {
	if x != nil {
		return x.ClaimType
	}
	return 0
}

func (x *Eth2Chain33) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

// OracleClaimContent is the details of how the content of the claim for each validator will be stored in the oracle
type OracleClaimContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain33Receiver string `protobuf:"bytes,1,opt,name=Chain33Receiver,proto3" json:"Chain33Receiver,omitempty"`
	Amount          string `protobuf:"bytes,2,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ClaimType       int64  `protobuf:"varint,3,opt,name=ClaimType,proto3" json:"ClaimType,omitempty"`
	Decimals        int64  `protobuf:"varint,4,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
}

func (x *OracleClaimContent) Reset() {
	*x = OracleClaimContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OracleClaimContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleClaimContent) ProtoMessage() {}

func (x *OracleClaimContent) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleClaimContent.ProtoReflect.Descriptor instead.
func (*OracleClaimContent) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{4}
}

func (x *OracleClaimContent) GetChain33Receiver() string {
	if x != nil {
		return x.Chain33Receiver
	}
	return ""
}

func (x *OracleClaimContent) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OracleClaimContent) GetClaimType() int64 {
	if x != nil {
		return x.ClaimType
	}
	return 0
}

func (x *OracleClaimContent) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

// MsgBurn defines a message for burning coins and triggering a related event
type Chain33ToEth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenContract    string `protobuf:"bytes,1,opt,name=TokenContract,proto3" json:"TokenContract,omitempty"`
	Chain33Sender    string `protobuf:"bytes,2,opt,name=Chain33Sender,proto3" json:"Chain33Sender,omitempty"`
	EthereumReceiver string `protobuf:"bytes,3,opt,name=EthereumReceiver,proto3" json:"EthereumReceiver,omitempty"`
	Amount           string `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	IssuerDotSymbol  string `protobuf:"bytes,5,opt,name=IssuerDotSymbol,proto3" json:"IssuerDotSymbol,omitempty"`
	Decimals         int64  `protobuf:"varint,7,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
}

func (x *Chain33ToEth) Reset() {
	*x = Chain33ToEth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain33ToEth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain33ToEth) ProtoMessage() {}

func (x *Chain33ToEth) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain33ToEth.ProtoReflect.Descriptor instead.
func (*Chain33ToEth) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{5}
}

func (x *Chain33ToEth) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *Chain33ToEth) GetChain33Sender() string {
	if x != nil {
		return x.Chain33Sender
	}
	return ""
}

func (x *Chain33ToEth) GetEthereumReceiver() string {
	if x != nil {
		return x.EthereumReceiver
	}
	return ""
}

func (x *Chain33ToEth) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Chain33ToEth) GetIssuerDotSymbol() string {
	if x != nil {
		return x.IssuerDotSymbol
	}
	return ""
}

func (x *Chain33ToEth) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

// 回执接口定义
type ReceiptEth2Chain33 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EthereumChainID       int64  `protobuf:"varint,1,opt,name=EthereumChainID,proto3" json:"EthereumChainID,omitempty"`
	BridgeContractAddress string `protobuf:"bytes,2,opt,name=BridgeContractAddress,proto3" json:"BridgeContractAddress,omitempty"`
	Nonce                 int64  `protobuf:"varint,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	IssuerDotSymbol       string `protobuf:"bytes,4,opt,name=IssuerDotSymbol,proto3" json:"IssuerDotSymbol,omitempty"`
	TokenAddress          string `protobuf:"bytes,5,opt,name=TokenAddress,proto3" json:"TokenAddress,omitempty"`
	EthereumSender        string `protobuf:"bytes,7,opt,name=EthereumSender,proto3" json:"EthereumSender,omitempty"`
	Chain33Receiver       string `protobuf:"bytes,8,opt,name=Chain33Receiver,proto3" json:"Chain33Receiver,omitempty"`
	ValidatorAddress      string `protobuf:"bytes,9,opt,name=ValidatorAddress,proto3" json:"ValidatorAddress,omitempty"`
	Amount                string `protobuf:"bytes,10,opt,name=Amount,proto3" json:"Amount,omitempty"`
	ClaimType             int64  `protobuf:"varint,11,opt,name=ClaimType,proto3" json:"ClaimType,omitempty"`
	XTxHash               []byte `protobuf:"bytes,12,opt,name=xTxHash,proto3" json:"xTxHash,omitempty"`
	XHeight               uint64 `protobuf:"varint,13,opt,name=xHeight,proto3" json:"xHeight,omitempty"`
	ProphecyID            string `protobuf:"bytes,14,opt,name=ProphecyID,proto3" json:"ProphecyID,omitempty"`
	Decimals              int64  `protobuf:"varint,15,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
}

func (x *ReceiptEth2Chain33) Reset() {
	*x = ReceiptEth2Chain33{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptEth2Chain33) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptEth2Chain33) ProtoMessage() {}

func (x *ReceiptEth2Chain33) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptEth2Chain33.ProtoReflect.Descriptor instead.
func (*ReceiptEth2Chain33) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiptEth2Chain33) GetEthereumChainID() int64 {
	if x != nil {
		return x.EthereumChainID
	}
	return 0
}

func (x *ReceiptEth2Chain33) GetBridgeContractAddress() string {
	if x != nil {
		return x.BridgeContractAddress
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *ReceiptEth2Chain33) GetIssuerDotSymbol() string {
	if x != nil {
		return x.IssuerDotSymbol
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetEthereumSender() string {
	if x != nil {
		return x.EthereumSender
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetChain33Receiver() string {
	if x != nil {
		return x.Chain33Receiver
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetClaimType() int64 {
	if x != nil {
		return x.ClaimType
	}
	return 0
}

func (x *ReceiptEth2Chain33) GetXTxHash() []byte {
	if x != nil {
		return x.XTxHash
	}
	return nil
}

func (x *ReceiptEth2Chain33) GetXHeight() uint64 {
	if x != nil {
		return x.XHeight
	}
	return 0
}

func (x *ReceiptEth2Chain33) GetProphecyID() string {
	if x != nil {
		return x.ProphecyID
	}
	return ""
}

func (x *ReceiptEth2Chain33) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type ReceiptChain33ToEth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenContract    string `protobuf:"bytes,1,opt,name=TokenContract,proto3" json:"TokenContract,omitempty"`
	Chain33Sender    string `protobuf:"bytes,2,opt,name=Chain33Sender,proto3" json:"Chain33Sender,omitempty"`
	EthereumReceiver string `protobuf:"bytes,3,opt,name=EthereumReceiver,proto3" json:"EthereumReceiver,omitempty"`
	Amount           string `protobuf:"bytes,4,opt,name=Amount,proto3" json:"Amount,omitempty"`
	IssuerDotSymbol  string `protobuf:"bytes,5,opt,name=IssuerDotSymbol,proto3" json:"IssuerDotSymbol,omitempty"`
	Decimals         int64  `protobuf:"varint,6,opt,name=Decimals,proto3" json:"Decimals,omitempty"`
}

func (x *ReceiptChain33ToEth) Reset() {
	*x = ReceiptChain33ToEth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptChain33ToEth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptChain33ToEth) ProtoMessage() {}

func (x *ReceiptChain33ToEth) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptChain33ToEth.ProtoReflect.Descriptor instead.
func (*ReceiptChain33ToEth) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiptChain33ToEth) GetTokenContract() string {
	if x != nil {
		return x.TokenContract
	}
	return ""
}

func (x *ReceiptChain33ToEth) GetChain33Sender() string {
	if x != nil {
		return x.Chain33Sender
	}
	return ""
}

func (x *ReceiptChain33ToEth) GetEthereumReceiver() string {
	if x != nil {
		return x.EthereumReceiver
	}
	return ""
}

func (x *ReceiptChain33ToEth) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ReceiptChain33ToEth) GetIssuerDotSymbol() string {
	if x != nil {
		return x.IssuerDotSymbol
	}
	return ""
}

func (x *ReceiptChain33ToEth) GetDecimals() int64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type ReceiptValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Power   int64  `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
	XTxHash []byte `protobuf:"bytes,3,opt,name=xTxHash,proto3" json:"xTxHash,omitempty"`
	XHeight uint64 `protobuf:"varint,4,opt,name=xHeight,proto3" json:"xHeight,omitempty"`
}

func (x *ReceiptValidator) Reset() {
	*x = ReceiptValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptValidator) ProtoMessage() {}

func (x *ReceiptValidator) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptValidator.ProtoReflect.Descriptor instead.
func (*ReceiptValidator) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{8}
}

func (x *ReceiptValidator) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReceiptValidator) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

func (x *ReceiptValidator) GetXTxHash() []byte {
	if x != nil {
		return x.XTxHash
	}
	return nil
}

func (x *ReceiptValidator) GetXHeight() uint64 {
	if x != nil {
		return x.XHeight
	}
	return 0
}

type ReceiptSetConsensusThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreConsensusThreshold int64  `protobuf:"varint,1,opt,name=preConsensusThreshold,proto3" json:"preConsensusThreshold,omitempty"`
	NowConsensusThreshold int64  `protobuf:"varint,2,opt,name=nowConsensusThreshold,proto3" json:"nowConsensusThreshold,omitempty"`
	XTxHash               []byte `protobuf:"bytes,3,opt,name=xTxHash,proto3" json:"xTxHash,omitempty"`
	XHeight               uint64 `protobuf:"varint,4,opt,name=xHeight,proto3" json:"xHeight,omitempty"`
}

func (x *ReceiptSetConsensusThreshold) Reset() {
	*x = ReceiptSetConsensusThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptSetConsensusThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptSetConsensusThreshold) ProtoMessage() {}

func (x *ReceiptSetConsensusThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptSetConsensusThreshold.ProtoReflect.Descriptor instead.
func (*ReceiptSetConsensusThreshold) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{9}
}

func (x *ReceiptSetConsensusThreshold) GetPreConsensusThreshold() int64 {
	if x != nil {
		return x.PreConsensusThreshold
	}
	return 0
}

func (x *ReceiptSetConsensusThreshold) GetNowConsensusThreshold() int64 {
	if x != nil {
		return x.NowConsensusThreshold
	}
	return 0
}

func (x *ReceiptSetConsensusThreshold) GetXTxHash() []byte {
	if x != nil {
		return x.XTxHash
	}
	return nil
}

func (x *ReceiptSetConsensusThreshold) GetXHeight() uint64 {
	if x != nil {
		return x.XHeight
	}
	return 0
}

// 查询接口定义
type QueryEthProphecyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *QueryEthProphecyParams) Reset() {
	*x = QueryEthProphecyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEthProphecyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEthProphecyParams) ProtoMessage() {}

func (x *QueryEthProphecyParams) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEthProphecyParams.ProtoReflect.Descriptor instead.
func (*QueryEthProphecyParams) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{10}
}

func (x *QueryEthProphecyParams) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ReceiptEthProphecy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Status          *ProphecyStatus    `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
	ClaimValidators []*ClaimValidators `protobuf:"bytes,3,rep,name=ClaimValidators,proto3" json:"ClaimValidators,omitempty"`
	ValidatorClaims []*ValidatorClaims `protobuf:"bytes,4,rep,name=ValidatorClaims,proto3" json:"ValidatorClaims,omitempty"`
}

func (x *ReceiptEthProphecy) Reset() {
	*x = ReceiptEthProphecy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptEthProphecy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptEthProphecy) ProtoMessage() {}

func (x *ReceiptEthProphecy) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptEthProphecy.ProtoReflect.Descriptor instead.
func (*ReceiptEthProphecy) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{11}
}

func (x *ReceiptEthProphecy) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ReceiptEthProphecy) GetStatus() *ProphecyStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ReceiptEthProphecy) GetClaimValidators() []*ClaimValidators {
	if x != nil {
		return x.ClaimValidators
	}
	return nil
}

func (x *ReceiptEthProphecy) GetValidatorClaims() []*ValidatorClaims {
	if x != nil {
		return x.ValidatorClaims
	}
	return nil
}

type ClaimValidators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claim      string     `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
	Validators *StringMap `protobuf:"bytes,2,opt,name=validators,proto3" json:"validators,omitempty"`
}

func (x *ClaimValidators) Reset() {
	*x = ClaimValidators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimValidators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimValidators) ProtoMessage() {}

func (x *ClaimValidators) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimValidators.ProtoReflect.Descriptor instead.
func (*ClaimValidators) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{12}
}

func (x *ClaimValidators) GetClaim() string {
	if x != nil {
		return x.Claim
	}
	return ""
}

func (x *ClaimValidators) GetValidators() *StringMap {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ValidatorClaims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	Claim     string `protobuf:"bytes,2,opt,name=claim,proto3" json:"claim,omitempty"`
}

func (x *ValidatorClaims) Reset() {
	*x = ValidatorClaims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorClaims) ProtoMessage() {}

func (x *ValidatorClaims) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorClaims.ProtoReflect.Descriptor instead.
func (*ValidatorClaims) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{13}
}

func (x *ValidatorClaims) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

func (x *ValidatorClaims) GetClaim() string {
	if x != nil {
		return x.Claim
	}
	return ""
}

type StringMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []string `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *StringMap) Reset() {
	*x = StringMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMap) ProtoMessage() {}

func (x *StringMap) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMap.ProtoReflect.Descriptor instead.
func (*StringMap) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{14}
}

func (x *StringMap) GetValidators() []string {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ValidatorList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []*MsgValidator `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
}

func (x *ValidatorList) Reset() {
	*x = ValidatorList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorList) ProtoMessage() {}

func (x *ValidatorList) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorList.ProtoReflect.Descriptor instead.
func (*ValidatorList) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{15}
}

func (x *ValidatorList) GetValidators() []*MsgValidator {
	if x != nil {
		return x.Validators
	}
	return nil
}

type ProphecyStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       EthBridgeStatus `protobuf:"varint,1,opt,name=Text,proto3,enum=types.EthBridgeStatus" json:"Text,omitempty"`
	FinalClaim string          `protobuf:"bytes,2,opt,name=FinalClaim,proto3" json:"FinalClaim,omitempty"`
}

func (x *ProphecyStatus) Reset() {
	*x = ProphecyStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProphecyStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProphecyStatus) ProtoMessage() {}

func (x *ProphecyStatus) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProphecyStatus.ProtoReflect.Descriptor instead.
func (*ProphecyStatus) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{16}
}

func (x *ProphecyStatus) GetText() EthBridgeStatus {
	if x != nil {
		return x.Text
	}
	return EthBridgeStatus_PendingStatusText
}

func (x *ProphecyStatus) GetFinalClaim() string {
	if x != nil {
		return x.FinalClaim
	}
	return ""
}

type QueryValidatorsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator string `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *QueryValidatorsParams) Reset() {
	*x = QueryValidatorsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryValidatorsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryValidatorsParams) ProtoMessage() {}

func (x *QueryValidatorsParams) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryValidatorsParams.ProtoReflect.Descriptor instead.
func (*QueryValidatorsParams) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{17}
}

func (x *QueryValidatorsParams) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

type ReceiptQueryValidator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validators []*MsgValidator `protobuf:"bytes,1,rep,name=validators,proto3" json:"validators,omitempty"`
	TotalPower int64           `protobuf:"varint,2,opt,name=totalPower,proto3" json:"totalPower,omitempty"`
}

func (x *ReceiptQueryValidator) Reset() {
	*x = ReceiptQueryValidator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQueryValidator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQueryValidator) ProtoMessage() {}

func (x *ReceiptQueryValidator) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQueryValidator.ProtoReflect.Descriptor instead.
func (*ReceiptQueryValidator) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{18}
}

func (x *ReceiptQueryValidator) GetValidators() []*MsgValidator {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *ReceiptQueryValidator) GetTotalPower() int64 {
	if x != nil {
		return x.TotalPower
	}
	return 0
}

type QueryTotalPowerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryTotalPowerParams) Reset() {
	*x = QueryTotalPowerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTotalPowerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTotalPowerParams) ProtoMessage() {}

func (x *QueryTotalPowerParams) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTotalPowerParams.ProtoReflect.Descriptor instead.
func (*QueryTotalPowerParams) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{19}
}

type ReceiptQueryTotalPower struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPower int64 `protobuf:"varint,1,opt,name=totalPower,proto3" json:"totalPower,omitempty"`
}

func (x *ReceiptQueryTotalPower) Reset() {
	*x = ReceiptQueryTotalPower{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQueryTotalPower) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQueryTotalPower) ProtoMessage() {}

func (x *ReceiptQueryTotalPower) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQueryTotalPower.ProtoReflect.Descriptor instead.
func (*ReceiptQueryTotalPower) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{20}
}

func (x *ReceiptQueryTotalPower) GetTotalPower() int64 {
	if x != nil {
		return x.TotalPower
	}
	return 0
}

type QueryConsensusThresholdParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryConsensusThresholdParams) Reset() {
	*x = QueryConsensusThresholdParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryConsensusThresholdParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryConsensusThresholdParams) ProtoMessage() {}

func (x *QueryConsensusThresholdParams) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryConsensusThresholdParams.ProtoReflect.Descriptor instead.
func (*QueryConsensusThresholdParams) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{21}
}

type ReceiptQueryConsensusThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsensusThreshold int64 `protobuf:"varint,1,opt,name=consensusThreshold,proto3" json:"consensusThreshold,omitempty"`
}

func (x *ReceiptQueryConsensusThreshold) Reset() {
	*x = ReceiptQueryConsensusThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQueryConsensusThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQueryConsensusThreshold) ProtoMessage() {}

func (x *ReceiptQueryConsensusThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQueryConsensusThreshold.ProtoReflect.Descriptor instead.
func (*ReceiptQueryConsensusThreshold) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{22}
}

func (x *ReceiptQueryConsensusThreshold) GetConsensusThreshold() int64 {
	if x != nil {
		return x.ConsensusThreshold
	}
	return 0
}

type QuerySymbolAssetsByTxTypeParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Direction   int64  `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	TxType      string `protobuf:"bytes,3,opt,name=txType,proto3" json:"txType,omitempty"`
	TokenAddr   string `protobuf:"bytes,4,opt,name=tokenAddr,proto3" json:"tokenAddr,omitempty"`
	Decimal     int64  `protobuf:"varint,5,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *QuerySymbolAssetsByTxTypeParams) Reset() {
	*x = QuerySymbolAssetsByTxTypeParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySymbolAssetsByTxTypeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySymbolAssetsByTxTypeParams) ProtoMessage() {}

func (x *QuerySymbolAssetsByTxTypeParams) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySymbolAssetsByTxTypeParams.ProtoReflect.Descriptor instead.
func (*QuerySymbolAssetsByTxTypeParams) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{23}
}

func (x *QuerySymbolAssetsByTxTypeParams) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *QuerySymbolAssetsByTxTypeParams) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *QuerySymbolAssetsByTxTypeParams) GetTxType() string {
	if x != nil {
		return x.TxType
	}
	return ""
}

func (x *QuerySymbolAssetsByTxTypeParams) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

func (x *QuerySymbolAssetsByTxTypeParams) GetDecimal() int64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type ReceiptQuerySymbolAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res []*ReceiptQuerySymbolAssetsByTxType `protobuf:"bytes,1,rep,name=res,proto3" json:"res,omitempty"`
}

func (x *ReceiptQuerySymbolAssets) Reset() {
	*x = ReceiptQuerySymbolAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQuerySymbolAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQuerySymbolAssets) ProtoMessage() {}

func (x *ReceiptQuerySymbolAssets) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQuerySymbolAssets.ProtoReflect.Descriptor instead.
func (*ReceiptQuerySymbolAssets) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{24}
}

func (x *ReceiptQuerySymbolAssets) GetRes() []*ReceiptQuerySymbolAssetsByTxType {
	if x != nil {
		return x.Res
	}
	return nil
}

type ReceiptQuerySymbolAssetsByTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	TotalAmount string `protobuf:"bytes,2,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	TxType      string `protobuf:"bytes,3,opt,name=txType,proto3" json:"txType,omitempty"`
	Direction   int64  `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	TokenAddr   string `protobuf:"bytes,5,opt,name=tokenAddr,proto3" json:"tokenAddr,omitempty"`
}

func (x *ReceiptQuerySymbolAssetsByTxType) Reset() {
	*x = ReceiptQuerySymbolAssetsByTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQuerySymbolAssetsByTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQuerySymbolAssetsByTxType) ProtoMessage() {}

func (x *ReceiptQuerySymbolAssetsByTxType) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQuerySymbolAssetsByTxType.ProtoReflect.Descriptor instead.
func (*ReceiptQuerySymbolAssetsByTxType) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{25}
}

func (x *ReceiptQuerySymbolAssetsByTxType) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *ReceiptQuerySymbolAssetsByTxType) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *ReceiptQuerySymbolAssetsByTxType) GetTxType() string {
	if x != nil {
		return x.TxType
	}
	return ""
}

func (x *ReceiptQuerySymbolAssetsByTxType) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *ReceiptQuerySymbolAssetsByTxType) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

type QueryRelayerBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	TokenAddr   string `protobuf:"bytes,3,opt,name=tokenAddr,proto3" json:"tokenAddr,omitempty"`
}

func (x *QueryRelayerBalance) Reset() {
	*x = QueryRelayerBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRelayerBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRelayerBalance) ProtoMessage() {}

func (x *QueryRelayerBalance) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRelayerBalance.ProtoReflect.Descriptor instead.
func (*QueryRelayerBalance) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{26}
}

func (x *QueryRelayerBalance) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *QueryRelayerBalance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryRelayerBalance) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

type ReceiptQueryRelayerBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Res []*ReceiptQueryRelayerBalanceForOneToken `protobuf:"bytes,1,rep,name=res,proto3" json:"res,omitempty"`
}

func (x *ReceiptQueryRelayerBalance) Reset() {
	*x = ReceiptQueryRelayerBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQueryRelayerBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQueryRelayerBalance) ProtoMessage() {}

func (x *ReceiptQueryRelayerBalance) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQueryRelayerBalance.ProtoReflect.Descriptor instead.
func (*ReceiptQueryRelayerBalance) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{27}
}

func (x *ReceiptQueryRelayerBalance) GetRes() []*ReceiptQueryRelayerBalanceForOneToken {
	if x != nil {
		return x.Res
	}
	return nil
}

type ReceiptQueryRelayerBalanceForOneToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance     string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	TokenSymbol string `protobuf:"bytes,2,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	TokenAddr   string `protobuf:"bytes,3,opt,name=tokenAddr,proto3" json:"tokenAddr,omitempty"`
}

func (x *ReceiptQueryRelayerBalanceForOneToken) Reset() {
	*x = ReceiptQueryRelayerBalanceForOneToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptQueryRelayerBalanceForOneToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptQueryRelayerBalanceForOneToken) ProtoMessage() {}

func (x *ReceiptQueryRelayerBalanceForOneToken) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptQueryRelayerBalanceForOneToken.ProtoReflect.Descriptor instead.
func (*ReceiptQueryRelayerBalanceForOneToken) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{28}
}

func (x *ReceiptQueryRelayerBalanceForOneToken) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *ReceiptQueryRelayerBalanceForOneToken) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *ReceiptQueryRelayerBalanceForOneToken) GetTokenAddr() string {
	if x != nil {
		return x.TokenAddr
	}
	return ""
}

type ReceiptTokenToTokenAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenAddress []string `protobuf:"bytes,1,rep,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
}

func (x *ReceiptTokenToTokenAddress) Reset() {
	*x = ReceiptTokenToTokenAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x2ethereum_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptTokenToTokenAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptTokenToTokenAddress) ProtoMessage() {}

func (x *ReceiptTokenToTokenAddress) ProtoReflect() protoreflect.Message {
	mi := &file_x2ethereum_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptTokenToTokenAddress.ProtoReflect.Descriptor instead.
func (*ReceiptTokenToTokenAddress) Descriptor() ([]byte, []int) {
	return file_x2ethereum_proto_rawDescGZIP(), []int{29}
}

func (x *ReceiptTokenToTokenAddress) GetTokenAddress() []string {
	if x != nil {
		return x.TokenAddress
	}
	return nil
}

var File_x2ethereum_proto protoreflect.FileDescriptor

var file_x2ethereum_proto_rawDesc = []byte{
	0x0a, 0x10, 0x78, 0x32, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfd, 0x05, 0x0a, 0x10,
	0x58, 0x32, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x4c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x48, 0x00, 0x52,
	0x0f, 0x65, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x42,
	0x75, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x48, 0x00, 0x52,
	0x0f, 0x65, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x42, 0x75, 0x72, 0x6e,
	0x12, 0x41, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45, 0x74, 0x68,
	0x42, 0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x48,
	0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x42,
	0x75, 0x72, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f,
	0x45, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45,
	0x74, 0x68, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45,
	0x74, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x3f, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x00, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x73, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x15, 0x73,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x15, 0x73, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x33, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x48, 0x00, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x45, 0x78, 0x65, 0x63, 0x12, 0x43, 0x0a,
	0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78, 0x65,
	0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x48, 0x00,
	0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x6f, 0x6d, 0x45, 0x78,
	0x65, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x22, 0x3e, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x22, 0xb1, 0x03, 0x0a, 0x0b, 0x45, 0x74, 0x68, 0x32, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x33, 0x33, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x45,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x34,
	0x0a, 0x15, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x42,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x33, 0x33, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x4f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33,
	0x33, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x0c,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x33, 0x33, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x22, 0xfc, 0x03, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x74,
	0x68, 0x32, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x15, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x78,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x78, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63,
	0x79, 0x49, 0x44, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x68,
	0x65, 0x63, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x33, 0x33, 0x54, 0x6f, 0x45, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x33, 0x33, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x44, 0x6f, 0x74, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22,
	0x76, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x70, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x34,
	0x0a, 0x15, 0x6e, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6e,
	0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x78, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18,
	0x0a, 0x07, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x45, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x0f, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x0f, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x0f,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x30, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x45, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x2b,
	0x0a, 0x09, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x44, 0x0a, 0x0d, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0x5c, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x68, 0x65, 0x63, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x74, 0x68, 0x42, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22,
	0x35, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x33, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x38, 0x0a,
	0x16, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x1f, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x50, 0x0a, 0x1e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x1f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x42, 0x79, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x22, 0x55,
	0x0a, 0x18, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x03, 0x72, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x42, 0x79, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x03, 0x72, 0x65, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x20, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x42, 0x79, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x22, 0x6f, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x5c, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x3e, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x03, 0x72, 0x65,
	0x73, 0x22, 0x81, 0x01, 0x0a, 0x25, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x46, 0x6f, 0x72, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x22, 0x40, 0x0a, 0x1a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x6f, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2a, 0x55, 0x0a, 0x0f, 0x45, 0x74, 0x68, 0x42, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x10, 0x02, 0x32, 0x0c,
	0x0a, 0x0a, 0x78, 0x32, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_x2ethereum_proto_rawDescOnce sync.Once
	file_x2ethereum_proto_rawDescData = file_x2ethereum_proto_rawDesc
)

func file_x2ethereum_proto_rawDescGZIP() []byte {
	file_x2ethereum_proto_rawDescOnce.Do(func() {
		file_x2ethereum_proto_rawDescData = protoimpl.X.CompressGZIP(file_x2ethereum_proto_rawDescData)
	})
	return file_x2ethereum_proto_rawDescData
}

var file_x2ethereum_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_x2ethereum_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_x2ethereum_proto_goTypes = []interface{}{
	(EthBridgeStatus)(0),                          // 0: types.EthBridgeStatus
	(*X2EthereumAction)(nil),                      // 1: types.X2ethereumAction
	(*MsgConsensusThreshold)(nil),                 // 2: types.MsgConsensusThreshold
	(*MsgValidator)(nil),                          // 3: types.MsgValidator
	(*Eth2Chain33)(nil),                           // 4: types.Eth2Chain33
	(*OracleClaimContent)(nil),                    // 5: types.OracleClaimContent
	(*Chain33ToEth)(nil),                          // 6: types.Chain33ToEth
	(*ReceiptEth2Chain33)(nil),                    // 7: types.ReceiptEth2Chain33
	(*ReceiptChain33ToEth)(nil),                   // 8: types.ReceiptChain33ToEth
	(*ReceiptValidator)(nil),                      // 9: types.ReceiptValidator
	(*ReceiptSetConsensusThreshold)(nil),          // 10: types.ReceiptSetConsensusThreshold
	(*QueryEthProphecyParams)(nil),                // 11: types.QueryEthProphecyParams
	(*ReceiptEthProphecy)(nil),                    // 12: types.ReceiptEthProphecy
	(*ClaimValidators)(nil),                       // 13: types.ClaimValidators
	(*ValidatorClaims)(nil),                       // 14: types.ValidatorClaims
	(*StringMap)(nil),                             // 15: types.StringMap
	(*ValidatorList)(nil),                         // 16: types.ValidatorList
	(*ProphecyStatus)(nil),                        // 17: types.ProphecyStatus
	(*QueryValidatorsParams)(nil),                 // 18: types.QueryValidatorsParams
	(*ReceiptQueryValidator)(nil),                 // 19: types.ReceiptQueryValidator
	(*QueryTotalPowerParams)(nil),                 // 20: types.QueryTotalPowerParams
	(*ReceiptQueryTotalPower)(nil),                // 21: types.ReceiptQueryTotalPower
	(*QueryConsensusThresholdParams)(nil),         // 22: types.QueryConsensusThresholdParams
	(*ReceiptQueryConsensusThreshold)(nil),        // 23: types.ReceiptQueryConsensusThreshold
	(*QuerySymbolAssetsByTxTypeParams)(nil),       // 24: types.QuerySymbolAssetsByTxTypeParams
	(*ReceiptQuerySymbolAssets)(nil),              // 25: types.ReceiptQuerySymbolAssets
	(*ReceiptQuerySymbolAssetsByTxType)(nil),      // 26: types.ReceiptQuerySymbolAssetsByTxType
	(*QueryRelayerBalance)(nil),                   // 27: types.QueryRelayerBalance
	(*ReceiptQueryRelayerBalance)(nil),            // 28: types.ReceiptQueryRelayerBalance
	(*ReceiptQueryRelayerBalanceForOneToken)(nil), // 29: types.ReceiptQueryRelayerBalanceForOneToken
	(*ReceiptTokenToTokenAddress)(nil),            // 30: types.ReceiptTokenToTokenAddress
	(*types.AssetsTransfer)(nil),                  // 31: types.AssetsTransfer
	(*types.AssetsTransferToExec)(nil),            // 32: types.AssetsTransferToExec
	(*types.AssetsWithdraw)(nil),                  // 33: types.AssetsWithdraw
}
var file_x2ethereum_proto_depIdxs = []int32{
	4,  // 0: types.X2ethereumAction.eth2Chain33Lock:type_name -> types.Eth2Chain33
	4,  // 1: types.X2ethereumAction.eth2Chain33Burn:type_name -> types.Eth2Chain33
	6,  // 2: types.X2ethereumAction.chain33ToEthBurn:type_name -> types.Chain33ToEth
	6,  // 3: types.X2ethereumAction.chain33ToEthLock:type_name -> types.Chain33ToEth
	3,  // 4: types.X2ethereumAction.addValidator:type_name -> types.MsgValidator
	3,  // 5: types.X2ethereumAction.removeValidator:type_name -> types.MsgValidator
	3,  // 6: types.X2ethereumAction.modifyPower:type_name -> types.MsgValidator
	2,  // 7: types.X2ethereumAction.setConsensusThreshold:type_name -> types.MsgConsensusThreshold
	31, // 8: types.X2ethereumAction.transfer:type_name -> types.AssetsTransfer
	32, // 9: types.X2ethereumAction.transferToExec:type_name -> types.AssetsTransferToExec
	33, // 10: types.X2ethereumAction.withdrawFromExec:type_name -> types.AssetsWithdraw
	17, // 11: types.ReceiptEthProphecy.Status:type_name -> types.ProphecyStatus
	13, // 12: types.ReceiptEthProphecy.ClaimValidators:type_name -> types.ClaimValidators
	14, // 13: types.ReceiptEthProphecy.ValidatorClaims:type_name -> types.ValidatorClaims
	15, // 14: types.ClaimValidators.validators:type_name -> types.StringMap
	3,  // 15: types.ValidatorList.validators:type_name -> types.MsgValidator
	0,  // 16: types.ProphecyStatus.Text:type_name -> types.EthBridgeStatus
	3,  // 17: types.ReceiptQueryValidator.validators:type_name -> types.MsgValidator
	26, // 18: types.ReceiptQuerySymbolAssets.res:type_name -> types.ReceiptQuerySymbolAssetsByTxType
	29, // 19: types.ReceiptQueryRelayerBalance.res:type_name -> types.ReceiptQueryRelayerBalanceForOneToken
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_x2ethereum_proto_init() }
func file_x2ethereum_proto_init() {
	if File_x2ethereum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_x2ethereum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*X2EthereumAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgConsensusThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eth2Chain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OracleClaimContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain33ToEth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptEth2Chain33); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptChain33ToEth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptSetConsensusThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEthProphecyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptEthProphecy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimValidators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorClaims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProphecyStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryValidatorsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQueryValidator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTotalPowerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQueryTotalPower); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryConsensusThresholdParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQueryConsensusThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySymbolAssetsByTxTypeParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQuerySymbolAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQuerySymbolAssetsByTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRelayerBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQueryRelayerBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptQueryRelayerBalanceForOneToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x2ethereum_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptTokenToTokenAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_x2ethereum_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*X2EthereumAction_Eth2Chain33Lock)(nil),
		(*X2EthereumAction_Eth2Chain33Burn)(nil),
		(*X2EthereumAction_Chain33ToEthBurn)(nil),
		(*X2EthereumAction_Chain33ToEthLock)(nil),
		(*X2EthereumAction_AddValidator)(nil),
		(*X2EthereumAction_RemoveValidator)(nil),
		(*X2EthereumAction_ModifyPower)(nil),
		(*X2EthereumAction_SetConsensusThreshold)(nil),
		(*X2EthereumAction_Transfer)(nil),
		(*X2EthereumAction_TransferToExec)(nil),
		(*X2EthereumAction_WithdrawFromExec)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_x2ethereum_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_x2ethereum_proto_goTypes,
		DependencyIndexes: file_x2ethereum_proto_depIdxs,
		EnumInfos:         file_x2ethereum_proto_enumTypes,
		MessageInfos:      file_x2ethereum_proto_msgTypes,
	}.Build()
	File_x2ethereum_proto = out.File
	file_x2ethereum_proto_rawDesc = nil
	file_x2ethereum_proto_goTypes = nil
	file_x2ethereum_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// X2EthereumClient is the client API for X2Ethereum service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type X2EthereumClient interface {
}

type x2EthereumClient struct {
	cc grpc.ClientConnInterface
}

func NewX2EthereumClient(cc grpc.ClientConnInterface) X2EthereumClient {
	return &x2EthereumClient{cc}
}

// X2EthereumServer is the server API for X2Ethereum service.
type X2EthereumServer interface {
}

// UnimplementedX2EthereumServer can be embedded to have forward compatible implementations.
type UnimplementedX2EthereumServer struct {
}

func RegisterX2EthereumServer(s *grpc.Server, srv X2EthereumServer) {
	s.RegisterService(&_X2Ethereum_serviceDesc, srv)
}

var _X2Ethereum_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.x2ethereum",
	HandlerType: (*X2EthereumServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "x2ethereum.proto",
}
