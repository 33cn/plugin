// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: issuance.proto

package types

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 发行信息
type Issuance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId             string        `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`                           //发行ID,一期发行对应一个ID
	TotalBalance           int64         `protobuf:"varint,2,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`                      //当期发行的总金额(ccny)
	DebtCeiling            int64         `protobuf:"varint,3,opt,name=debtCeiling,proto3" json:"debtCeiling,omitempty"`                        //单用户可借出的限额(ccny)
	LiquidationRatio       int64         `protobuf:"varint,4,opt,name=liquidationRatio,proto3" json:"liquidationRatio,omitempty"`              //清算比例
	CollateralValue        int64         `protobuf:"varint,5,opt,name=collateralValue,proto3" json:"collateralValue,omitempty"`                //抵押物总数量(bty)
	DebtValue              int64         `protobuf:"varint,6,opt,name=debtValue,proto3" json:"debtValue,omitempty"`                            //产生的ccny数量
	DebtRecords            []*DebtRecord `protobuf:"bytes,7,rep,name=debtRecords,proto3" json:"debtRecords,omitempty"`                         //大户抵押记录
	InvalidRecords         []*DebtRecord `protobuf:"bytes,8,rep,name=invalidRecords,proto3" json:"invalidRecords,omitempty"`                   //大户抵押记录
	Status                 int32         `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`                                  //当期发行的状态，是否关闭
	LatestLiquidationPrice int64         `protobuf:"varint,10,opt,name=latestLiquidationPrice,proto3" json:"latestLiquidationPrice,omitempty"` //最高清算价格
	Period                 int64         `protobuf:"varint,11,opt,name=period,proto3" json:"period,omitempty"`                                 //发行最大期限
	LatestExpireTime       int64         `protobuf:"varint,12,opt,name=latestExpireTime,proto3" json:"latestExpireTime,omitempty"`             //最近超期时间
	CreateTime             int64         `protobuf:"varint,13,opt,name=createTime,proto3" json:"createTime,omitempty"`                         //创建时间
	Balance                int64         `protobuf:"varint,14,opt,name=balance,proto3" json:"balance,omitempty"`                               //剩余可发行ccny
	IssuerAddr             string        `protobuf:"bytes,15,opt,name=issuerAddr,proto3" json:"issuerAddr,omitempty"`                          //发行地址
}

func (x *Issuance) Reset() {
	*x = Issuance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issuance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issuance) ProtoMessage() {}

func (x *Issuance) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issuance.ProtoReflect.Descriptor instead.
func (*Issuance) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{0}
}

func (x *Issuance) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *Issuance) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *Issuance) GetDebtCeiling() int64 {
	if x != nil {
		return x.DebtCeiling
	}
	return 0
}

func (x *Issuance) GetLiquidationRatio() int64 {
	if x != nil {
		return x.LiquidationRatio
	}
	return 0
}

func (x *Issuance) GetCollateralValue() int64 {
	if x != nil {
		return x.CollateralValue
	}
	return 0
}

func (x *Issuance) GetDebtValue() int64 {
	if x != nil {
		return x.DebtValue
	}
	return 0
}

func (x *Issuance) GetDebtRecords() []*DebtRecord {
	if x != nil {
		return x.DebtRecords
	}
	return nil
}

func (x *Issuance) GetInvalidRecords() []*DebtRecord {
	if x != nil {
		return x.InvalidRecords
	}
	return nil
}

func (x *Issuance) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Issuance) GetLatestLiquidationPrice() int64 {
	if x != nil {
		return x.LatestLiquidationPrice
	}
	return 0
}

func (x *Issuance) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Issuance) GetLatestExpireTime() int64 {
	if x != nil {
		return x.LatestExpireTime
	}
	return 0
}

func (x *Issuance) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Issuance) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Issuance) GetIssuerAddr() string {
	if x != nil {
		return x.IssuerAddr
	}
	return ""
}

// 抵押记录
type DebtRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAddr      string `protobuf:"bytes,1,opt,name=accountAddr,proto3" json:"accountAddr,omitempty"`            //抵押人地址
	StartTime        int64  `protobuf:"varint,2,opt,name=startTime,proto3" json:"startTime,omitempty"`               //抵押时间
	CollateralValue  int64  `protobuf:"varint,3,opt,name=collateralValue,proto3" json:"collateralValue,omitempty"`   //抵押物价值(bty)
	CollateralPrice  int64  `protobuf:"varint,4,opt,name=collateralPrice,proto3" json:"collateralPrice,omitempty"`   //抵押物价格
	DebtValue        int64  `protobuf:"varint,5,opt,name=debtValue,proto3" json:"debtValue,omitempty"`               //债务价值(ccny)
	LiquidationPrice int64  `protobuf:"varint,6,opt,name=liquidationPrice,proto3" json:"liquidationPrice,omitempty"` //抵押物清算价格
	Status           int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`                     //抵押状态，是否被清算
	LiquidateTime    int64  `protobuf:"varint,8,opt,name=liquidateTime,proto3" json:"liquidateTime,omitempty"`       //清算时间
	ExpireTime       int64  `protobuf:"varint,9,opt,name=expireTime,proto3" json:"expireTime,omitempty"`             //超时清算时间
	PreStatus        int32  `protobuf:"varint,10,opt,name=preStatus,proto3" json:"preStatus,omitempty"`              //上一次抵押状态，用于告警恢复
	DebtId           string `protobuf:"bytes,11,opt,name=debtId,proto3" json:"debtId,omitempty"`                     //借贷id
	IssuId           string `protobuf:"bytes,12,opt,name=issuId,proto3" json:"issuId,omitempty"`                     //发行id
}

func (x *DebtRecord) Reset() {
	*x = DebtRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebtRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebtRecord) ProtoMessage() {}

func (x *DebtRecord) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebtRecord.ProtoReflect.Descriptor instead.
func (*DebtRecord) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{1}
}

func (x *DebtRecord) GetAccountAddr() string {
	if x != nil {
		return x.AccountAddr
	}
	return ""
}

func (x *DebtRecord) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *DebtRecord) GetCollateralValue() int64 {
	if x != nil {
		return x.CollateralValue
	}
	return 0
}

func (x *DebtRecord) GetCollateralPrice() int64 {
	if x != nil {
		return x.CollateralPrice
	}
	return 0
}

func (x *DebtRecord) GetDebtValue() int64 {
	if x != nil {
		return x.DebtValue
	}
	return 0
}

func (x *DebtRecord) GetLiquidationPrice() int64 {
	if x != nil {
		return x.LiquidationPrice
	}
	return 0
}

func (x *DebtRecord) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DebtRecord) GetLiquidateTime() int64 {
	if x != nil {
		return x.LiquidateTime
	}
	return 0
}

func (x *DebtRecord) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *DebtRecord) GetPreStatus() int32 {
	if x != nil {
		return x.PreStatus
	}
	return 0
}

func (x *DebtRecord) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

func (x *DebtRecord) GetIssuId() string {
	if x != nil {
		return x.IssuId
	}
	return ""
}

// 资产价格记录
type IssuanceAssetPriceRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordTime int64 `protobuf:"varint,1,opt,name=recordTime,proto3" json:"recordTime,omitempty"` //价格记录时间
	BtyPrice   int64 `protobuf:"varint,2,opt,name=btyPrice,proto3" json:"btyPrice,omitempty"`     // bty价格
}

func (x *IssuanceAssetPriceRecord) Reset() {
	*x = IssuanceAssetPriceRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceAssetPriceRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceAssetPriceRecord) ProtoMessage() {}

func (x *IssuanceAssetPriceRecord) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceAssetPriceRecord.ProtoReflect.Descriptor instead.
func (*IssuanceAssetPriceRecord) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{2}
}

func (x *IssuanceAssetPriceRecord) GetRecordTime() int64 {
	if x != nil {
		return x.RecordTime
	}
	return 0
}

func (x *IssuanceAssetPriceRecord) GetBtyPrice() int64 {
	if x != nil {
		return x.BtyPrice
	}
	return 0
}

// action
type IssuanceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*IssuanceAction_Create
	//	*IssuanceAction_Debt
	//	*IssuanceAction_Repay
	//	*IssuanceAction_Feed
	//	*IssuanceAction_Close
	//	*IssuanceAction_Manage
	Value isIssuanceAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,10,opt,name=ty,proto3" json:"ty,omitempty"`
}

func (x *IssuanceAction) Reset() {
	*x = IssuanceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceAction) ProtoMessage() {}

func (x *IssuanceAction) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceAction.ProtoReflect.Descriptor instead.
func (*IssuanceAction) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{3}
}

func (m *IssuanceAction) GetValue() isIssuanceAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *IssuanceAction) GetCreate() *IssuanceCreate {
	if x, ok := x.GetValue().(*IssuanceAction_Create); ok {
		return x.Create
	}
	return nil
}

func (x *IssuanceAction) GetDebt() *IssuanceDebt {
	if x, ok := x.GetValue().(*IssuanceAction_Debt); ok {
		return x.Debt
	}
	return nil
}

func (x *IssuanceAction) GetRepay() *IssuanceRepay {
	if x, ok := x.GetValue().(*IssuanceAction_Repay); ok {
		return x.Repay
	}
	return nil
}

func (x *IssuanceAction) GetFeed() *IssuanceFeed {
	if x, ok := x.GetValue().(*IssuanceAction_Feed); ok {
		return x.Feed
	}
	return nil
}

func (x *IssuanceAction) GetClose() *IssuanceClose {
	if x, ok := x.GetValue().(*IssuanceAction_Close); ok {
		return x.Close
	}
	return nil
}

func (x *IssuanceAction) GetManage() *IssuanceManage {
	if x, ok := x.GetValue().(*IssuanceAction_Manage); ok {
		return x.Manage
	}
	return nil
}

func (x *IssuanceAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isIssuanceAction_Value interface {
	isIssuanceAction_Value()
}

type IssuanceAction_Create struct {
	Create *IssuanceCreate `protobuf:"bytes,1,opt,name=create,proto3,oneof"` //创建一期发行
}

type IssuanceAction_Debt struct {
	Debt *IssuanceDebt `protobuf:"bytes,2,opt,name=debt,proto3,oneof"` //抵押
}

type IssuanceAction_Repay struct {
	Repay *IssuanceRepay `protobuf:"bytes,3,opt,name=repay,proto3,oneof"` //清算
}

type IssuanceAction_Feed struct {
	Feed *IssuanceFeed `protobuf:"bytes,4,opt,name=feed,proto3,oneof"` //喂价
}

type IssuanceAction_Close struct {
	Close *IssuanceClose `protobuf:"bytes,5,opt,name=close,proto3,oneof"` //关闭
}

type IssuanceAction_Manage struct {
	Manage *IssuanceManage `protobuf:"bytes,6,opt,name=manage,proto3,oneof"` //全局配置
}

func (*IssuanceAction_Create) isIssuanceAction_Value() {}

func (*IssuanceAction_Debt) isIssuanceAction_Value() {}

func (*IssuanceAction_Repay) isIssuanceAction_Value() {}

func (*IssuanceAction_Feed) isIssuanceAction_Value() {}

func (*IssuanceAction_Close) isIssuanceAction_Value() {}

func (*IssuanceAction_Manage) isIssuanceAction_Value() {}

type IssuanceManage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuperAddrs []string `protobuf:"bytes,1,rep,name=superAddrs,proto3" json:"superAddrs,omitempty"` //大户地址
}

func (x *IssuanceManage) Reset() {
	*x = IssuanceManage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceManage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceManage) ProtoMessage() {}

func (x *IssuanceManage) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceManage.ProtoReflect.Descriptor instead.
func (*IssuanceManage) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{4}
}

func (x *IssuanceManage) GetSuperAddrs() []string {
	if x != nil {
		return x.SuperAddrs
	}
	return nil
}

// 创建发行
type IssuanceCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBalance     int64 `protobuf:"varint,1,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`         //发行总金额
	DebtCeiling      int64 `protobuf:"varint,2,opt,name=debtCeiling,proto3" json:"debtCeiling,omitempty"`           //单用户可借出的限额(ccny)
	LiquidationRatio int64 `protobuf:"varint,3,opt,name=liquidationRatio,proto3" json:"liquidationRatio,omitempty"` //清算比例
	Period           int64 `protobuf:"varint,4,opt,name=period,proto3" json:"period,omitempty"`                     //发行最大期限
}

func (x *IssuanceCreate) Reset() {
	*x = IssuanceCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceCreate) ProtoMessage() {}

func (x *IssuanceCreate) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceCreate.ProtoReflect.Descriptor instead.
func (*IssuanceCreate) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{5}
}

func (x *IssuanceCreate) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *IssuanceCreate) GetDebtCeiling() int64 {
	if x != nil {
		return x.DebtCeiling
	}
	return 0
}

func (x *IssuanceCreate) GetLiquidationRatio() int64 {
	if x != nil {
		return x.LiquidationRatio
	}
	return 0
}

func (x *IssuanceCreate) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

// 抵押
type IssuanceDebt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"` //发行ID
	Value      int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`          //借贷金额(ccny)
}

func (x *IssuanceDebt) Reset() {
	*x = IssuanceDebt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceDebt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceDebt) ProtoMessage() {}

func (x *IssuanceDebt) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceDebt.ProtoReflect.Descriptor instead.
func (*IssuanceDebt) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{6}
}

func (x *IssuanceDebt) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *IssuanceDebt) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 质押清算
type IssuanceRepay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"` //发行ID
	DebtId     string `protobuf:"bytes,2,opt,name=debtId,proto3" json:"debtId,omitempty"`         //抵押ID
}

func (x *IssuanceRepay) Reset() {
	*x = IssuanceRepay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceRepay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceRepay) ProtoMessage() {}

func (x *IssuanceRepay) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceRepay.ProtoReflect.Descriptor instead.
func (*IssuanceRepay) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{7}
}

func (x *IssuanceRepay) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *IssuanceRepay) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

// 喂价
type IssuanceFeed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollType int32   `protobuf:"varint,1,opt,name=collType,proto3" json:"collType,omitempty"`    //抵押物价格类型(1，bty，2，btc，3，eth...)
	Price    []int64 `protobuf:"varint,2,rep,packed,name=price,proto3" json:"price,omitempty"`   //喂价
	Volume   []int64 `protobuf:"varint,3,rep,packed,name=volume,proto3" json:"volume,omitempty"` //成交量
}

func (x *IssuanceFeed) Reset() {
	*x = IssuanceFeed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceFeed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceFeed) ProtoMessage() {}

func (x *IssuanceFeed) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceFeed.ProtoReflect.Descriptor instead.
func (*IssuanceFeed) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{8}
}

func (x *IssuanceFeed) GetCollType() int32 {
	if x != nil {
		return x.CollType
	}
	return 0
}

func (x *IssuanceFeed) GetPrice() []int64 {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *IssuanceFeed) GetVolume() []int64 {
	if x != nil {
		return x.Volume
	}
	return nil
}

// 借贷关闭
type IssuanceClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"` //发行ID
}

func (x *IssuanceClose) Reset() {
	*x = IssuanceClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceClose) ProtoMessage() {}

func (x *IssuanceClose) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceClose.ProtoReflect.Descriptor instead.
func (*IssuanceClose) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{9}
}

func (x *IssuanceClose) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

// exec_local 发行信息
type ReceiptIssuance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId  string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`
	AccountAddr string `protobuf:"bytes,2,opt,name=accountAddr,proto3" json:"accountAddr,omitempty"`
	DebtId      string `protobuf:"bytes,3,opt,name=debtId,proto3" json:"debtId,omitempty"`
	Status      int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReceiptIssuance) Reset() {
	*x = ReceiptIssuance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptIssuance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptIssuance) ProtoMessage() {}

func (x *ReceiptIssuance) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptIssuance.ProtoReflect.Descriptor instead.
func (*ReceiptIssuance) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{10}
}

func (x *ReceiptIssuance) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *ReceiptIssuance) GetAccountAddr() string {
	if x != nil {
		return x.AccountAddr
	}
	return ""
}

func (x *ReceiptIssuance) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

func (x *ReceiptIssuance) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// exec_local issuid记录信息
type ReceiptIssuanceID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`
	Status     int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReceiptIssuanceID) Reset() {
	*x = ReceiptIssuanceID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptIssuanceID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptIssuanceID) ProtoMessage() {}

func (x *ReceiptIssuanceID) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptIssuanceID.ProtoReflect.Descriptor instead.
func (*ReceiptIssuanceID) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{11}
}

func (x *ReceiptIssuanceID) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *ReceiptIssuanceID) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

// exec_local 抵押记录信息列表
type IssuanceRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*ReceiptIssuance `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *IssuanceRecords) Reset() {
	*x = IssuanceRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IssuanceRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuanceRecords) ProtoMessage() {}

func (x *IssuanceRecords) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuanceRecords.ProtoReflect.Descriptor instead.
func (*IssuanceRecords) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{12}
}

func (x *IssuanceRecords) GetRecords() []*ReceiptIssuance {
	if x != nil {
		return x.Records
	}
	return nil
}

// 根据ID查询发行信息
type ReqIssuanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`
}

func (x *ReqIssuanceInfo) Reset() {
	*x = ReqIssuanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIssuanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIssuanceInfo) ProtoMessage() {}

func (x *ReqIssuanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIssuanceInfo.ProtoReflect.Descriptor instead.
func (*ReqIssuanceInfo) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{13}
}

func (x *ReqIssuanceInfo) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

// 返回一期发行信息
type RepIssuanceCurrentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`                     //当期发行的状态，是否关闭
	TotalBalance     int64  `protobuf:"varint,2,opt,name=totalBalance,proto3" json:"totalBalance,omitempty"`         //当期发行总金额(ccny)
	DebtCeiling      int64  `protobuf:"varint,3,opt,name=debtCeiling,proto3" json:"debtCeiling,omitempty"`           //单用户可借出的限额(ccny)
	LiquidationRatio int64  `protobuf:"varint,4,opt,name=liquidationRatio,proto3" json:"liquidationRatio,omitempty"` //清算比例
	Balance          int64  `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`                   //剩余可借贷金额(ccny)
	CollateralValue  int64  `protobuf:"varint,6,opt,name=collateralValue,proto3" json:"collateralValue,omitempty"`   //抵押物总数量(bty)
	DebtValue        int64  `protobuf:"varint,7,opt,name=debtValue,proto3" json:"debtValue,omitempty"`               //产生的ccny数量
	Period           int64  `protobuf:"varint,8,opt,name=period,proto3" json:"period,omitempty"`                     //发行最大期限
	IssuId           string `protobuf:"bytes,9,opt,name=issuId,proto3" json:"issuId,omitempty"`                      //发行ID
	CreateTime       int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"`            //创建时间
}

func (x *RepIssuanceCurrentInfo) Reset() {
	*x = RepIssuanceCurrentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceCurrentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceCurrentInfo) ProtoMessage() {}

func (x *RepIssuanceCurrentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceCurrentInfo.ProtoReflect.Descriptor instead.
func (*RepIssuanceCurrentInfo) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{14}
}

func (x *RepIssuanceCurrentInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetTotalBalance() int64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetDebtCeiling() int64 {
	if x != nil {
		return x.DebtCeiling
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetLiquidationRatio() int64 {
	if x != nil {
		return x.LiquidationRatio
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetCollateralValue() int64 {
	if x != nil {
		return x.CollateralValue
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetDebtValue() int64 {
	if x != nil {
		return x.DebtValue
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *RepIssuanceCurrentInfo) GetIssuId() string {
	if x != nil {
		return x.IssuId
	}
	return ""
}

func (x *RepIssuanceCurrentInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 根据ID列表查询多期发行信息
type ReqIssuanceInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceIds []string `protobuf:"bytes,1,rep,name=issuanceIds,proto3" json:"issuanceIds,omitempty"`
}

func (x *ReqIssuanceInfos) Reset() {
	*x = ReqIssuanceInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIssuanceInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIssuanceInfos) ProtoMessage() {}

func (x *ReqIssuanceInfos) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIssuanceInfos.ProtoReflect.Descriptor instead.
func (*ReqIssuanceInfos) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{15}
}

func (x *ReqIssuanceInfos) GetIssuanceIds() []string {
	if x != nil {
		return x.IssuanceIds
	}
	return nil
}

// 返回多期发行信息
type RepIssuanceCurrentInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*RepIssuanceCurrentInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *RepIssuanceCurrentInfos) Reset() {
	*x = RepIssuanceCurrentInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceCurrentInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceCurrentInfos) ProtoMessage() {}

func (x *RepIssuanceCurrentInfos) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceCurrentInfos.ProtoReflect.Descriptor instead.
func (*RepIssuanceCurrentInfos) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{16}
}

func (x *RepIssuanceCurrentInfos) GetInfos() []*RepIssuanceCurrentInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

// 根据发行状态查询
type ReqIssuanceByStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	IssuanceId string `protobuf:"bytes,2,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`
}

func (x *ReqIssuanceByStatus) Reset() {
	*x = ReqIssuanceByStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIssuanceByStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIssuanceByStatus) ProtoMessage() {}

func (x *ReqIssuanceByStatus) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIssuanceByStatus.ProtoReflect.Descriptor instead.
func (*ReqIssuanceByStatus) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{17}
}

func (x *ReqIssuanceByStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqIssuanceByStatus) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

// 返回发行ID列表
type RepIssuanceIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *RepIssuanceIDs) Reset() {
	*x = RepIssuanceIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceIDs) ProtoMessage() {}

func (x *RepIssuanceIDs) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceIDs.ProtoReflect.Descriptor instead.
func (*RepIssuanceIDs) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{18}
}

func (x *RepIssuanceIDs) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

// 根据用户地址查询抵押记录
type ReqIssuanceRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuanceId string `protobuf:"bytes,1,opt,name=issuanceId,proto3" json:"issuanceId,omitempty"`
	Addr       string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Status     int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	DebtId     string `protobuf:"bytes,4,opt,name=debtId,proto3" json:"debtId,omitempty"`
}

func (x *ReqIssuanceRecords) Reset() {
	*x = ReqIssuanceRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqIssuanceRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqIssuanceRecords) ProtoMessage() {}

func (x *ReqIssuanceRecords) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqIssuanceRecords.ProtoReflect.Descriptor instead.
func (*ReqIssuanceRecords) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{19}
}

func (x *ReqIssuanceRecords) GetIssuanceId() string {
	if x != nil {
		return x.IssuanceId
	}
	return ""
}

func (x *ReqIssuanceRecords) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqIssuanceRecords) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqIssuanceRecords) GetDebtId() string {
	if x != nil {
		return x.DebtId
	}
	return ""
}

// 返回记录列表
type RepIssuanceRecords struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records []*DebtRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
}

func (x *RepIssuanceRecords) Reset() {
	*x = RepIssuanceRecords{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceRecords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceRecords) ProtoMessage() {}

func (x *RepIssuanceRecords) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceRecords.ProtoReflect.Descriptor instead.
func (*RepIssuanceRecords) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{20}
}

func (x *RepIssuanceRecords) GetRecords() []*DebtRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

// 返回记录
type RepIssuanceDebtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *DebtRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *RepIssuanceDebtInfo) Reset() {
	*x = RepIssuanceDebtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceDebtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceDebtInfo) ProtoMessage() {}

func (x *RepIssuanceDebtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceDebtInfo.ProtoReflect.Descriptor instead.
func (*RepIssuanceDebtInfo) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{21}
}

func (x *RepIssuanceDebtInfo) GetRecord() *DebtRecord {
	if x != nil {
		return x.Record
	}
	return nil
}

// 返回最新抵押物价格
type RepIssuancePrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price int64 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"` //当前抵押物最新价格
}

func (x *RepIssuancePrice) Reset() {
	*x = RepIssuancePrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuancePrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuancePrice) ProtoMessage() {}

func (x *RepIssuancePrice) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuancePrice.ProtoReflect.Descriptor instead.
func (*RepIssuancePrice) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{22}
}

func (x *RepIssuancePrice) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

// 返回用户发行总额
type RepIssuanceUserBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"` //返回用户发行总额
}

func (x *RepIssuanceUserBalance) Reset() {
	*x = RepIssuanceUserBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_issuance_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepIssuanceUserBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepIssuanceUserBalance) ProtoMessage() {}

func (x *RepIssuanceUserBalance) ProtoReflect() protoreflect.Message {
	mi := &file_issuance_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepIssuanceUserBalance.ProtoReflect.Descriptor instead.
func (*RepIssuanceUserBalance) Descriptor() ([]byte, []int) {
	return file_issuance_proto_rawDescGZIP(), []int{23}
}

func (x *RepIssuanceUserBalance) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

var File_issuance_proto protoreflect.FileDescriptor

var file_issuance_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xc2, 0x04, 0x0a, 0x08, 0x49, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x74,
	0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x62, 0x74, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33,
	0x0a, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x74,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0e,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0x96, 0x03, 0x0a,
	0x0a, 0x44, 0x65, 0x62, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x73, 0x73, 0x75, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x18, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x74, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x62, 0x74, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xbd, 0x02,
	0x0a, 0x0e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x65, 0x62, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x65, 0x62, 0x74, 0x48, 0x00, 0x52, 0x04, 0x64, 0x65, 0x62, 0x74, 0x12, 0x2c, 0x0a, 0x05,
	0x72, 0x65, 0x70, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x61,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x70, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x66, 0x65,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x74, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a,
	0x0e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x73, 0x22,
	0x9a, 0x01, 0x0a, 0x0e, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x74, 0x43, 0x65,
	0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x62,
	0x74, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x44, 0x0a, 0x0c,
	0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x62, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x0c, 0x49,
	0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63,
	0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65,
	0x62, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4b, 0x0a, 0x11,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x43, 0x0a, 0x0f, 0x49, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x07,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x31,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x22, 0xd4, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x74,
	0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x62, 0x74, 0x43, 0x65, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x65, 0x62, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x49,
	0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x4e,
	0x0a, 0x17, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4d,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x22, 0x0a,
	0x0e, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49, 0x44,
	0x73, 0x22, 0x78, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x73, 0x75, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x73,
	0x75, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x62, 0x74, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x52,
	0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x40,
	0x0a, 0x13, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x65, 0x62,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x62, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x22, 0x28, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x52, 0x65,
	0x70, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0a,
	0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_issuance_proto_rawDescOnce sync.Once
	file_issuance_proto_rawDescData = file_issuance_proto_rawDesc
)

func file_issuance_proto_rawDescGZIP() []byte {
	file_issuance_proto_rawDescOnce.Do(func() {
		file_issuance_proto_rawDescData = protoimpl.X.CompressGZIP(file_issuance_proto_rawDescData)
	})
	return file_issuance_proto_rawDescData
}

var file_issuance_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_issuance_proto_goTypes = []interface{}{
	(*Issuance)(nil),                 // 0: types.Issuance
	(*DebtRecord)(nil),               // 1: types.DebtRecord
	(*IssuanceAssetPriceRecord)(nil), // 2: types.IssuanceAssetPriceRecord
	(*IssuanceAction)(nil),           // 3: types.IssuanceAction
	(*IssuanceManage)(nil),           // 4: types.IssuanceManage
	(*IssuanceCreate)(nil),           // 5: types.IssuanceCreate
	(*IssuanceDebt)(nil),             // 6: types.IssuanceDebt
	(*IssuanceRepay)(nil),            // 7: types.IssuanceRepay
	(*IssuanceFeed)(nil),             // 8: types.IssuanceFeed
	(*IssuanceClose)(nil),            // 9: types.IssuanceClose
	(*ReceiptIssuance)(nil),          // 10: types.ReceiptIssuance
	(*ReceiptIssuanceID)(nil),        // 11: types.ReceiptIssuanceID
	(*IssuanceRecords)(nil),          // 12: types.IssuanceRecords
	(*ReqIssuanceInfo)(nil),          // 13: types.ReqIssuanceInfo
	(*RepIssuanceCurrentInfo)(nil),   // 14: types.RepIssuanceCurrentInfo
	(*ReqIssuanceInfos)(nil),         // 15: types.ReqIssuanceInfos
	(*RepIssuanceCurrentInfos)(nil),  // 16: types.RepIssuanceCurrentInfos
	(*ReqIssuanceByStatus)(nil),      // 17: types.ReqIssuanceByStatus
	(*RepIssuanceIDs)(nil),           // 18: types.RepIssuanceIDs
	(*ReqIssuanceRecords)(nil),       // 19: types.ReqIssuanceRecords
	(*RepIssuanceRecords)(nil),       // 20: types.RepIssuanceRecords
	(*RepIssuanceDebtInfo)(nil),      // 21: types.RepIssuanceDebtInfo
	(*RepIssuancePrice)(nil),         // 22: types.RepIssuancePrice
	(*RepIssuanceUserBalance)(nil),   // 23: types.RepIssuanceUserBalance
}
var file_issuance_proto_depIdxs = []int32{
	1,  // 0: types.Issuance.debtRecords:type_name -> types.DebtRecord
	1,  // 1: types.Issuance.invalidRecords:type_name -> types.DebtRecord
	5,  // 2: types.IssuanceAction.create:type_name -> types.IssuanceCreate
	6,  // 3: types.IssuanceAction.debt:type_name -> types.IssuanceDebt
	7,  // 4: types.IssuanceAction.repay:type_name -> types.IssuanceRepay
	8,  // 5: types.IssuanceAction.feed:type_name -> types.IssuanceFeed
	9,  // 6: types.IssuanceAction.close:type_name -> types.IssuanceClose
	4,  // 7: types.IssuanceAction.manage:type_name -> types.IssuanceManage
	10, // 8: types.IssuanceRecords.records:type_name -> types.ReceiptIssuance
	14, // 9: types.RepIssuanceCurrentInfos.infos:type_name -> types.RepIssuanceCurrentInfo
	1,  // 10: types.RepIssuanceRecords.records:type_name -> types.DebtRecord
	1,  // 11: types.RepIssuanceDebtInfo.record:type_name -> types.DebtRecord
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_issuance_proto_init() }
func file_issuance_proto_init() {
	if File_issuance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_issuance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issuance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebtRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceAssetPriceRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceManage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceDebt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceRepay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceFeed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptIssuance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptIssuanceID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IssuanceRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIssuanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceCurrentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIssuanceInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceCurrentInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIssuanceByStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqIssuanceRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceRecords); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceDebtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuancePrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_issuance_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepIssuanceUserBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_issuance_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*IssuanceAction_Create)(nil),
		(*IssuanceAction_Debt)(nil),
		(*IssuanceAction_Repay)(nil),
		(*IssuanceAction_Feed)(nil),
		(*IssuanceAction_Close)(nil),
		(*IssuanceAction_Manage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_issuance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_issuance_proto_goTypes,
		DependencyIndexes: file_issuance_proto_depIdxs,
		MessageInfos:      file_issuance_proto_msgTypes,
	}.Build()
	File_issuance_proto = out.File
	file_issuance_proto_rawDesc = nil
	file_issuance_proto_goTypes = nil
	file_issuance_proto_depIdxs = nil
}
