// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: valnode.proto

package types

import (
	context "context"
	reflect "reflect"
	sync "sync"

	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ValNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey []byte `protobuf:"bytes,1,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	Power  int64  `protobuf:"varint,2,opt,name=power,proto3" json:"power,omitempty"`
}

func (x *ValNode) Reset() {
	*x = ValNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValNode) ProtoMessage() {}

func (x *ValNode) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValNode.ProtoReflect.Descriptor instead.
func (*ValNode) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{0}
}

func (x *ValNode) GetPubKey() []byte {
	if x != nil {
		return x.PubKey
	}
	return nil
}

func (x *ValNode) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

type ValNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ValNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ValNodes) Reset() {
	*x = ValNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValNodes) ProtoMessage() {}

func (x *ValNodes) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValNodes.ProtoReflect.Descriptor instead.
func (*ValNodes) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{1}
}

func (x *ValNodes) GetNodes() []*ValNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ValNodeAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*ValNodeAction_Node
	//	*ValNodeAction_BlockInfo
	Value isValNodeAction_Value `protobuf_oneof:"value"`
	Ty    int32                 `protobuf:"varint,3,opt,name=Ty,proto3" json:"Ty,omitempty"`
}

func (x *ValNodeAction) Reset() {
	*x = ValNodeAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValNodeAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValNodeAction) ProtoMessage() {}

func (x *ValNodeAction) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValNodeAction.ProtoReflect.Descriptor instead.
func (*ValNodeAction) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{2}
}

func (m *ValNodeAction) GetValue() isValNodeAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ValNodeAction) GetNode() *ValNode {
	if x, ok := x.GetValue().(*ValNodeAction_Node); ok {
		return x.Node
	}
	return nil
}

func (x *ValNodeAction) GetBlockInfo() *TendermintBlockInfo {
	if x, ok := x.GetValue().(*ValNodeAction_BlockInfo); ok {
		return x.BlockInfo
	}
	return nil
}

func (x *ValNodeAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isValNodeAction_Value interface {
	isValNodeAction_Value()
}

type ValNodeAction_Node struct {
	Node *ValNode `protobuf:"bytes,1,opt,name=node,proto3,oneof"`
}

type ValNodeAction_BlockInfo struct {
	BlockInfo *TendermintBlockInfo `protobuf:"bytes,2,opt,name=blockInfo,proto3,oneof"`
}

func (*ValNodeAction_Node) isValNodeAction_Value() {}

func (*ValNodeAction_BlockInfo) isValNodeAction_Value() {}

type ReqValNodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ReqValNodes) Reset() {
	*x = ReqValNodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqValNodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqValNodes) ProtoMessage() {}

func (x *ReqValNodes) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqValNodes.ProtoReflect.Descriptor instead.
func (*ReqValNodes) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{3}
}

func (x *ReqValNodes) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ReqBlockInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *ReqBlockInfo) Reset() {
	*x = ReqBlockInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqBlockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqBlockInfo) ProtoMessage() {}

func (x *ReqBlockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqBlockInfo.ProtoReflect.Descriptor instead.
func (*ReqBlockInfo) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{4}
}

func (x *ReqBlockInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type ValNodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeIP      string `protobuf:"bytes,1,opt,name=nodeIP,proto3" json:"nodeIP,omitempty"`
	NodeID      string `protobuf:"bytes,2,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Address     string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	PubKey      string `protobuf:"bytes,4,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	VotingPower int64  `protobuf:"varint,5,opt,name=votingPower,proto3" json:"votingPower,omitempty"`
	Accum       int64  `protobuf:"varint,6,opt,name=accum,proto3" json:"accum,omitempty"`
}

func (x *ValNodeInfo) Reset() {
	*x = ValNodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValNodeInfo) ProtoMessage() {}

func (x *ValNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValNodeInfo.ProtoReflect.Descriptor instead.
func (*ValNodeInfo) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{5}
}

func (x *ValNodeInfo) GetNodeIP() string {
	if x != nil {
		return x.NodeIP
	}
	return ""
}

func (x *ValNodeInfo) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ValNodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ValNodeInfo) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *ValNodeInfo) GetVotingPower() int64 {
	if x != nil {
		return x.VotingPower
	}
	return 0
}

func (x *ValNodeInfo) GetAccum() int64 {
	if x != nil {
		return x.Accum
	}
	return 0
}

type ValNodeInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ValNodeInfo `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ValNodeInfoSet) Reset() {
	*x = ValNodeInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValNodeInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValNodeInfoSet) ProtoMessage() {}

func (x *ValNodeInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValNodeInfoSet.ProtoReflect.Descriptor instead.
func (*ValNodeInfoSet) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{6}
}

func (x *ValNodeInfoSet) GetNodes() []*ValNodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type PerfStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalTx     int64 `protobuf:"varint,1,opt,name=totalTx,proto3" json:"totalTx,omitempty"`
	TotalBlock  int64 `protobuf:"varint,2,opt,name=totalBlock,proto3" json:"totalBlock,omitempty"`
	TxPerBlock  int64 `protobuf:"varint,3,opt,name=txPerBlock,proto3" json:"txPerBlock,omitempty"`
	TotalSecond int64 `protobuf:"varint,4,opt,name=totalSecond,proto3" json:"totalSecond,omitempty"`
	TxPerSecond int64 `protobuf:"varint,5,opt,name=txPerSecond,proto3" json:"txPerSecond,omitempty"`
}

func (x *PerfStat) Reset() {
	*x = PerfStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerfStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerfStat) ProtoMessage() {}

func (x *PerfStat) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerfStat.ProtoReflect.Descriptor instead.
func (*PerfStat) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{7}
}

func (x *PerfStat) GetTotalTx() int64 {
	if x != nil {
		return x.TotalTx
	}
	return 0
}

func (x *PerfStat) GetTotalBlock() int64 {
	if x != nil {
		return x.TotalBlock
	}
	return 0
}

func (x *PerfStat) GetTxPerBlock() int64 {
	if x != nil {
		return x.TxPerBlock
	}
	return 0
}

func (x *PerfStat) GetTotalSecond() int64 {
	if x != nil {
		return x.TotalSecond
	}
	return 0
}

func (x *PerfStat) GetTxPerSecond() int64 {
	if x != nil {
		return x.TxPerSecond
	}
	return 0
}

type ReqPerfStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *ReqPerfStat) Reset() {
	*x = ReqPerfStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_valnode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPerfStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPerfStat) ProtoMessage() {}

func (x *ReqPerfStat) ProtoReflect() protoreflect.Message {
	mi := &file_valnode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPerfStat.ProtoReflect.Descriptor instead.
func (*ReqPerfStat) Descriptor() ([]byte, []int) {
	return file_valnode_proto_rawDescGZIP(), []int{8}
}

func (x *ReqPerfStat) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ReqPerfStat) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

var File_valnode_proto protoreflect.FileDescriptor

var file_valnode_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x07, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22,
	0x30, 0x0a, 0x08, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x54, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x26, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa7, 0x01,
	0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x22, 0x3a, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x66, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x78,
	0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x78, 0x50, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x78, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x78, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x35,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x50, 0x65, 0x72, 0x66, 0x53, 0x74, 0x61, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x32, 0x6d, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x49, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x0d, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x4e, 0x69, 0x6c, 0x1a, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x49, 0x73, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x4e, 0x69, 0x6c, 0x1a, 0x15, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x74, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_valnode_proto_rawDescOnce sync.Once
	file_valnode_proto_rawDescData = file_valnode_proto_rawDesc
)

func file_valnode_proto_rawDescGZIP() []byte {
	file_valnode_proto_rawDescOnce.Do(func() {
		file_valnode_proto_rawDescData = protoimpl.X.CompressGZIP(file_valnode_proto_rawDescData)
	})
	return file_valnode_proto_rawDescData
}

var file_valnode_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_valnode_proto_goTypes = []interface{}{
	(*ValNode)(nil),             // 0: types.ValNode
	(*ValNodes)(nil),            // 1: types.ValNodes
	(*ValNodeAction)(nil),       // 2: types.ValNodeAction
	(*ReqValNodes)(nil),         // 3: types.ReqValNodes
	(*ReqBlockInfo)(nil),        // 4: types.ReqBlockInfo
	(*ValNodeInfo)(nil),         // 5: types.ValNodeInfo
	(*ValNodeInfoSet)(nil),      // 6: types.ValNodeInfoSet
	(*PerfStat)(nil),            // 7: types.PerfStat
	(*ReqPerfStat)(nil),         // 8: types.ReqPerfStat
	(*TendermintBlockInfo)(nil), // 9: types.TendermintBlockInfo
	(*types.ReqNil)(nil),        // 10: types.ReqNil
	(*IsHealthy)(nil),           // 11: types.IsHealthy
}
var file_valnode_proto_depIdxs = []int32{
	0,  // 0: types.ValNodes.nodes:type_name -> types.ValNode
	0,  // 1: types.ValNodeAction.node:type_name -> types.ValNode
	9,  // 2: types.ValNodeAction.blockInfo:type_name -> types.TendermintBlockInfo
	5,  // 3: types.ValNodeInfoSet.nodes:type_name -> types.ValNodeInfo
	10, // 4: types.valnode.IsSync:input_type -> types.ReqNil
	10, // 5: types.valnode.GetNodeInfo:input_type -> types.ReqNil
	11, // 6: types.valnode.IsSync:output_type -> types.IsHealthy
	6,  // 7: types.valnode.GetNodeInfo:output_type -> types.ValNodeInfoSet
	6,  // [6:8] is the sub-list for method output_type
	4,  // [4:6] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_valnode_proto_init() }
func file_valnode_proto_init() {
	if File_valnode_proto != nil {
		return
	}
	file_tendermint_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_valnode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValNodeAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqValNodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqBlockInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValNodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValNodeInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerfStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_valnode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPerfStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_valnode_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ValNodeAction_Node)(nil),
		(*ValNodeAction_BlockInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_valnode_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_valnode_proto_goTypes,
		DependencyIndexes: file_valnode_proto_depIdxs,
		MessageInfos:      file_valnode_proto_msgTypes,
	}.Build()
	File_valnode_proto = out.File
	file_valnode_proto_rawDesc = nil
	file_valnode_proto_goTypes = nil
	file_valnode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ValnodeClient is the client API for Valnode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValnodeClient interface {
	IsSync(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*IsHealthy, error)
	GetNodeInfo(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*ValNodeInfoSet, error)
}

type valnodeClient struct {
	cc grpc.ClientConnInterface
}

func NewValnodeClient(cc grpc.ClientConnInterface) ValnodeClient {
	return &valnodeClient{cc}
}

func (c *valnodeClient) IsSync(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*IsHealthy, error) {
	out := new(IsHealthy)
	err := c.cc.Invoke(ctx, "/types.valnode/IsSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *valnodeClient) GetNodeInfo(ctx context.Context, in *types.ReqNil, opts ...grpc.CallOption) (*ValNodeInfoSet, error) {
	out := new(ValNodeInfoSet)
	err := c.cc.Invoke(ctx, "/types.valnode/GetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValnodeServer is the server API for Valnode service.
type ValnodeServer interface {
	IsSync(context.Context, *types.ReqNil) (*IsHealthy, error)
	GetNodeInfo(context.Context, *types.ReqNil) (*ValNodeInfoSet, error)
}

// UnimplementedValnodeServer can be embedded to have forward compatible implementations.
type UnimplementedValnodeServer struct {
}

func (*UnimplementedValnodeServer) IsSync(context.Context, *types.ReqNil) (*IsHealthy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSync not implemented")
}
func (*UnimplementedValnodeServer) GetNodeInfo(context.Context, *types.ReqNil) (*ValNodeInfoSet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeInfo not implemented")
}

func RegisterValnodeServer(s *grpc.Server, srv ValnodeServer) {
	s.RegisterService(&_Valnode_serviceDesc, srv)
}

func _Valnode_IsSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqNil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValnodeServer).IsSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.valnode/IsSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValnodeServer).IsSync(ctx, req.(*types.ReqNil))
	}
	return interceptor(ctx, in, info, handler)
}

func _Valnode_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(types.ReqNil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValnodeServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.valnode/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValnodeServer).GetNodeInfo(ctx, req.(*types.ReqNil))
	}
	return interceptor(ctx, in, info, handler)
}

var _Valnode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.valnode",
	HandlerType: (*ValnodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsSync",
			Handler:    _Valnode_IsSync_Handler,
		},
		{
			MethodName: "GetNodeInfo",
			Handler:    _Valnode_GetNodeInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "valnode.proto",
}
