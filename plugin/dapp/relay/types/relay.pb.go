// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relay.proto

package types

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RelayOrderStatus int32

const (
	RelayOrderStatus_init       RelayOrderStatus = 0
	RelayOrderStatus_pending    RelayOrderStatus = 1
	RelayOrderStatus_locking    RelayOrderStatus = 2
	RelayOrderStatus_confirming RelayOrderStatus = 3
	RelayOrderStatus_finished   RelayOrderStatus = 4
	RelayOrderStatus_canceled   RelayOrderStatus = 5
	RelayOrderStatus_timeout    RelayOrderStatus = 6
)

var RelayOrderStatus_name = map[int32]string{
	0: "init",
	1: "pending",
	2: "locking",
	3: "confirming",
	4: "finished",
	5: "canceled",
	6: "timeout",
}

var RelayOrderStatus_value = map[string]int32{
	"init":       0,
	"pending":    1,
	"locking":    2,
	"confirming": 3,
	"finished":   4,
	"canceled":   5,
	"timeout":    6,
}

func (x RelayOrderStatus) String() string {
	return proto.EnumName(RelayOrderStatus_name, int32(x))
}

func (RelayOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0}
}

type RelayAction struct {
	// Types that are valid to be assigned to Value:
	//	*RelayAction_Create
	//	*RelayAction_Accept
	//	*RelayAction_Revoke
	//	*RelayAction_ConfirmTx
	//	*RelayAction_Verify
	//	*RelayAction_VerifyCli
	//	*RelayAction_BtcHeaders
	Value                isRelayAction_Value `protobuf_oneof:"value"`
	Ty                   int32               `protobuf:"varint,10,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RelayAction) Reset()         { *m = RelayAction{} }
func (m *RelayAction) String() string { return proto.CompactTextString(m) }
func (*RelayAction) ProtoMessage()    {}
func (*RelayAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0}
}

func (m *RelayAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayAction.Unmarshal(m, b)
}
func (m *RelayAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayAction.Marshal(b, m, deterministic)
}
func (m *RelayAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayAction.Merge(m, src)
}
func (m *RelayAction) XXX_Size() int {
	return xxx_messageInfo_RelayAction.Size(m)
}
func (m *RelayAction) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayAction.DiscardUnknown(m)
}

var xxx_messageInfo_RelayAction proto.InternalMessageInfo

type isRelayAction_Value interface {
	isRelayAction_Value()
}

type RelayAction_Create struct {
	Create *RelayCreate `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type RelayAction_Accept struct {
	Accept *RelayAccept `protobuf:"bytes,2,opt,name=accept,proto3,oneof"`
}

type RelayAction_Revoke struct {
	Revoke *RelayRevoke `protobuf:"bytes,3,opt,name=revoke,proto3,oneof"`
}

type RelayAction_ConfirmTx struct {
	ConfirmTx *RelayConfirmTx `protobuf:"bytes,4,opt,name=confirmTx,proto3,oneof"`
}

type RelayAction_Verify struct {
	Verify *RelayVerify `protobuf:"bytes,5,opt,name=verify,proto3,oneof"`
}

type RelayAction_VerifyCli struct {
	VerifyCli *RelayVerifyCli `protobuf:"bytes,6,opt,name=verifyCli,proto3,oneof"`
}

type RelayAction_BtcHeaders struct {
	BtcHeaders *BtcHeaders `protobuf:"bytes,7,opt,name=btcHeaders,proto3,oneof"`
}

func (*RelayAction_Create) isRelayAction_Value() {}

func (*RelayAction_Accept) isRelayAction_Value() {}

func (*RelayAction_Revoke) isRelayAction_Value() {}

func (*RelayAction_ConfirmTx) isRelayAction_Value() {}

func (*RelayAction_Verify) isRelayAction_Value() {}

func (*RelayAction_VerifyCli) isRelayAction_Value() {}

func (*RelayAction_BtcHeaders) isRelayAction_Value() {}

func (m *RelayAction) GetValue() isRelayAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RelayAction) GetCreate() *RelayCreate {
	if x, ok := m.GetValue().(*RelayAction_Create); ok {
		return x.Create
	}
	return nil
}

func (m *RelayAction) GetAccept() *RelayAccept {
	if x, ok := m.GetValue().(*RelayAction_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *RelayAction) GetRevoke() *RelayRevoke {
	if x, ok := m.GetValue().(*RelayAction_Revoke); ok {
		return x.Revoke
	}
	return nil
}

func (m *RelayAction) GetConfirmTx() *RelayConfirmTx {
	if x, ok := m.GetValue().(*RelayAction_ConfirmTx); ok {
		return x.ConfirmTx
	}
	return nil
}

func (m *RelayAction) GetVerify() *RelayVerify {
	if x, ok := m.GetValue().(*RelayAction_Verify); ok {
		return x.Verify
	}
	return nil
}

func (m *RelayAction) GetVerifyCli() *RelayVerifyCli {
	if x, ok := m.GetValue().(*RelayAction_VerifyCli); ok {
		return x.VerifyCli
	}
	return nil
}

func (m *RelayAction) GetBtcHeaders() *BtcHeaders {
	if x, ok := m.GetValue().(*RelayAction_BtcHeaders); ok {
		return x.BtcHeaders
	}
	return nil
}

func (m *RelayAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RelayAction) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RelayAction_Create)(nil),
		(*RelayAction_Accept)(nil),
		(*RelayAction_Revoke)(nil),
		(*RelayAction_ConfirmTx)(nil),
		(*RelayAction_Verify)(nil),
		(*RelayAction_VerifyCli)(nil),
		(*RelayAction_BtcHeaders)(nil),
	}
}

type RelayOrder struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               RelayOrderStatus `protobuf:"varint,2,opt,name=status,proto3,enum=types.RelayOrderStatus" json:"status,omitempty"`
	PreStatus            RelayOrderStatus `protobuf:"varint,3,opt,name=preStatus,proto3,enum=types.RelayOrderStatus" json:"preStatus,omitempty"`
	LocalCoinAmount      uint64           `protobuf:"varint,4,opt,name=localCoinAmount,proto3" json:"localCoinAmount,omitempty"`
	CreaterAddr          string           `protobuf:"bytes,5,opt,name=createrAddr,proto3" json:"createrAddr,omitempty"`
	Operation            uint32           `protobuf:"varint,6,opt,name=operation,proto3" json:"operation,omitempty"`
	XCoin                string           `protobuf:"bytes,7,opt,name=xCoin,proto3" json:"xCoin,omitempty"`
	XAmount              uint64           `protobuf:"varint,8,opt,name=xAmount,proto3" json:"xAmount,omitempty"`
	XAddr                string           `protobuf:"bytes,9,opt,name=xAddr,proto3" json:"xAddr,omitempty"`
	XTxHash              string           `protobuf:"bytes,10,opt,name=xTxHash,proto3" json:"xTxHash,omitempty"`
	CreateTime           int64            `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	AcceptAddr           string           `protobuf:"bytes,12,opt,name=acceptAddr,proto3" json:"acceptAddr,omitempty"`
	AcceptTime           int64            `protobuf:"varint,13,opt,name=acceptTime,proto3" json:"acceptTime,omitempty"`
	ConfirmTime          int64            `protobuf:"varint,14,opt,name=confirmTime,proto3" json:"confirmTime,omitempty"`
	FinishTime           int64            `protobuf:"varint,15,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	FinishTxHash         string           `protobuf:"bytes,16,opt,name=finishTxHash,proto3" json:"finishTxHash,omitempty"`
	Height               int64            `protobuf:"varint,17,opt,name=height,proto3" json:"height,omitempty"`
	XHeight              uint64           `protobuf:"varint,18,opt,name=XHeight,proto3" json:"XHeight,omitempty"`
	XBlockWaits          uint32           `protobuf:"varint,19,opt,name=xBlockWaits,proto3" json:"xBlockWaits,omitempty"`
	LocalCoinSymbol      string           `protobuf:"bytes,20,opt,name=localCoinSymbol,proto3" json:"localCoinSymbol,omitempty"`
	LocalCoinExec        string           `protobuf:"bytes,21,opt,name=localCoinExec,proto3" json:"localCoinExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RelayOrder) Reset()         { *m = RelayOrder{} }
func (m *RelayOrder) String() string { return proto.CompactTextString(m) }
func (*RelayOrder) ProtoMessage()    {}
func (*RelayOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{1}
}

func (m *RelayOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOrder.Unmarshal(m, b)
}
func (m *RelayOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOrder.Marshal(b, m, deterministic)
}
func (m *RelayOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOrder.Merge(m, src)
}
func (m *RelayOrder) XXX_Size() int {
	return xxx_messageInfo_RelayOrder.Size(m)
}
func (m *RelayOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOrder.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOrder proto.InternalMessageInfo

func (m *RelayOrder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RelayOrder) GetStatus() RelayOrderStatus {
	if m != nil {
		return m.Status
	}
	return RelayOrderStatus_init
}

func (m *RelayOrder) GetPreStatus() RelayOrderStatus {
	if m != nil {
		return m.PreStatus
	}
	return RelayOrderStatus_init
}

func (m *RelayOrder) GetLocalCoinAmount() uint64 {
	if m != nil {
		return m.LocalCoinAmount
	}
	return 0
}

func (m *RelayOrder) GetCreaterAddr() string {
	if m != nil {
		return m.CreaterAddr
	}
	return ""
}

func (m *RelayOrder) GetOperation() uint32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *RelayOrder) GetXCoin() string {
	if m != nil {
		return m.XCoin
	}
	return ""
}

func (m *RelayOrder) GetXAmount() uint64 {
	if m != nil {
		return m.XAmount
	}
	return 0
}

func (m *RelayOrder) GetXAddr() string {
	if m != nil {
		return m.XAddr
	}
	return ""
}

func (m *RelayOrder) GetXTxHash() string {
	if m != nil {
		return m.XTxHash
	}
	return ""
}

func (m *RelayOrder) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *RelayOrder) GetAcceptAddr() string {
	if m != nil {
		return m.AcceptAddr
	}
	return ""
}

func (m *RelayOrder) GetAcceptTime() int64 {
	if m != nil {
		return m.AcceptTime
	}
	return 0
}

func (m *RelayOrder) GetConfirmTime() int64 {
	if m != nil {
		return m.ConfirmTime
	}
	return 0
}

func (m *RelayOrder) GetFinishTime() int64 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *RelayOrder) GetFinishTxHash() string {
	if m != nil {
		return m.FinishTxHash
	}
	return ""
}

func (m *RelayOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RelayOrder) GetXHeight() uint64 {
	if m != nil {
		return m.XHeight
	}
	return 0
}

func (m *RelayOrder) GetXBlockWaits() uint32 {
	if m != nil {
		return m.XBlockWaits
	}
	return 0
}

func (m *RelayOrder) GetLocalCoinSymbol() string {
	if m != nil {
		return m.LocalCoinSymbol
	}
	return ""
}

func (m *RelayOrder) GetLocalCoinExec() string {
	if m != nil {
		return m.LocalCoinExec
	}
	return ""
}

type RelayCreate struct {
	Operation            uint32   `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	XCoin                string   `protobuf:"bytes,2,opt,name=xCoin,proto3" json:"xCoin,omitempty"`
	XAmount              uint64   `protobuf:"varint,3,opt,name=xAmount,proto3" json:"xAmount,omitempty"`
	XAddr                string   `protobuf:"bytes,4,opt,name=xAddr,proto3" json:"xAddr,omitempty"`
	LocalCoinAmount      uint64   `protobuf:"varint,5,opt,name=localCoinAmount,proto3" json:"localCoinAmount,omitempty"`
	XBlockWaits          uint32   `protobuf:"varint,6,opt,name=xBlockWaits,proto3" json:"xBlockWaits,omitempty"`
	LocalCoinSymbol      string   `protobuf:"bytes,7,opt,name=localCoinSymbol,proto3" json:"localCoinSymbol,omitempty"`
	LocalCoinExec        string   `protobuf:"bytes,8,opt,name=localCoinExec,proto3" json:"localCoinExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayCreate) Reset()         { *m = RelayCreate{} }
func (m *RelayCreate) String() string { return proto.CompactTextString(m) }
func (*RelayCreate) ProtoMessage()    {}
func (*RelayCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{2}
}

func (m *RelayCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayCreate.Unmarshal(m, b)
}
func (m *RelayCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayCreate.Marshal(b, m, deterministic)
}
func (m *RelayCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayCreate.Merge(m, src)
}
func (m *RelayCreate) XXX_Size() int {
	return xxx_messageInfo_RelayCreate.Size(m)
}
func (m *RelayCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayCreate.DiscardUnknown(m)
}

var xxx_messageInfo_RelayCreate proto.InternalMessageInfo

func (m *RelayCreate) GetOperation() uint32 {
	if m != nil {
		return m.Operation
	}
	return 0
}

func (m *RelayCreate) GetXCoin() string {
	if m != nil {
		return m.XCoin
	}
	return ""
}

func (m *RelayCreate) GetXAmount() uint64 {
	if m != nil {
		return m.XAmount
	}
	return 0
}

func (m *RelayCreate) GetXAddr() string {
	if m != nil {
		return m.XAddr
	}
	return ""
}

func (m *RelayCreate) GetLocalCoinAmount() uint64 {
	if m != nil {
		return m.LocalCoinAmount
	}
	return 0
}

func (m *RelayCreate) GetXBlockWaits() uint32 {
	if m != nil {
		return m.XBlockWaits
	}
	return 0
}

func (m *RelayCreate) GetLocalCoinSymbol() string {
	if m != nil {
		return m.LocalCoinSymbol
	}
	return ""
}

func (m *RelayCreate) GetLocalCoinExec() string {
	if m != nil {
		return m.LocalCoinExec
	}
	return ""
}

type RelayAccept struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	XAddr                string   `protobuf:"bytes,2,opt,name=xAddr,proto3" json:"xAddr,omitempty"`
	XBlockWaits          uint32   `protobuf:"varint,3,opt,name=xBlockWaits,proto3" json:"xBlockWaits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayAccept) Reset()         { *m = RelayAccept{} }
func (m *RelayAccept) String() string { return proto.CompactTextString(m) }
func (*RelayAccept) ProtoMessage()    {}
func (*RelayAccept) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{3}
}

func (m *RelayAccept) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayAccept.Unmarshal(m, b)
}
func (m *RelayAccept) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayAccept.Marshal(b, m, deterministic)
}
func (m *RelayAccept) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayAccept.Merge(m, src)
}
func (m *RelayAccept) XXX_Size() int {
	return xxx_messageInfo_RelayAccept.Size(m)
}
func (m *RelayAccept) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayAccept.DiscardUnknown(m)
}

var xxx_messageInfo_RelayAccept proto.InternalMessageInfo

func (m *RelayAccept) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RelayAccept) GetXAddr() string {
	if m != nil {
		return m.XAddr
	}
	return ""
}

func (m *RelayAccept) GetXBlockWaits() uint32 {
	if m != nil {
		return m.XBlockWaits
	}
	return 0
}

type RelayRevoke struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Target               uint32   `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Action               uint32   `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayRevoke) Reset()         { *m = RelayRevoke{} }
func (m *RelayRevoke) String() string { return proto.CompactTextString(m) }
func (*RelayRevoke) ProtoMessage()    {}
func (*RelayRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{4}
}

func (m *RelayRevoke) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayRevoke.Unmarshal(m, b)
}
func (m *RelayRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayRevoke.Marshal(b, m, deterministic)
}
func (m *RelayRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayRevoke.Merge(m, src)
}
func (m *RelayRevoke) XXX_Size() int {
	return xxx_messageInfo_RelayRevoke.Size(m)
}
func (m *RelayRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_RelayRevoke proto.InternalMessageInfo

func (m *RelayRevoke) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RelayRevoke) GetTarget() uint32 {
	if m != nil {
		return m.Target
	}
	return 0
}

func (m *RelayRevoke) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

//客户只用交易hash提交， 验证需要的其他信息由relayd提供
type RelayConfirmTx struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	TxHash               string   `protobuf:"bytes,2,opt,name=txHash,proto3" json:"txHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayConfirmTx) Reset()         { *m = RelayConfirmTx{} }
func (m *RelayConfirmTx) String() string { return proto.CompactTextString(m) }
func (*RelayConfirmTx) ProtoMessage()    {}
func (*RelayConfirmTx) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{5}
}

func (m *RelayConfirmTx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayConfirmTx.Unmarshal(m, b)
}
func (m *RelayConfirmTx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayConfirmTx.Marshal(b, m, deterministic)
}
func (m *RelayConfirmTx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayConfirmTx.Merge(m, src)
}
func (m *RelayConfirmTx) XXX_Size() int {
	return xxx_messageInfo_RelayConfirmTx.Size(m)
}
func (m *RelayConfirmTx) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayConfirmTx.DiscardUnknown(m)
}

var xxx_messageInfo_RelayConfirmTx proto.InternalMessageInfo

func (m *RelayConfirmTx) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RelayConfirmTx) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

// relayd提供验证信息
type RelayVerify struct {
	OrderId              string          `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Tx                   *BtcTransaction `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	Spv                  *BtcSpv         `protobuf:"bytes,3,opt,name=spv,proto3" json:"spv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RelayVerify) Reset()         { *m = RelayVerify{} }
func (m *RelayVerify) String() string { return proto.CompactTextString(m) }
func (*RelayVerify) ProtoMessage()    {}
func (*RelayVerify) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{6}
}

func (m *RelayVerify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayVerify.Unmarshal(m, b)
}
func (m *RelayVerify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayVerify.Marshal(b, m, deterministic)
}
func (m *RelayVerify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayVerify.Merge(m, src)
}
func (m *RelayVerify) XXX_Size() int {
	return xxx_messageInfo_RelayVerify.Size(m)
}
func (m *RelayVerify) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayVerify.DiscardUnknown(m)
}

var xxx_messageInfo_RelayVerify proto.InternalMessageInfo

func (m *RelayVerify) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RelayVerify) GetTx() *BtcTransaction {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *RelayVerify) GetSpv() *BtcSpv {
	if m != nil {
		return m.Spv
	}
	return nil
}

type RelayVerifyCli struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	RawTx                string   `protobuf:"bytes,2,opt,name=rawTx,proto3" json:"rawTx,omitempty"`
	TxIndex              uint32   `protobuf:"varint,3,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	MerkBranch           string   `protobuf:"bytes,4,opt,name=merkBranch,proto3" json:"merkBranch,omitempty"`
	BlockHash            string   `protobuf:"bytes,5,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelayVerifyCli) Reset()         { *m = RelayVerifyCli{} }
func (m *RelayVerifyCli) String() string { return proto.CompactTextString(m) }
func (*RelayVerifyCli) ProtoMessage()    {}
func (*RelayVerifyCli) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{7}
}

func (m *RelayVerifyCli) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayVerifyCli.Unmarshal(m, b)
}
func (m *RelayVerifyCli) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayVerifyCli.Marshal(b, m, deterministic)
}
func (m *RelayVerifyCli) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayVerifyCli.Merge(m, src)
}
func (m *RelayVerifyCli) XXX_Size() int {
	return xxx_messageInfo_RelayVerifyCli.Size(m)
}
func (m *RelayVerifyCli) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayVerifyCli.DiscardUnknown(m)
}

var xxx_messageInfo_RelayVerifyCli proto.InternalMessageInfo

func (m *RelayVerifyCli) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RelayVerifyCli) GetRawTx() string {
	if m != nil {
		return m.RawTx
	}
	return ""
}

func (m *RelayVerifyCli) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *RelayVerifyCli) GetMerkBranch() string {
	if m != nil {
		return m.MerkBranch
	}
	return ""
}

func (m *RelayVerifyCli) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

type BtcHeader struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Confirmations        uint64   `protobuf:"varint,2,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Version              uint32   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	MerkleRoot           string   `protobuf:"bytes,5,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	Time                 int64    `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Nonce                uint64   `protobuf:"varint,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Bits                 int64    `protobuf:"varint,8,opt,name=bits,proto3" json:"bits,omitempty"`
	Difficulty           int64    `protobuf:"varint,9,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	PreviousHash         string   `protobuf:"bytes,10,opt,name=previousHash,proto3" json:"previousHash,omitempty"`
	NextHash             string   `protobuf:"bytes,11,opt,name=nextHash,proto3" json:"nextHash,omitempty"`
	IsReset              bool     `protobuf:"varint,12,opt,name=isReset,proto3" json:"isReset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BtcHeader) Reset()         { *m = BtcHeader{} }
func (m *BtcHeader) String() string { return proto.CompactTextString(m) }
func (*BtcHeader) ProtoMessage()    {}
func (*BtcHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{8}
}

func (m *BtcHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BtcHeader.Unmarshal(m, b)
}
func (m *BtcHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BtcHeader.Marshal(b, m, deterministic)
}
func (m *BtcHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BtcHeader.Merge(m, src)
}
func (m *BtcHeader) XXX_Size() int {
	return xxx_messageInfo_BtcHeader.Size(m)
}
func (m *BtcHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_BtcHeader.DiscardUnknown(m)
}

var xxx_messageInfo_BtcHeader proto.InternalMessageInfo

func (m *BtcHeader) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BtcHeader) GetConfirmations() uint64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

func (m *BtcHeader) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BtcHeader) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BtcHeader) GetMerkleRoot() string {
	if m != nil {
		return m.MerkleRoot
	}
	return ""
}

func (m *BtcHeader) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BtcHeader) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *BtcHeader) GetBits() int64 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *BtcHeader) GetDifficulty() int64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

func (m *BtcHeader) GetPreviousHash() string {
	if m != nil {
		return m.PreviousHash
	}
	return ""
}

func (m *BtcHeader) GetNextHash() string {
	if m != nil {
		return m.NextHash
	}
	return ""
}

func (m *BtcHeader) GetIsReset() bool {
	if m != nil {
		return m.IsReset
	}
	return false
}

type BtcHeaders struct {
	BtcHeader            []*BtcHeader `protobuf:"bytes,1,rep,name=btcHeader,proto3" json:"btcHeader,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BtcHeaders) Reset()         { *m = BtcHeaders{} }
func (m *BtcHeaders) String() string { return proto.CompactTextString(m) }
func (*BtcHeaders) ProtoMessage()    {}
func (*BtcHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{9}
}

func (m *BtcHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BtcHeaders.Unmarshal(m, b)
}
func (m *BtcHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BtcHeaders.Marshal(b, m, deterministic)
}
func (m *BtcHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BtcHeaders.Merge(m, src)
}
func (m *BtcHeaders) XXX_Size() int {
	return xxx_messageInfo_BtcHeaders.Size(m)
}
func (m *BtcHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_BtcHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_BtcHeaders proto.InternalMessageInfo

func (m *BtcHeaders) GetBtcHeader() []*BtcHeader {
	if m != nil {
		return m.BtcHeader
	}
	return nil
}

type BtcTransaction struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	BlockHeight          uint64   `protobuf:"varint,2,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
	Vin                  []*Vin   `protobuf:"bytes,3,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout                 []*Vout  `protobuf:"bytes,4,rep,name=vout,proto3" json:"vout,omitempty"`
	Time                 int64    `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`
	Confirmations        uint64   `protobuf:"varint,6,opt,name=confirmations,proto3" json:"confirmations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BtcTransaction) Reset()         { *m = BtcTransaction{} }
func (m *BtcTransaction) String() string { return proto.CompactTextString(m) }
func (*BtcTransaction) ProtoMessage()    {}
func (*BtcTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{10}
}

func (m *BtcTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BtcTransaction.Unmarshal(m, b)
}
func (m *BtcTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BtcTransaction.Marshal(b, m, deterministic)
}
func (m *BtcTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BtcTransaction.Merge(m, src)
}
func (m *BtcTransaction) XXX_Size() int {
	return xxx_messageInfo_BtcTransaction.Size(m)
}
func (m *BtcTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BtcTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BtcTransaction proto.InternalMessageInfo

func (m *BtcTransaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BtcTransaction) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BtcTransaction) GetVin() []*Vin {
	if m != nil {
		return m.Vin
	}
	return nil
}

func (m *BtcTransaction) GetVout() []*Vout {
	if m != nil {
		return m.Vout
	}
	return nil
}

func (m *BtcTransaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BtcTransaction) GetConfirmations() uint64 {
	if m != nil {
		return m.Confirmations
	}
	return 0
}

type Vin struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value                uint64   `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vin) Reset()         { *m = Vin{} }
func (m *Vin) String() string { return proto.CompactTextString(m) }
func (*Vin) ProtoMessage()    {}
func (*Vin) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{11}
}

func (m *Vin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vin.Unmarshal(m, b)
}
func (m *Vin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vin.Marshal(b, m, deterministic)
}
func (m *Vin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vin.Merge(m, src)
}
func (m *Vin) XXX_Size() int {
	return xxx_messageInfo_Vin.Size(m)
}
func (m *Vin) XXX_DiscardUnknown() {
	xxx_messageInfo_Vin.DiscardUnknown(m)
}

var xxx_messageInfo_Vin proto.InternalMessageInfo

func (m *Vin) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Vin) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Vout struct {
	Coinbase             bool     `protobuf:"varint,1,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Value                uint64   `protobuf:"varint,3,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vout) Reset()         { *m = Vout{} }
func (m *Vout) String() string { return proto.CompactTextString(m) }
func (*Vout) ProtoMessage()    {}
func (*Vout) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{12}
}

func (m *Vout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vout.Unmarshal(m, b)
}
func (m *Vout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vout.Marshal(b, m, deterministic)
}
func (m *Vout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vout.Merge(m, src)
}
func (m *Vout) XXX_Size() int {
	return xxx_messageInfo_Vout.Size(m)
}
func (m *Vout) XXX_DiscardUnknown() {
	xxx_messageInfo_Vout.DiscardUnknown(m)
}

var xxx_messageInfo_Vout proto.InternalMessageInfo

func (m *Vout) GetCoinbase() bool {
	if m != nil {
		return m.Coinbase
	}
	return false
}

func (m *Vout) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Vout) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type BtcSpv struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Height               uint64   `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	BlockHash            string   `protobuf:"bytes,4,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	TxIndex              uint32   `protobuf:"varint,5,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	BranchProof          [][]byte `protobuf:"bytes,6,rep,name=branchProof,proto3" json:"branchProof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BtcSpv) Reset()         { *m = BtcSpv{} }
func (m *BtcSpv) String() string { return proto.CompactTextString(m) }
func (*BtcSpv) ProtoMessage()    {}
func (*BtcSpv) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{13}
}

func (m *BtcSpv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BtcSpv.Unmarshal(m, b)
}
func (m *BtcSpv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BtcSpv.Marshal(b, m, deterministic)
}
func (m *BtcSpv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BtcSpv.Merge(m, src)
}
func (m *BtcSpv) XXX_Size() int {
	return xxx_messageInfo_BtcSpv.Size(m)
}
func (m *BtcSpv) XXX_DiscardUnknown() {
	xxx_messageInfo_BtcSpv.DiscardUnknown(m)
}

var xxx_messageInfo_BtcSpv proto.InternalMessageInfo

func (m *BtcSpv) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *BtcSpv) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *BtcSpv) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BtcSpv) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *BtcSpv) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *BtcSpv) GetBranchProof() [][]byte {
	if m != nil {
		return m.BranchProof
	}
	return nil
}

type RelayLastRcvBtcHeader struct {
	Header               *BtcHeader `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	BaseHeight           uint64     `protobuf:"varint,2,opt,name=baseHeight,proto3" json:"baseHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RelayLastRcvBtcHeader) Reset()         { *m = RelayLastRcvBtcHeader{} }
func (m *RelayLastRcvBtcHeader) String() string { return proto.CompactTextString(m) }
func (*RelayLastRcvBtcHeader) ProtoMessage()    {}
func (*RelayLastRcvBtcHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{14}
}

func (m *RelayLastRcvBtcHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayLastRcvBtcHeader.Unmarshal(m, b)
}
func (m *RelayLastRcvBtcHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayLastRcvBtcHeader.Marshal(b, m, deterministic)
}
func (m *RelayLastRcvBtcHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayLastRcvBtcHeader.Merge(m, src)
}
func (m *RelayLastRcvBtcHeader) XXX_Size() int {
	return xxx_messageInfo_RelayLastRcvBtcHeader.Size(m)
}
func (m *RelayLastRcvBtcHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayLastRcvBtcHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RelayLastRcvBtcHeader proto.InternalMessageInfo

func (m *RelayLastRcvBtcHeader) GetHeader() *BtcHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *RelayLastRcvBtcHeader) GetBaseHeight() uint64 {
	if m != nil {
		return m.BaseHeight
	}
	return 0
}

type ReceiptRelayRcvBTCHeaders struct {
	Headers              []*BtcHeader `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	LastHeight           uint64       `protobuf:"varint,2,opt,name=lastHeight,proto3" json:"lastHeight,omitempty"`
	NewHeight            uint64       `protobuf:"varint,3,opt,name=newHeight,proto3" json:"newHeight,omitempty"`
	LastBaseHeight       uint64       `protobuf:"varint,4,opt,name=lastBaseHeight,proto3" json:"lastBaseHeight,omitempty"`
	NewBaseHeight        uint64       `protobuf:"varint,5,opt,name=newBaseHeight,proto3" json:"newBaseHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReceiptRelayRcvBTCHeaders) Reset()         { *m = ReceiptRelayRcvBTCHeaders{} }
func (m *ReceiptRelayRcvBTCHeaders) String() string { return proto.CompactTextString(m) }
func (*ReceiptRelayRcvBTCHeaders) ProtoMessage()    {}
func (*ReceiptRelayRcvBTCHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{15}
}

func (m *ReceiptRelayRcvBTCHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptRelayRcvBTCHeaders.Unmarshal(m, b)
}
func (m *ReceiptRelayRcvBTCHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptRelayRcvBTCHeaders.Marshal(b, m, deterministic)
}
func (m *ReceiptRelayRcvBTCHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptRelayRcvBTCHeaders.Merge(m, src)
}
func (m *ReceiptRelayRcvBTCHeaders) XXX_Size() int {
	return xxx_messageInfo_ReceiptRelayRcvBTCHeaders.Size(m)
}
func (m *ReceiptRelayRcvBTCHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptRelayRcvBTCHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptRelayRcvBTCHeaders proto.InternalMessageInfo

func (m *ReceiptRelayRcvBTCHeaders) GetHeaders() []*BtcHeader {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *ReceiptRelayRcvBTCHeaders) GetLastHeight() uint64 {
	if m != nil {
		return m.LastHeight
	}
	return 0
}

func (m *ReceiptRelayRcvBTCHeaders) GetNewHeight() uint64 {
	if m != nil {
		return m.NewHeight
	}
	return 0
}

func (m *ReceiptRelayRcvBTCHeaders) GetLastBaseHeight() uint64 {
	if m != nil {
		return m.LastBaseHeight
	}
	return 0
}

func (m *ReceiptRelayRcvBTCHeaders) GetNewBaseHeight() uint64 {
	if m != nil {
		return m.NewBaseHeight
	}
	return 0
}

type ReceiptRelayLog struct {
	OrderId              string   `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	CurStatus            string   `protobuf:"bytes,2,opt,name=curStatus,proto3" json:"curStatus,omitempty"`
	PreStatus            string   `protobuf:"bytes,3,opt,name=preStatus,proto3" json:"preStatus,omitempty"`
	LocalCoinAmount      string   `protobuf:"bytes,4,opt,name=localCoinAmount,proto3" json:"localCoinAmount,omitempty"`
	CreaterAddr          string   `protobuf:"bytes,5,opt,name=createrAddr,proto3" json:"createrAddr,omitempty"`
	CoinOperation        uint32   `protobuf:"varint,6,opt,name=coinOperation,proto3" json:"coinOperation,omitempty"`
	XCoin                string   `protobuf:"bytes,7,opt,name=xCoin,proto3" json:"xCoin,omitempty"`
	XAmount              string   `protobuf:"bytes,8,opt,name=xAmount,proto3" json:"xAmount,omitempty"`
	XAddr                string   `protobuf:"bytes,9,opt,name=xAddr,proto3" json:"xAddr,omitempty"`
	XTxHash              string   `protobuf:"bytes,10,opt,name=xTxHash,proto3" json:"xTxHash,omitempty"`
	CreateTime           int64    `protobuf:"varint,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	AcceptAddr           string   `protobuf:"bytes,12,opt,name=acceptAddr,proto3" json:"acceptAddr,omitempty"`
	AcceptTime           int64    `protobuf:"varint,13,opt,name=acceptTime,proto3" json:"acceptTime,omitempty"`
	ConfirmTime          int64    `protobuf:"varint,14,opt,name=confirmTime,proto3" json:"confirmTime,omitempty"`
	FinishTime           int64    `protobuf:"varint,15,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	FinishTxHash         string   `protobuf:"bytes,16,opt,name=finishTxHash,proto3" json:"finishTxHash,omitempty"`
	XHeight              uint64   `protobuf:"varint,17,opt,name=xHeight,proto3" json:"xHeight,omitempty"`
	XBlockWaits          uint32   `protobuf:"varint,18,opt,name=xBlockWaits,proto3" json:"xBlockWaits,omitempty"`
	LocalCoinSymbol      string   `protobuf:"bytes,19,opt,name=localCoinSymbol,proto3" json:"localCoinSymbol,omitempty"`
	LocalCoinExec        string   `protobuf:"bytes,20,opt,name=localCoinExec,proto3" json:"localCoinExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptRelayLog) Reset()         { *m = ReceiptRelayLog{} }
func (m *ReceiptRelayLog) String() string { return proto.CompactTextString(m) }
func (*ReceiptRelayLog) ProtoMessage()    {}
func (*ReceiptRelayLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{16}
}

func (m *ReceiptRelayLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptRelayLog.Unmarshal(m, b)
}
func (m *ReceiptRelayLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptRelayLog.Marshal(b, m, deterministic)
}
func (m *ReceiptRelayLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptRelayLog.Merge(m, src)
}
func (m *ReceiptRelayLog) XXX_Size() int {
	return xxx_messageInfo_ReceiptRelayLog.Size(m)
}
func (m *ReceiptRelayLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptRelayLog.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptRelayLog proto.InternalMessageInfo

func (m *ReceiptRelayLog) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ReceiptRelayLog) GetCurStatus() string {
	if m != nil {
		return m.CurStatus
	}
	return ""
}

func (m *ReceiptRelayLog) GetPreStatus() string {
	if m != nil {
		return m.PreStatus
	}
	return ""
}

func (m *ReceiptRelayLog) GetLocalCoinAmount() string {
	if m != nil {
		return m.LocalCoinAmount
	}
	return ""
}

func (m *ReceiptRelayLog) GetCreaterAddr() string {
	if m != nil {
		return m.CreaterAddr
	}
	return ""
}

func (m *ReceiptRelayLog) GetCoinOperation() uint32 {
	if m != nil {
		return m.CoinOperation
	}
	return 0
}

func (m *ReceiptRelayLog) GetXCoin() string {
	if m != nil {
		return m.XCoin
	}
	return ""
}

func (m *ReceiptRelayLog) GetXAmount() string {
	if m != nil {
		return m.XAmount
	}
	return ""
}

func (m *ReceiptRelayLog) GetXAddr() string {
	if m != nil {
		return m.XAddr
	}
	return ""
}

func (m *ReceiptRelayLog) GetXTxHash() string {
	if m != nil {
		return m.XTxHash
	}
	return ""
}

func (m *ReceiptRelayLog) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *ReceiptRelayLog) GetAcceptAddr() string {
	if m != nil {
		return m.AcceptAddr
	}
	return ""
}

func (m *ReceiptRelayLog) GetAcceptTime() int64 {
	if m != nil {
		return m.AcceptTime
	}
	return 0
}

func (m *ReceiptRelayLog) GetConfirmTime() int64 {
	if m != nil {
		return m.ConfirmTime
	}
	return 0
}

func (m *ReceiptRelayLog) GetFinishTime() int64 {
	if m != nil {
		return m.FinishTime
	}
	return 0
}

func (m *ReceiptRelayLog) GetFinishTxHash() string {
	if m != nil {
		return m.FinishTxHash
	}
	return ""
}

func (m *ReceiptRelayLog) GetXHeight() uint64 {
	if m != nil {
		return m.XHeight
	}
	return 0
}

func (m *ReceiptRelayLog) GetXBlockWaits() uint32 {
	if m != nil {
		return m.XBlockWaits
	}
	return 0
}

func (m *ReceiptRelayLog) GetLocalCoinSymbol() string {
	if m != nil {
		return m.LocalCoinSymbol
	}
	return ""
}

func (m *ReceiptRelayLog) GetLocalCoinExec() string {
	if m != nil {
		return m.LocalCoinExec
	}
	return ""
}

type ReqRelayAddrCoins struct {
	Addr                 string           `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status               RelayOrderStatus `protobuf:"varint,2,opt,name=status,proto3,enum=types.RelayOrderStatus" json:"status,omitempty"`
	Coins                []string         `protobuf:"bytes,3,rep,name=coins,proto3" json:"coins,omitempty"`
	PageNumber           int32            `protobuf:"varint,4,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	PageSize             int32            `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReqRelayAddrCoins) Reset()         { *m = ReqRelayAddrCoins{} }
func (m *ReqRelayAddrCoins) String() string { return proto.CompactTextString(m) }
func (*ReqRelayAddrCoins) ProtoMessage()    {}
func (*ReqRelayAddrCoins) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{17}
}

func (m *ReqRelayAddrCoins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRelayAddrCoins.Unmarshal(m, b)
}
func (m *ReqRelayAddrCoins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRelayAddrCoins.Marshal(b, m, deterministic)
}
func (m *ReqRelayAddrCoins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRelayAddrCoins.Merge(m, src)
}
func (m *ReqRelayAddrCoins) XXX_Size() int {
	return xxx_messageInfo_ReqRelayAddrCoins.Size(m)
}
func (m *ReqRelayAddrCoins) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRelayAddrCoins.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRelayAddrCoins proto.InternalMessageInfo

func (m *ReqRelayAddrCoins) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqRelayAddrCoins) GetStatus() RelayOrderStatus {
	if m != nil {
		return m.Status
	}
	return RelayOrderStatus_init
}

func (m *ReqRelayAddrCoins) GetCoins() []string {
	if m != nil {
		return m.Coins
	}
	return nil
}

func (m *ReqRelayAddrCoins) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ReqRelayAddrCoins) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

type ReplyRelayOrders struct {
	Relayorders          []*RelayOrder `protobuf:"bytes,1,rep,name=relayorders,proto3" json:"relayorders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReplyRelayOrders) Reset()         { *m = ReplyRelayOrders{} }
func (m *ReplyRelayOrders) String() string { return proto.CompactTextString(m) }
func (*ReplyRelayOrders) ProtoMessage()    {}
func (*ReplyRelayOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{18}
}

func (m *ReplyRelayOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyRelayOrders.Unmarshal(m, b)
}
func (m *ReplyRelayOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyRelayOrders.Marshal(b, m, deterministic)
}
func (m *ReplyRelayOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyRelayOrders.Merge(m, src)
}
func (m *ReplyRelayOrders) XXX_Size() int {
	return xxx_messageInfo_ReplyRelayOrders.Size(m)
}
func (m *ReplyRelayOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyRelayOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyRelayOrders proto.InternalMessageInfo

func (m *ReplyRelayOrders) GetRelayorders() []*RelayOrder {
	if m != nil {
		return m.Relayorders
	}
	return nil
}

type QueryRelayOrderParam struct {
	Status               RelayOrderStatus `protobuf:"varint,1,opt,name=status,proto3,enum=types.RelayOrderStatus" json:"status,omitempty"`
	OrderId              string           `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryRelayOrderParam) Reset()         { *m = QueryRelayOrderParam{} }
func (m *QueryRelayOrderParam) String() string { return proto.CompactTextString(m) }
func (*QueryRelayOrderParam) ProtoMessage()    {}
func (*QueryRelayOrderParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{19}
}

func (m *QueryRelayOrderParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRelayOrderParam.Unmarshal(m, b)
}
func (m *QueryRelayOrderParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRelayOrderParam.Marshal(b, m, deterministic)
}
func (m *QueryRelayOrderParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRelayOrderParam.Merge(m, src)
}
func (m *QueryRelayOrderParam) XXX_Size() int {
	return xxx_messageInfo_QueryRelayOrderParam.Size(m)
}
func (m *QueryRelayOrderParam) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRelayOrderParam.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRelayOrderParam proto.InternalMessageInfo

func (m *QueryRelayOrderParam) GetStatus() RelayOrderStatus {
	if m != nil {
		return m.Status
	}
	return RelayOrderStatus_init
}

func (m *QueryRelayOrderParam) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type QueryRelayOrderResult struct {
	Orders               []*RelayOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueryRelayOrderResult) Reset()         { *m = QueryRelayOrderResult{} }
func (m *QueryRelayOrderResult) String() string { return proto.CompactTextString(m) }
func (*QueryRelayOrderResult) ProtoMessage()    {}
func (*QueryRelayOrderResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{20}
}

func (m *QueryRelayOrderResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRelayOrderResult.Unmarshal(m, b)
}
func (m *QueryRelayOrderResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRelayOrderResult.Marshal(b, m, deterministic)
}
func (m *QueryRelayOrderResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRelayOrderResult.Merge(m, src)
}
func (m *QueryRelayOrderResult) XXX_Size() int {
	return xxx_messageInfo_QueryRelayOrderResult.Size(m)
}
func (m *QueryRelayOrderResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRelayOrderResult.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRelayOrderResult proto.InternalMessageInfo

func (m *QueryRelayOrderResult) GetOrders() []*RelayOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type ReqRelayBtcHeaderHeightList struct {
	ReqHeight            int64    `protobuf:"varint,1,opt,name=reqHeight,proto3" json:"reqHeight,omitempty"`
	Counts               int32    `protobuf:"varint,2,opt,name=counts,proto3" json:"counts,omitempty"`
	Direction            int32    `protobuf:"varint,3,opt,name=direction,proto3" json:"direction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRelayBtcHeaderHeightList) Reset()         { *m = ReqRelayBtcHeaderHeightList{} }
func (m *ReqRelayBtcHeaderHeightList) String() string { return proto.CompactTextString(m) }
func (*ReqRelayBtcHeaderHeightList) ProtoMessage()    {}
func (*ReqRelayBtcHeaderHeightList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{21}
}

func (m *ReqRelayBtcHeaderHeightList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRelayBtcHeaderHeightList.Unmarshal(m, b)
}
func (m *ReqRelayBtcHeaderHeightList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRelayBtcHeaderHeightList.Marshal(b, m, deterministic)
}
func (m *ReqRelayBtcHeaderHeightList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRelayBtcHeaderHeightList.Merge(m, src)
}
func (m *ReqRelayBtcHeaderHeightList) XXX_Size() int {
	return xxx_messageInfo_ReqRelayBtcHeaderHeightList.Size(m)
}
func (m *ReqRelayBtcHeaderHeightList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRelayBtcHeaderHeightList.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRelayBtcHeaderHeightList proto.InternalMessageInfo

func (m *ReqRelayBtcHeaderHeightList) GetReqHeight() int64 {
	if m != nil {
		return m.ReqHeight
	}
	return 0
}

func (m *ReqRelayBtcHeaderHeightList) GetCounts() int32 {
	if m != nil {
		return m.Counts
	}
	return 0
}

func (m *ReqRelayBtcHeaderHeightList) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type ReplyRelayBtcHeadHeightList struct {
	Heights              []int64  `protobuf:"varint,1,rep,packed,name=heights,proto3" json:"heights,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyRelayBtcHeadHeightList) Reset()         { *m = ReplyRelayBtcHeadHeightList{} }
func (m *ReplyRelayBtcHeadHeightList) String() string { return proto.CompactTextString(m) }
func (*ReplyRelayBtcHeadHeightList) ProtoMessage()    {}
func (*ReplyRelayBtcHeadHeightList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{22}
}

func (m *ReplyRelayBtcHeadHeightList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyRelayBtcHeadHeightList.Unmarshal(m, b)
}
func (m *ReplyRelayBtcHeadHeightList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyRelayBtcHeadHeightList.Marshal(b, m, deterministic)
}
func (m *ReplyRelayBtcHeadHeightList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyRelayBtcHeadHeightList.Merge(m, src)
}
func (m *ReplyRelayBtcHeadHeightList) XXX_Size() int {
	return xxx_messageInfo_ReplyRelayBtcHeadHeightList.Size(m)
}
func (m *ReplyRelayBtcHeadHeightList) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyRelayBtcHeadHeightList.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyRelayBtcHeadHeightList proto.InternalMessageInfo

func (m *ReplyRelayBtcHeadHeightList) GetHeights() []int64 {
	if m != nil {
		return m.Heights
	}
	return nil
}

type ReqRelayQryBTCHeadHeight struct {
	BaseHeight           int64    `protobuf:"varint,1,opt,name=baseHeight,proto3" json:"baseHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqRelayQryBTCHeadHeight) Reset()         { *m = ReqRelayQryBTCHeadHeight{} }
func (m *ReqRelayQryBTCHeadHeight) String() string { return proto.CompactTextString(m) }
func (*ReqRelayQryBTCHeadHeight) ProtoMessage()    {}
func (*ReqRelayQryBTCHeadHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{23}
}

func (m *ReqRelayQryBTCHeadHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRelayQryBTCHeadHeight.Unmarshal(m, b)
}
func (m *ReqRelayQryBTCHeadHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRelayQryBTCHeadHeight.Marshal(b, m, deterministic)
}
func (m *ReqRelayQryBTCHeadHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRelayQryBTCHeadHeight.Merge(m, src)
}
func (m *ReqRelayQryBTCHeadHeight) XXX_Size() int {
	return xxx_messageInfo_ReqRelayQryBTCHeadHeight.Size(m)
}
func (m *ReqRelayQryBTCHeadHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRelayQryBTCHeadHeight.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRelayQryBTCHeadHeight proto.InternalMessageInfo

func (m *ReqRelayQryBTCHeadHeight) GetBaseHeight() int64 {
	if m != nil {
		return m.BaseHeight
	}
	return 0
}

type ReplayRelayQryBTCHeadHeight struct {
	CurHeight            int64    `protobuf:"varint,1,opt,name=curHeight,proto3" json:"curHeight,omitempty"`
	BaseHeight           int64    `protobuf:"varint,2,opt,name=baseHeight,proto3" json:"baseHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplayRelayQryBTCHeadHeight) Reset()         { *m = ReplayRelayQryBTCHeadHeight{} }
func (m *ReplayRelayQryBTCHeadHeight) String() string { return proto.CompactTextString(m) }
func (*ReplayRelayQryBTCHeadHeight) ProtoMessage()    {}
func (*ReplayRelayQryBTCHeadHeight) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{24}
}

func (m *ReplayRelayQryBTCHeadHeight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplayRelayQryBTCHeadHeight.Unmarshal(m, b)
}
func (m *ReplayRelayQryBTCHeadHeight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplayRelayQryBTCHeadHeight.Marshal(b, m, deterministic)
}
func (m *ReplayRelayQryBTCHeadHeight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplayRelayQryBTCHeadHeight.Merge(m, src)
}
func (m *ReplayRelayQryBTCHeadHeight) XXX_Size() int {
	return xxx_messageInfo_ReplayRelayQryBTCHeadHeight.Size(m)
}
func (m *ReplayRelayQryBTCHeadHeight) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplayRelayQryBTCHeadHeight.DiscardUnknown(m)
}

var xxx_messageInfo_ReplayRelayQryBTCHeadHeight proto.InternalMessageInfo

func (m *ReplayRelayQryBTCHeadHeight) GetCurHeight() int64 {
	if m != nil {
		return m.CurHeight
	}
	return 0
}

func (m *ReplayRelayQryBTCHeadHeight) GetBaseHeight() int64 {
	if m != nil {
		return m.BaseHeight
	}
	return 0
}

func init() {
	proto.RegisterEnum("types.RelayOrderStatus", RelayOrderStatus_name, RelayOrderStatus_value)
	proto.RegisterType((*RelayAction)(nil), "types.RelayAction")
	proto.RegisterType((*RelayOrder)(nil), "types.RelayOrder")
	proto.RegisterType((*RelayCreate)(nil), "types.RelayCreate")
	proto.RegisterType((*RelayAccept)(nil), "types.RelayAccept")
	proto.RegisterType((*RelayRevoke)(nil), "types.RelayRevoke")
	proto.RegisterType((*RelayConfirmTx)(nil), "types.RelayConfirmTx")
	proto.RegisterType((*RelayVerify)(nil), "types.RelayVerify")
	proto.RegisterType((*RelayVerifyCli)(nil), "types.RelayVerifyCli")
	proto.RegisterType((*BtcHeader)(nil), "types.BtcHeader")
	proto.RegisterType((*BtcHeaders)(nil), "types.BtcHeaders")
	proto.RegisterType((*BtcTransaction)(nil), "types.BtcTransaction")
	proto.RegisterType((*Vin)(nil), "types.Vin")
	proto.RegisterType((*Vout)(nil), "types.Vout")
	proto.RegisterType((*BtcSpv)(nil), "types.BtcSpv")
	proto.RegisterType((*RelayLastRcvBtcHeader)(nil), "types.RelayLastRcvBtcHeader")
	proto.RegisterType((*ReceiptRelayRcvBTCHeaders)(nil), "types.ReceiptRelayRcvBTCHeaders")
	proto.RegisterType((*ReceiptRelayLog)(nil), "types.ReceiptRelayLog")
	proto.RegisterType((*ReqRelayAddrCoins)(nil), "types.ReqRelayAddrCoins")
	proto.RegisterType((*ReplyRelayOrders)(nil), "types.ReplyRelayOrders")
	proto.RegisterType((*QueryRelayOrderParam)(nil), "types.QueryRelayOrderParam")
	proto.RegisterType((*QueryRelayOrderResult)(nil), "types.QueryRelayOrderResult")
	proto.RegisterType((*ReqRelayBtcHeaderHeightList)(nil), "types.ReqRelayBtcHeaderHeightList")
	proto.RegisterType((*ReplyRelayBtcHeadHeightList)(nil), "types.ReplyRelayBtcHeadHeightList")
	proto.RegisterType((*ReqRelayQryBTCHeadHeight)(nil), "types.ReqRelayQryBTCHeadHeight")
	proto.RegisterType((*ReplayRelayQryBTCHeadHeight)(nil), "types.ReplayRelayQryBTCHeadHeight")
}

func init() {
	proto.RegisterFile("relay.proto", fileDescriptor_9f69a7d5a802d584)
}

var fileDescriptor_9f69a7d5a802d584 = []byte{
	// 1524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x58, 0xc1, 0x6e, 0xdb, 0x46,
	0x13, 0x36, 0x25, 0x91, 0x16, 0x47, 0xb6, 0x23, 0x6f, 0xec, 0xfc, 0xfc, 0xdb, 0xa0, 0x31, 0x88,
	0xb6, 0x70, 0x83, 0xc2, 0x05, 0x12, 0x04, 0x05, 0x8a, 0x5e, 0x2c, 0xa3, 0xa8, 0x02, 0x04, 0x4d,
	0xb2, 0x36, 0x9c, 0x02, 0x3d, 0x14, 0x34, 0xb9, 0xb6, 0x89, 0xc8, 0xa4, 0xb2, 0x5c, 0x29, 0x52,
	0x6f, 0x3d, 0x17, 0xbd, 0xf7, 0xdc, 0x63, 0x9f, 0xa0, 0xb7, 0x3e, 0x42, 0x0f, 0x7d, 0xa1, 0x62,
	0x66, 0x97, 0xe4, 0x52, 0x96, 0x1d, 0xb5, 0xd7, 0xde, 0x38, 0x33, 0xdf, 0xee, 0xcc, 0xce, 0xce,
	0x7c, 0x3b, 0x12, 0xf4, 0xa4, 0x18, 0x45, 0xf3, 0x83, 0xb1, 0xcc, 0x55, 0xce, 0x5c, 0x35, 0x1f,
	0x8b, 0x22, 0xfc, 0xb1, 0x0d, 0x3d, 0x8e, 0xea, 0xc3, 0x58, 0xa5, 0x79, 0xc6, 0x3e, 0x05, 0x2f,
	0x96, 0x22, 0x52, 0x22, 0x70, 0xf6, 0x9c, 0xfd, 0xde, 0x23, 0x76, 0x40, 0xb8, 0x03, 0xc2, 0x1c,
	0x91, 0x65, 0xb8, 0xc6, 0x0d, 0x06, 0xd1, 0x51, 0x1c, 0x8b, 0xb1, 0x0a, 0x5a, 0xd7, 0xd1, 0x87,
	0x64, 0x41, 0xb4, 0xc6, 0x20, 0x5a, 0x8a, 0x69, 0xfe, 0x5a, 0x04, 0xed, 0xeb, 0x68, 0x4e, 0x16,
	0x44, 0x6b, 0x0c, 0x7b, 0x02, 0x7e, 0x9c, 0x67, 0xe7, 0xa9, 0xbc, 0x3a, 0x99, 0x05, 0x1d, 0x5a,
	0xb0, 0xdb, 0x08, 0xa6, 0x34, 0x0e, 0xd7, 0x78, 0x8d, 0x44, 0x27, 0x53, 0x21, 0xd3, 0xf3, 0x79,
	0xe0, 0x5e, 0x77, 0x72, 0x4a, 0x16, 0x74, 0xa2, 0x31, 0xe8, 0x44, 0x7f, 0x1d, 0x8d, 0xd2, 0xc0,
	0xbb, 0xee, 0xe4, 0xb4, 0x34, 0xa2, 0x93, 0x0a, 0xc9, 0x1e, 0x03, 0x9c, 0xa9, 0x78, 0x28, 0xa2,
	0x44, 0xc8, 0x22, 0x58, 0xa7, 0x75, 0xdb, 0x66, 0xdd, 0xa0, 0x32, 0x0c, 0xd7, 0xb8, 0x05, 0x63,
	0x5b, 0xd0, 0x52, 0xf3, 0x00, 0xf6, 0x9c, 0x7d, 0x97, 0xb7, 0xd4, 0x7c, 0xb0, 0x0e, 0xee, 0x34,
	0x1a, 0x4d, 0x44, 0xf8, 0xbb, 0x0b, 0x40, 0xde, 0x9e, 0xcb, 0x44, 0x48, 0xc4, 0xa5, 0x09, 0xa5,
	0xdf, 0xe7, 0xad, 0x34, 0x61, 0x9f, 0x81, 0x57, 0xa8, 0x48, 0x4d, 0x0a, 0x4a, 0xf2, 0xd6, 0xa3,
	0xff, 0xd9, 0x01, 0xd2, 0x92, 0x63, 0x32, 0x73, 0x03, 0xc3, 0x43, 0x8d, 0xa5, 0xd0, 0x4a, 0x4a,
	0xf5, 0x2d, 0x6b, 0x6a, 0x24, 0xdb, 0x87, 0x3b, 0xa3, 0x3c, 0x8e, 0x46, 0x47, 0x79, 0x9a, 0x1d,
	0x5e, 0xe5, 0x93, 0x4c, 0x51, 0xda, 0x3b, 0x7c, 0x51, 0xcd, 0xf6, 0xa0, 0xa7, 0x0b, 0x40, 0x1e,
	0x26, 0x89, 0xa4, 0x44, 0xfb, 0xdc, 0x56, 0xb1, 0xfb, 0xe0, 0xe7, 0x63, 0x21, 0x23, 0xac, 0x29,
	0xca, 0xeb, 0x26, 0xaf, 0x15, 0x6c, 0x07, 0xdc, 0x19, 0x6e, 0x47, 0x99, 0xf3, 0xb9, 0x16, 0x58,
	0x00, 0xeb, 0x33, 0xe3, 0xb7, 0x4b, 0x7e, 0x4b, 0x91, 0xf0, 0xe4, 0xc9, 0x37, 0x78, 0xf2, 0x81,
	0xf8, 0x93, 0xd9, 0x30, 0x2a, 0x2e, 0x29, 0xa9, 0x3e, 0x2f, 0x45, 0xf6, 0x01, 0x80, 0x0e, 0xe6,
	0x24, 0xbd, 0x12, 0x41, 0x6f, 0xcf, 0xd9, 0x6f, 0x73, 0x4b, 0x83, 0x76, 0x5d, 0x92, 0xb4, 0xe9,
	0x06, 0x2d, 0xb6, 0x34, 0xb5, 0x9d, 0xd6, 0x6f, 0xea, 0xf5, 0xb5, 0x86, 0xce, 0x6f, 0x0a, 0x0e,
	0x01, 0x5b, 0x04, 0xb0, 0x55, 0xb8, 0xc3, 0x79, 0x9a, 0xa5, 0xc5, 0x25, 0x01, 0xee, 0xe8, 0x1d,
	0x6a, 0x0d, 0x0b, 0x61, 0xc3, 0x48, 0xfa, 0x00, 0x7d, 0x8a, 0xa1, 0xa1, 0x63, 0xf7, 0xc0, 0xbb,
	0x14, 0xe9, 0xc5, 0xa5, 0x0a, 0xb6, 0x69, 0xbd, 0x91, 0xf0, 0xdc, 0xdf, 0x0e, 0xb5, 0x81, 0xe9,
	0x3c, 0x19, 0x11, 0xe3, 0x9a, 0x0d, 0x46, 0x79, 0xfc, 0xfa, 0x55, 0x94, 0xaa, 0x22, 0xb8, 0x4b,
	0x79, 0xb7, 0x55, 0x8d, 0x3b, 0x3e, 0x9e, 0x5f, 0x9d, 0xe5, 0xa3, 0x60, 0x87, 0x5c, 0x2f, 0xaa,
	0xd9, 0x87, 0xb0, 0x59, 0xa9, 0xbe, 0x9a, 0x89, 0x38, 0xd8, 0x25, 0x5c, 0x53, 0x19, 0xfe, 0xdc,
	0x32, 0xf4, 0xa1, 0xa9, 0xa1, 0x79, 0xef, 0xce, 0x8d, 0xf7, 0xde, 0xba, 0xe1, 0xde, 0xdb, 0x37,
	0xdc, 0x7b, 0xc7, 0xbe, 0xf7, 0x25, 0x75, 0xea, 0xde, 0x58, 0xa7, 0x76, 0x3e, 0xbc, 0x95, 0xf2,
	0xb1, 0xbe, 0x62, 0x3e, 0xba, 0xcb, 0xf2, 0xf1, 0x7d, 0xc5, 0xa6, 0xc4, 0x78, 0x01, 0xac, 0xe7,
	0xd8, 0x6c, 0x4f, 0xcb, 0x7e, 0x2e, 0xc5, 0xfa, 0x68, 0x2d, 0xfb, 0x68, 0x0b, 0x01, 0xb7, 0xaf,
	0x05, 0x1c, 0xbe, 0x32, 0x0e, 0x34, 0x5d, 0xde, 0xe2, 0xe0, 0x1e, 0x78, 0x2a, 0x92, 0x17, 0x42,
	0x53, 0xf3, 0x26, 0x37, 0x12, 0xea, 0x23, 0xa2, 0x7a, 0xb3, 0xbb, 0x91, 0xc2, 0x01, 0x6c, 0x35,
	0x69, 0xf5, 0x1d, 0x7b, 0xeb, 0xba, 0xd5, 0xd1, 0x1b, 0x29, 0xcc, 0x4d, 0x70, 0x9a, 0x35, 0x6f,
	0xd9, 0xe0, 0x23, 0x68, 0xa9, 0x99, 0x79, 0x33, 0x76, 0x6b, 0xde, 0x3c, 0x91, 0x51, 0x56, 0xe8,
	0x78, 0x78, 0x4b, 0xcd, 0xd8, 0x03, 0x68, 0x17, 0xe3, 0xa9, 0x79, 0x2d, 0x36, 0x6b, 0xdc, 0xf1,
	0x78, 0xca, 0xd1, 0x12, 0xfe, 0xe2, 0x98, 0xa8, 0x2b, 0x9e, 0xbe, 0x3d, 0xe5, 0x32, 0x7a, 0x7b,
	0x32, 0x2b, 0x53, 0x4e, 0x02, 0xe2, 0xd5, 0xec, 0x69, 0x96, 0x88, 0x99, 0x49, 0x48, 0x29, 0x62,
	0x0f, 0x5f, 0x09, 0xf9, 0x7a, 0x20, 0xa3, 0x2c, 0xbe, 0x34, 0x25, 0x68, 0x69, 0xb0, 0xd6, 0xcf,
	0xf0, 0x62, 0x28, 0x11, 0x9a, 0x03, 0x6b, 0x45, 0xf8, 0x67, 0x0b, 0xfc, 0xea, 0x29, 0x60, 0x0c,
	0x3a, 0x97, 0x08, 0xd3, 0x21, 0xd1, 0x37, 0x56, 0x94, 0xa1, 0x0c, 0xea, 0x0e, 0x4d, 0xef, 0x1d,
	0xde, 0x54, 0x5a, 0x2c, 0xa0, 0x9b, 0xc3, 0x62, 0x81, 0xa9, 0x90, 0x05, 0x5e, 0x64, 0x47, 0xc7,
	0x6d, 0xc4, 0x32, 0xee, 0x91, 0xe0, 0x79, 0xae, 0x4c, 0x60, 0x96, 0x06, 0x63, 0x51, 0xc8, 0x4a,
	0x1e, 0xb1, 0x0a, 0x7d, 0x63, 0x6e, 0xb2, 0x3c, 0x8b, 0x05, 0x55, 0x7f, 0x87, 0x6b, 0x01, 0x91,
	0x67, 0x58, 0x87, 0x5d, 0x8d, 0xc4, 0x6f, 0xdc, 0x3d, 0x49, 0xcf, 0xcf, 0xd3, 0x78, 0x32, 0x52,
	0x73, 0x22, 0xe4, 0x36, 0xb7, 0x34, 0xc8, 0x6c, 0x63, 0x29, 0xa6, 0x69, 0x3e, 0x29, 0x2c, 0x6a,
	0x6e, 0xe8, 0xd8, 0x7b, 0xd0, 0xcd, 0xc4, 0x4c, 0x91, 0xbd, 0x47, 0xf6, 0x4a, 0xc6, 0x73, 0xa5,
	0x05, 0x17, 0x85, 0x50, 0x44, 0xcc, 0x5d, 0x5e, 0x8a, 0xe1, 0x97, 0x00, 0xf5, 0xdb, 0xca, 0x0e,
	0xc0, 0xaf, 0xde, 0xd6, 0xc0, 0xd9, 0x6b, 0xef, 0xf7, 0x1e, 0xf5, 0x17, 0x5f, 0x60, 0x5e, 0x43,
	0xc2, 0x3f, 0x1c, 0xd8, 0x6a, 0x96, 0xd8, 0xd2, 0x4b, 0xd9, 0x83, 0x9e, 0xbe, 0x43, 0x9d, 0x73,
	0x7d, 0x25, 0xb6, 0x8a, 0xdd, 0x87, 0xf6, 0x34, 0xc5, 0xee, 0x41, 0x97, 0x60, 0x5c, 0x9e, 0xa6,
	0x19, 0x47, 0x35, 0x7b, 0x00, 0x9d, 0x69, 0x3e, 0xc1, 0x97, 0x13, 0xcd, 0xbd, 0xd2, 0x9c, 0x4f,
	0x14, 0x27, 0x43, 0x95, 0x7d, 0xd7, 0xca, 0xfe, 0xb5, 0x4a, 0xf0, 0x96, 0x54, 0x42, 0xf8, 0x04,
	0xda, 0xa7, 0x9a, 0x2e, 0xa3, 0x24, 0x91, 0xa2, 0x28, 0xca, 0x02, 0x37, 0x22, 0x5e, 0xe2, 0x29,
	0x0e, 0x14, 0x26, 0x6a, 0x2d, 0x84, 0x1c, 0x3a, 0xe8, 0x1e, 0x93, 0x1e, 0xe7, 0x69, 0x76, 0x16,
	0x15, 0x7a, 0xb6, 0xeb, 0xf2, 0x4a, 0xb6, 0xf7, 0x6c, 0xdd, 0xb0, 0x67, 0xdb, 0xde, 0xf3, 0x57,
	0x07, 0x3c, 0xdd, 0x87, 0x4b, 0x93, 0x58, 0x9e, 0xb1, 0x65, 0x9d, 0xf1, 0xa6, 0x3a, 0x6e, 0x74,
	0x51, 0x67, 0xa1, 0x8b, 0xec, 0xee, 0x74, 0x9b, 0xdd, 0x89, 0x17, 0x45, 0x7d, 0xf8, 0x42, 0xe6,
	0xf9, 0x79, 0xe0, 0xed, 0xb5, 0xf7, 0x37, 0xb8, 0xad, 0x0a, 0x23, 0xd8, 0x25, 0x6e, 0x78, 0x16,
	0x15, 0x8a, 0xc7, 0xd3, 0xba, 0x19, 0xf7, 0xc1, 0xab, 0xea, 0xc6, 0x59, 0x5a, 0x37, 0xc6, 0x8e,
	0xc5, 0x8e, 0xf9, 0x69, 0x14, 0x83, 0xa5, 0x09, 0xff, 0x72, 0xe0, 0xff, 0x5c, 0xc4, 0x22, 0x1d,
	0x2b, 0xcd, 0xca, 0xf1, 0x74, 0x70, 0x72, 0x54, 0x96, 0xe8, 0x43, 0x58, 0xbf, 0x34, 0x23, 0xe2,
	0x4d, 0x05, 0x5a, 0x02, 0xd0, 0xd3, 0x28, 0x2a, 0x54, 0xd3, 0x53, 0xad, 0xc1, 0x34, 0x65, 0xe2,
	0xed, 0xd0, 0xce, 0x60, 0xad, 0x60, 0x1f, 0xc3, 0x16, 0x62, 0x07, 0x75, 0xac, 0x7a, 0x72, 0x5b,
	0xd0, 0x62, 0xa1, 0x65, 0xe2, 0xad, 0x05, 0xd3, 0x0f, 0x67, 0x53, 0x19, 0xfe, 0xe4, 0xc2, 0x1d,
	0xfb, 0x54, 0xcf, 0xf2, 0x8b, 0x5b, 0x68, 0xf5, 0x3e, 0xf8, 0xf1, 0xc4, 0x8c, 0x93, 0xa6, 0x7a,
	0x6a, 0x05, 0x5a, 0x9b, 0xb3, 0xa8, 0xbf, 0xc2, 0xc8, 0xe9, 0xff, 0x9b, 0x91, 0x93, 0x9a, 0x28,
	0xcd, 0x9e, 0x2f, 0x8c, 0x9d, 0x4d, 0xe5, 0x6a, 0xa3, 0xa7, 0xff, 0x5f, 0x1f, 0x3d, 0xf1, 0x7c,
	0xc3, 0x7a, 0xf6, 0xc4, 0x91, 0x6c, 0xf9, 0x88, 0xc9, 0x56, 0x1a, 0xa9, 0xee, 0xae, 0x38, 0x52,
	0xed, 0x2c, 0x1b, 0xa9, 0x7e, 0x73, 0x60, 0x9b, 0x8b, 0x37, 0x7a, 0xac, 0x4a, 0x12, 0x89, 0x86,
	0x02, 0x29, 0x06, 0x29, 0xaa, 0xa4, 0x1d, 0xfc, 0xfe, 0xe7, 0x3f, 0x94, 0x76, 0xc0, 0xc5, 0xea,
	0x28, 0x88, 0xcc, 0x7d, 0xae, 0x05, 0x4c, 0xe0, 0x38, 0xba, 0x10, 0xdf, 0x4c, 0xae, 0xce, 0x84,
	0x1e, 0x3d, 0x5d, 0x6e, 0x69, 0x90, 0x48, 0x51, 0x3a, 0x4e, 0x7f, 0xd0, 0x2c, 0xee, 0xf2, 0x4a,
	0x0e, 0xbf, 0x86, 0x3e, 0x17, 0xe3, 0xd1, 0xbc, 0x76, 0x59, 0xb0, 0xc7, 0xe6, 0x87, 0x37, 0x35,
	0x4c, 0x49, 0x05, 0xdb, 0xd7, 0x62, 0xe3, 0x36, 0x2a, 0x8c, 0x60, 0xe7, 0xe5, 0x44, 0x48, 0x6b,
	0xa3, 0x17, 0x91, 0x8c, 0xae, 0xac, 0x33, 0x3a, 0xab, 0x9d, 0xd1, 0x6a, 0xdc, 0x56, 0xa3, 0x71,
	0xc3, 0x01, 0xec, 0x2e, 0xb8, 0xe0, 0xa2, 0x98, 0x8c, 0x14, 0xfb, 0x04, 0xbc, 0x77, 0xc5, 0x6a,
	0x00, 0xe1, 0x1b, 0x78, 0xbf, 0xbc, 0x9b, 0x8a, 0xd4, 0x74, 0xa5, 0x3c, 0x4b, 0x0b, 0x62, 0x2d,
	0x29, 0xde, 0x98, 0x4a, 0x72, 0xa8, 0x14, 0x6b, 0x05, 0x3e, 0x09, 0x31, 0x36, 0x99, 0xbe, 0x2f,
	0x97, 0x1b, 0x09, 0x57, 0x25, 0xa9, 0x14, 0xf5, 0x94, 0xea, 0xf2, 0x5a, 0x11, 0x7e, 0x8e, 0x2e,
	0xcb, 0x14, 0x1b, 0xa7, 0x96, 0xcb, 0x00, 0x49, 0x17, 0x25, 0x1d, 0x7d, 0x9b, 0x97, 0x62, 0xf8,
	0x05, 0x04, 0x65, 0xac, 0x2f, 0xe5, 0xdc, 0xf0, 0xb4, 0x09, 0xa5, 0x49, 0xf4, 0x3a, 0x52, 0x9b,
	0xe8, 0xbf, 0xd3, 0x4e, 0xa3, 0xf9, 0xf2, 0xe5, 0x9a, 0x03, 0x9b, 0xe7, 0xac, 0x14, 0x4b, 0x5e,
	0x91, 0xc6, 0xe6, 0x0f, 0x73, 0x2c, 0x9a, 0xe6, 0xf5, 0xb1, 0x2e, 0x74, 0xd2, 0x2c, 0x55, 0xfd,
	0x35, 0xd6, 0x83, 0xf5, 0xb1, 0xc8, 0x92, 0x34, 0xbb, 0xe8, 0x3b, 0x28, 0x60, 0xa7, 0xa1, 0xd0,
	0x62, 0x5b, 0x00, 0xa6, 0xf1, 0x51, 0x6e, 0xb3, 0x0d, 0xe8, 0xea, 0x2e, 0x16, 0x49, 0xbf, 0x83,
	0x52, 0x1c, 0x65, 0xb1, 0x18, 0x89, 0xa4, 0xef, 0xe2, 0x42, 0x7c, 0x86, 0xf3, 0x89, 0xea, 0x7b,
	0x67, 0x1e, 0xfd, 0x05, 0xf4, 0xf8, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0x34, 0x7d, 0xa0,
	0x11, 0x12, 0x00, 0x00,
}
