// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trade.proto

package types

import (
	context "context"
	fmt "fmt"
	math "math"

	types "github.com/33cn/chain33/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// trade 交易部分
//
type Trade struct {
	// Types that are valid to be assigned to Value:
	//	*Trade_SellLimit
	//	*Trade_BuyMarket
	//	*Trade_RevokeSell
	//	*Trade_BuyLimit
	//	*Trade_SellMarket
	//	*Trade_RevokeBuy
	Value                isTrade_Value `protobuf_oneof:"value"`
	Ty                   int32         `protobuf:"varint,4,opt,name=ty,proto3" json:"ty,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{0}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

type isTrade_Value interface {
	isTrade_Value()
}

type Trade_SellLimit struct {
	SellLimit *TradeForSell `protobuf:"bytes,1,opt,name=sellLimit,proto3,oneof"`
}

type Trade_BuyMarket struct {
	BuyMarket *TradeForBuy `protobuf:"bytes,2,opt,name=buyMarket,proto3,oneof"`
}

type Trade_RevokeSell struct {
	RevokeSell *TradeForRevokeSell `protobuf:"bytes,3,opt,name=revokeSell,proto3,oneof"`
}

type Trade_BuyLimit struct {
	BuyLimit *TradeForBuyLimit `protobuf:"bytes,5,opt,name=buyLimit,proto3,oneof"`
}

type Trade_SellMarket struct {
	SellMarket *TradeForSellMarket `protobuf:"bytes,6,opt,name=sellMarket,proto3,oneof"`
}

type Trade_RevokeBuy struct {
	RevokeBuy *TradeForRevokeBuy `protobuf:"bytes,7,opt,name=revokeBuy,proto3,oneof"`
}

func (*Trade_SellLimit) isTrade_Value() {}

func (*Trade_BuyMarket) isTrade_Value() {}

func (*Trade_RevokeSell) isTrade_Value() {}

func (*Trade_BuyLimit) isTrade_Value() {}

func (*Trade_SellMarket) isTrade_Value() {}

func (*Trade_RevokeBuy) isTrade_Value() {}

func (m *Trade) GetValue() isTrade_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Trade) GetSellLimit() *TradeForSell {
	if x, ok := m.GetValue().(*Trade_SellLimit); ok {
		return x.SellLimit
	}
	return nil
}

func (m *Trade) GetBuyMarket() *TradeForBuy {
	if x, ok := m.GetValue().(*Trade_BuyMarket); ok {
		return x.BuyMarket
	}
	return nil
}

func (m *Trade) GetRevokeSell() *TradeForRevokeSell {
	if x, ok := m.GetValue().(*Trade_RevokeSell); ok {
		return x.RevokeSell
	}
	return nil
}

func (m *Trade) GetBuyLimit() *TradeForBuyLimit {
	if x, ok := m.GetValue().(*Trade_BuyLimit); ok {
		return x.BuyLimit
	}
	return nil
}

func (m *Trade) GetSellMarket() *TradeForSellMarket {
	if x, ok := m.GetValue().(*Trade_SellMarket); ok {
		return x.SellMarket
	}
	return nil
}

func (m *Trade) GetRevokeBuy() *TradeForRevokeBuy {
	if x, ok := m.GetValue().(*Trade_RevokeBuy); ok {
		return x.RevokeBuy
	}
	return nil
}

func (m *Trade) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Trade) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Trade_OneofMarshaler, _Trade_OneofUnmarshaler, _Trade_OneofSizer, []interface{}{
		(*Trade_SellLimit)(nil),
		(*Trade_BuyMarket)(nil),
		(*Trade_RevokeSell)(nil),
		(*Trade_BuyLimit)(nil),
		(*Trade_SellMarket)(nil),
		(*Trade_RevokeBuy)(nil),
	}
}

func _Trade_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Trade)
	// value
	switch x := m.Value.(type) {
	case *Trade_SellLimit:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SellLimit); err != nil {
			return err
		}
	case *Trade_BuyMarket:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuyMarket); err != nil {
			return err
		}
	case *Trade_RevokeSell:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevokeSell); err != nil {
			return err
		}
	case *Trade_BuyLimit:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BuyLimit); err != nil {
			return err
		}
	case *Trade_SellMarket:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SellMarket); err != nil {
			return err
		}
	case *Trade_RevokeBuy:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevokeBuy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Trade.Value has unexpected type %T", x)
	}
	return nil
}

func _Trade_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Trade)
	switch tag {
	case 1: // value.sellLimit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForSell)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_SellLimit{msg}
		return true, err
	case 2: // value.buyMarket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForBuy)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_BuyMarket{msg}
		return true, err
	case 3: // value.revokeSell
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForRevokeSell)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_RevokeSell{msg}
		return true, err
	case 5: // value.buyLimit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForBuyLimit)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_BuyLimit{msg}
		return true, err
	case 6: // value.sellMarket
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForSellMarket)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_SellMarket{msg}
		return true, err
	case 7: // value.revokeBuy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TradeForRevokeBuy)
		err := b.DecodeMessage(msg)
		m.Value = &Trade_RevokeBuy{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Trade_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Trade)
	// value
	switch x := m.Value.(type) {
	case *Trade_SellLimit:
		s := proto.Size(x.SellLimit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_BuyMarket:
		s := proto.Size(x.BuyMarket)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_RevokeSell:
		s := proto.Size(x.RevokeSell)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_BuyLimit:
		s := proto.Size(x.BuyLimit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_SellMarket:
		s := proto.Size(x.SellMarket)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Trade_RevokeBuy:
		s := proto.Size(x.RevokeBuy)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 创建众筹交易,确定一手交易的token的数量，单价以及总共有多少手token可以进行众筹
type TradeForSell struct {
	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	// 每一手出售的token的数量
	AmountPerBoardlot int64 `protobuf:"varint,2,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	// 起卖手数,必须达到这个门槛才允许进行交易
	MinBoardlot int64 `protobuf:"varint,3,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	// 每一手token的价格
	PricePerBoardlot int64 `protobuf:"varint,4,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot    int64 `protobuf:"varint,5,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	// 此次出售的起始时间，如果非众筹则可以忽略此时间
	Starttime int64 `protobuf:"varint,6,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Stoptime  int64 `protobuf:"varint,7,opt,name=stoptime,proto3" json:"stoptime,omitempty"`
	Crowdfund bool  `protobuf:"varint,8,opt,name=crowdfund,proto3" json:"crowdfund,omitempty"`
	// 资产来源
	AssetExec            string   `protobuf:"bytes,9,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForSell) Reset()         { *m = TradeForSell{} }
func (m *TradeForSell) String() string { return proto.CompactTextString(m) }
func (*TradeForSell) ProtoMessage()    {}
func (*TradeForSell) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{1}
}

func (m *TradeForSell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForSell.Unmarshal(m, b)
}
func (m *TradeForSell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForSell.Marshal(b, m, deterministic)
}
func (m *TradeForSell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForSell.Merge(m, src)
}
func (m *TradeForSell) XXX_Size() int {
	return xxx_messageInfo_TradeForSell.Size(m)
}
func (m *TradeForSell) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForSell.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForSell proto.InternalMessageInfo

func (m *TradeForSell) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *TradeForSell) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *TradeForSell) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *TradeForSell) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *TradeForSell) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *TradeForSell) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *TradeForSell) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *TradeForSell) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

func (m *TradeForSell) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

// 购买者发起交易用来购买token持有者之前挂单出售的token
// 其中的hash为token出售者发起出售交易的hash
type TradeForBuy struct {
	SellID               string   `protobuf:"bytes,1,opt,name=sellID,proto3" json:"sellID,omitempty"`
	BoardlotCnt          int64    `protobuf:"varint,2,opt,name=boardlotCnt,proto3" json:"boardlotCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForBuy) Reset()         { *m = TradeForBuy{} }
func (m *TradeForBuy) String() string { return proto.CompactTextString(m) }
func (*TradeForBuy) ProtoMessage()    {}
func (*TradeForBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{2}
}

func (m *TradeForBuy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForBuy.Unmarshal(m, b)
}
func (m *TradeForBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForBuy.Marshal(b, m, deterministic)
}
func (m *TradeForBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForBuy.Merge(m, src)
}
func (m *TradeForBuy) XXX_Size() int {
	return xxx_messageInfo_TradeForBuy.Size(m)
}
func (m *TradeForBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForBuy.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForBuy proto.InternalMessageInfo

func (m *TradeForBuy) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *TradeForBuy) GetBoardlotCnt() int64 {
	if m != nil {
		return m.BoardlotCnt
	}
	return 0
}

// 允许token的持有者撤销之前未成交出售token的挂单
type TradeForRevokeSell struct {
	SellID               string   `protobuf:"bytes,1,opt,name=sellID,proto3" json:"sellID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForRevokeSell) Reset()         { *m = TradeForRevokeSell{} }
func (m *TradeForRevokeSell) String() string { return proto.CompactTextString(m) }
func (*TradeForRevokeSell) ProtoMessage()    {}
func (*TradeForRevokeSell) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{3}
}

func (m *TradeForRevokeSell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForRevokeSell.Unmarshal(m, b)
}
func (m *TradeForRevokeSell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForRevokeSell.Marshal(b, m, deterministic)
}
func (m *TradeForRevokeSell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForRevokeSell.Merge(m, src)
}
func (m *TradeForRevokeSell) XXX_Size() int {
	return xxx_messageInfo_TradeForRevokeSell.Size(m)
}
func (m *TradeForRevokeSell) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForRevokeSell.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForRevokeSell proto.InternalMessageInfo

func (m *TradeForRevokeSell) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

// 限价买单构造请求
type TradeForBuyLimit struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,2,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,3,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,4,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,5,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	AssetExec            string   `protobuf:"bytes,6,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForBuyLimit) Reset()         { *m = TradeForBuyLimit{} }
func (m *TradeForBuyLimit) String() string { return proto.CompactTextString(m) }
func (*TradeForBuyLimit) ProtoMessage()    {}
func (*TradeForBuyLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{4}
}

func (m *TradeForBuyLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForBuyLimit.Unmarshal(m, b)
}
func (m *TradeForBuyLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForBuyLimit.Marshal(b, m, deterministic)
}
func (m *TradeForBuyLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForBuyLimit.Merge(m, src)
}
func (m *TradeForBuyLimit) XXX_Size() int {
	return xxx_messageInfo_TradeForBuyLimit.Size(m)
}
func (m *TradeForBuyLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForBuyLimit.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForBuyLimit proto.InternalMessageInfo

func (m *TradeForBuyLimit) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *TradeForBuyLimit) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *TradeForBuyLimit) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *TradeForBuyLimit) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *TradeForBuyLimit) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *TradeForBuyLimit) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

// 现价卖单
type TradeForSellMarket struct {
	BuyID                string   `protobuf:"bytes,1,opt,name=buyID,proto3" json:"buyID,omitempty"`
	BoardlotCnt          int64    `protobuf:"varint,2,opt,name=boardlotCnt,proto3" json:"boardlotCnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForSellMarket) Reset()         { *m = TradeForSellMarket{} }
func (m *TradeForSellMarket) String() string { return proto.CompactTextString(m) }
func (*TradeForSellMarket) ProtoMessage()    {}
func (*TradeForSellMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{5}
}

func (m *TradeForSellMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForSellMarket.Unmarshal(m, b)
}
func (m *TradeForSellMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForSellMarket.Marshal(b, m, deterministic)
}
func (m *TradeForSellMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForSellMarket.Merge(m, src)
}
func (m *TradeForSellMarket) XXX_Size() int {
	return xxx_messageInfo_TradeForSellMarket.Size(m)
}
func (m *TradeForSellMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForSellMarket.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForSellMarket proto.InternalMessageInfo

func (m *TradeForSellMarket) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *TradeForSellMarket) GetBoardlotCnt() int64 {
	if m != nil {
		return m.BoardlotCnt
	}
	return 0
}

// 撤销买单
type TradeForRevokeBuy struct {
	BuyID                string   `protobuf:"bytes,1,opt,name=buyID,proto3" json:"buyID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeForRevokeBuy) Reset()         { *m = TradeForRevokeBuy{} }
func (m *TradeForRevokeBuy) String() string { return proto.CompactTextString(m) }
func (*TradeForRevokeBuy) ProtoMessage()    {}
func (*TradeForRevokeBuy) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{6}
}

func (m *TradeForRevokeBuy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeForRevokeBuy.Unmarshal(m, b)
}
func (m *TradeForRevokeBuy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeForRevokeBuy.Marshal(b, m, deterministic)
}
func (m *TradeForRevokeBuy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeForRevokeBuy.Merge(m, src)
}
func (m *TradeForRevokeBuy) XXX_Size() int {
	return xxx_messageInfo_TradeForRevokeBuy.Size(m)
}
func (m *TradeForRevokeBuy) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeForRevokeBuy.DiscardUnknown(m)
}

var xxx_messageInfo_TradeForRevokeBuy proto.InternalMessageInfo

func (m *TradeForRevokeBuy) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

// 数据库部分
type SellOrder struct {
	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Address     string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	//每一手出售的token的数量
	AmountPerBoardlot int64 `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot       int64 `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	//每一手token的价格
	PricePerBoardlot int64 `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot    int64 `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	SoldBoardlot     int64 `protobuf:"varint,7,opt,name=soldBoardlot,proto3" json:"soldBoardlot,omitempty"`
	//此次出售的起始时间，如果非众筹则可以忽略此时间
	Starttime int64 `protobuf:"varint,8,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Stoptime  int64 `protobuf:"varint,9,opt,name=stoptime,proto3" json:"stoptime,omitempty"`
	Crowdfund bool  `protobuf:"varint,10,opt,name=crowdfund,proto3" json:"crowdfund,omitempty"`
	//此处使用tx的hash来指定
	SellID               string   `protobuf:"bytes,11,opt,name=sellID,proto3" json:"sellID,omitempty"`
	Status               int32    `protobuf:"varint,12,opt,name=status,proto3" json:"status,omitempty"`
	Height               int64    `protobuf:"varint,13,opt,name=height,proto3" json:"height,omitempty"`
	AssetExec            string   `protobuf:"bytes,14,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SellOrder) Reset()         { *m = SellOrder{} }
func (m *SellOrder) String() string { return proto.CompactTextString(m) }
func (*SellOrder) ProtoMessage()    {}
func (*SellOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{7}
}

func (m *SellOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SellOrder.Unmarshal(m, b)
}
func (m *SellOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SellOrder.Marshal(b, m, deterministic)
}
func (m *SellOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SellOrder.Merge(m, src)
}
func (m *SellOrder) XXX_Size() int {
	return xxx_messageInfo_SellOrder.Size(m)
}
func (m *SellOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_SellOrder.DiscardUnknown(m)
}

var xxx_messageInfo_SellOrder proto.InternalMessageInfo

func (m *SellOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *SellOrder) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *SellOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *SellOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *SellOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *SellOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *SellOrder) GetSoldBoardlot() int64 {
	if m != nil {
		return m.SoldBoardlot
	}
	return 0
}

func (m *SellOrder) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *SellOrder) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *SellOrder) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

func (m *SellOrder) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *SellOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SellOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SellOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

// 限价买单数据库记录
type BuyLimitOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	BoughtBoardlot       int64    `protobuf:"varint,7,opt,name=boughtBoardlot,proto3" json:"boughtBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Height               int64    `protobuf:"varint,10,opt,name=height,proto3" json:"height,omitempty"`
	AssetExec            string   `protobuf:"bytes,11,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyLimitOrder) Reset()         { *m = BuyLimitOrder{} }
func (m *BuyLimitOrder) String() string { return proto.CompactTextString(m) }
func (*BuyLimitOrder) ProtoMessage()    {}
func (*BuyLimitOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{8}
}

func (m *BuyLimitOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyLimitOrder.Unmarshal(m, b)
}
func (m *BuyLimitOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyLimitOrder.Marshal(b, m, deterministic)
}
func (m *BuyLimitOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyLimitOrder.Merge(m, src)
}
func (m *BuyLimitOrder) XXX_Size() int {
	return xxx_messageInfo_BuyLimitOrder.Size(m)
}
func (m *BuyLimitOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyLimitOrder.DiscardUnknown(m)
}

var xxx_messageInfo_BuyLimitOrder proto.InternalMessageInfo

func (m *BuyLimitOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *BuyLimitOrder) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *BuyLimitOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *BuyLimitOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *BuyLimitOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *BuyLimitOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *BuyLimitOrder) GetBoughtBoardlot() int64 {
	if m != nil {
		return m.BoughtBoardlot
	}
	return 0
}

func (m *BuyLimitOrder) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *BuyLimitOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *BuyLimitOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BuyLimitOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

// 执行器日志部分
type ReceiptBuyBase struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AmountPerBoardlot    string   `protobuf:"bytes,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     string   `protobuf:"bytes,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	BoughtBoardlot       int64    `protobuf:"varint,7,opt,name=boughtBoardlot,proto3" json:"boughtBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	SellID               string   `protobuf:"bytes,10,opt,name=sellID,proto3" json:"sellID,omitempty"`
	TxHash               string   `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	AssetExec            string   `protobuf:"bytes,13,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptBuyBase) Reset()         { *m = ReceiptBuyBase{} }
func (m *ReceiptBuyBase) String() string { return proto.CompactTextString(m) }
func (*ReceiptBuyBase) ProtoMessage()    {}
func (*ReceiptBuyBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{9}
}

func (m *ReceiptBuyBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptBuyBase.Unmarshal(m, b)
}
func (m *ReceiptBuyBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptBuyBase.Marshal(b, m, deterministic)
}
func (m *ReceiptBuyBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptBuyBase.Merge(m, src)
}
func (m *ReceiptBuyBase) XXX_Size() int {
	return xxx_messageInfo_ReceiptBuyBase.Size(m)
}
func (m *ReceiptBuyBase) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptBuyBase.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptBuyBase proto.InternalMessageInfo

func (m *ReceiptBuyBase) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReceiptBuyBase) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptBuyBase) GetAmountPerBoardlot() string {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return ""
}

func (m *ReceiptBuyBase) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *ReceiptBuyBase) GetPricePerBoardlot() string {
	if m != nil {
		return m.PricePerBoardlot
	}
	return ""
}

func (m *ReceiptBuyBase) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *ReceiptBuyBase) GetBoughtBoardlot() int64 {
	if m != nil {
		return m.BoughtBoardlot
	}
	return 0
}

func (m *ReceiptBuyBase) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *ReceiptBuyBase) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReceiptBuyBase) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *ReceiptBuyBase) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReceiptBuyBase) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReceiptBuyBase) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

type ReceiptSellBase struct {
	TokenSymbol string `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Owner       string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	//每一手出售的token的数量
	AmountPerBoardlot string `protobuf:"bytes,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot       int64  `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	//每一手token的价格
	PricePerBoardlot string `protobuf:"bytes,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot    int64  `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	SoldBoardlot     int64  `protobuf:"varint,7,opt,name=soldBoardlot,proto3" json:"soldBoardlot,omitempty"`
	//此次出售的起始时间，如果非众筹则可以忽略此时间
	Starttime int64 `protobuf:"varint,8,opt,name=starttime,proto3" json:"starttime,omitempty"`
	Stoptime  int64 `protobuf:"varint,9,opt,name=stoptime,proto3" json:"stoptime,omitempty"`
	Crowdfund bool  `protobuf:"varint,10,opt,name=crowdfund,proto3" json:"crowdfund,omitempty"`
	//此处使用tx的hash来指定
	SellID string `protobuf:"bytes,11,opt,name=sellID,proto3" json:"sellID,omitempty"`
	Status string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// buyid
	BuyID                string   `protobuf:"bytes,13,opt,name=buyID,proto3" json:"buyID,omitempty"`
	TxHash               string   `protobuf:"bytes,14,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,15,opt,name=height,proto3" json:"height,omitempty"`
	AssetExec            string   `protobuf:"bytes,16,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptSellBase) Reset()         { *m = ReceiptSellBase{} }
func (m *ReceiptSellBase) String() string { return proto.CompactTextString(m) }
func (*ReceiptSellBase) ProtoMessage()    {}
func (*ReceiptSellBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{10}
}

func (m *ReceiptSellBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptSellBase.Unmarshal(m, b)
}
func (m *ReceiptSellBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptSellBase.Marshal(b, m, deterministic)
}
func (m *ReceiptSellBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptSellBase.Merge(m, src)
}
func (m *ReceiptSellBase) XXX_Size() int {
	return xxx_messageInfo_ReceiptSellBase.Size(m)
}
func (m *ReceiptSellBase) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptSellBase.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptSellBase proto.InternalMessageInfo

func (m *ReceiptSellBase) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReceiptSellBase) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReceiptSellBase) GetAmountPerBoardlot() string {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return ""
}

func (m *ReceiptSellBase) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *ReceiptSellBase) GetPricePerBoardlot() string {
	if m != nil {
		return m.PricePerBoardlot
	}
	return ""
}

func (m *ReceiptSellBase) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *ReceiptSellBase) GetSoldBoardlot() int64 {
	if m != nil {
		return m.SoldBoardlot
	}
	return 0
}

func (m *ReceiptSellBase) GetStarttime() int64 {
	if m != nil {
		return m.Starttime
	}
	return 0
}

func (m *ReceiptSellBase) GetStoptime() int64 {
	if m != nil {
		return m.Stoptime
	}
	return 0
}

func (m *ReceiptSellBase) GetCrowdfund() bool {
	if m != nil {
		return m.Crowdfund
	}
	return false
}

func (m *ReceiptSellBase) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *ReceiptSellBase) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReceiptSellBase) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *ReceiptSellBase) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReceiptSellBase) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReceiptSellBase) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

type ReceiptTradeBuyMarket struct {
	Base                 *ReceiptBuyBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReceiptTradeBuyMarket) Reset()         { *m = ReceiptTradeBuyMarket{} }
func (m *ReceiptTradeBuyMarket) String() string { return proto.CompactTextString(m) }
func (*ReceiptTradeBuyMarket) ProtoMessage()    {}
func (*ReceiptTradeBuyMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{11}
}

func (m *ReceiptTradeBuyMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTradeBuyMarket.Unmarshal(m, b)
}
func (m *ReceiptTradeBuyMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTradeBuyMarket.Marshal(b, m, deterministic)
}
func (m *ReceiptTradeBuyMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTradeBuyMarket.Merge(m, src)
}
func (m *ReceiptTradeBuyMarket) XXX_Size() int {
	return xxx_messageInfo_ReceiptTradeBuyMarket.Size(m)
}
func (m *ReceiptTradeBuyMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTradeBuyMarket.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTradeBuyMarket proto.InternalMessageInfo

func (m *ReceiptTradeBuyMarket) GetBase() *ReceiptBuyBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptTradeBuyLimit struct {
	Base                 *ReceiptBuyBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReceiptTradeBuyLimit) Reset()         { *m = ReceiptTradeBuyLimit{} }
func (m *ReceiptTradeBuyLimit) String() string { return proto.CompactTextString(m) }
func (*ReceiptTradeBuyLimit) ProtoMessage()    {}
func (*ReceiptTradeBuyLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{12}
}

func (m *ReceiptTradeBuyLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTradeBuyLimit.Unmarshal(m, b)
}
func (m *ReceiptTradeBuyLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTradeBuyLimit.Marshal(b, m, deterministic)
}
func (m *ReceiptTradeBuyLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTradeBuyLimit.Merge(m, src)
}
func (m *ReceiptTradeBuyLimit) XXX_Size() int {
	return xxx_messageInfo_ReceiptTradeBuyLimit.Size(m)
}
func (m *ReceiptTradeBuyLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTradeBuyLimit.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTradeBuyLimit proto.InternalMessageInfo

func (m *ReceiptTradeBuyLimit) GetBase() *ReceiptBuyBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptTradeBuyRevoke struct {
	Base                 *ReceiptBuyBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReceiptTradeBuyRevoke) Reset()         { *m = ReceiptTradeBuyRevoke{} }
func (m *ReceiptTradeBuyRevoke) String() string { return proto.CompactTextString(m) }
func (*ReceiptTradeBuyRevoke) ProtoMessage()    {}
func (*ReceiptTradeBuyRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{13}
}

func (m *ReceiptTradeBuyRevoke) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTradeBuyRevoke.Unmarshal(m, b)
}
func (m *ReceiptTradeBuyRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTradeBuyRevoke.Marshal(b, m, deterministic)
}
func (m *ReceiptTradeBuyRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTradeBuyRevoke.Merge(m, src)
}
func (m *ReceiptTradeBuyRevoke) XXX_Size() int {
	return xxx_messageInfo_ReceiptTradeBuyRevoke.Size(m)
}
func (m *ReceiptTradeBuyRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTradeBuyRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTradeBuyRevoke proto.InternalMessageInfo

func (m *ReceiptTradeBuyRevoke) GetBase() *ReceiptBuyBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptTradeSellLimit struct {
	Base                 *ReceiptSellBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReceiptTradeSellLimit) Reset()         { *m = ReceiptTradeSellLimit{} }
func (m *ReceiptTradeSellLimit) String() string { return proto.CompactTextString(m) }
func (*ReceiptTradeSellLimit) ProtoMessage()    {}
func (*ReceiptTradeSellLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{14}
}

func (m *ReceiptTradeSellLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTradeSellLimit.Unmarshal(m, b)
}
func (m *ReceiptTradeSellLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTradeSellLimit.Marshal(b, m, deterministic)
}
func (m *ReceiptTradeSellLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTradeSellLimit.Merge(m, src)
}
func (m *ReceiptTradeSellLimit) XXX_Size() int {
	return xxx_messageInfo_ReceiptTradeSellLimit.Size(m)
}
func (m *ReceiptTradeSellLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTradeSellLimit.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTradeSellLimit proto.InternalMessageInfo

func (m *ReceiptTradeSellLimit) GetBase() *ReceiptSellBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptSellMarket struct {
	Base                 *ReceiptSellBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReceiptSellMarket) Reset()         { *m = ReceiptSellMarket{} }
func (m *ReceiptSellMarket) String() string { return proto.CompactTextString(m) }
func (*ReceiptSellMarket) ProtoMessage()    {}
func (*ReceiptSellMarket) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{15}
}

func (m *ReceiptSellMarket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptSellMarket.Unmarshal(m, b)
}
func (m *ReceiptSellMarket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptSellMarket.Marshal(b, m, deterministic)
}
func (m *ReceiptSellMarket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptSellMarket.Merge(m, src)
}
func (m *ReceiptSellMarket) XXX_Size() int {
	return xxx_messageInfo_ReceiptSellMarket.Size(m)
}
func (m *ReceiptSellMarket) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptSellMarket.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptSellMarket proto.InternalMessageInfo

func (m *ReceiptSellMarket) GetBase() *ReceiptSellBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReceiptTradeSellRevoke struct {
	Base                 *ReceiptSellBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReceiptTradeSellRevoke) Reset()         { *m = ReceiptTradeSellRevoke{} }
func (m *ReceiptTradeSellRevoke) String() string { return proto.CompactTextString(m) }
func (*ReceiptTradeSellRevoke) ProtoMessage()    {}
func (*ReceiptTradeSellRevoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{16}
}

func (m *ReceiptTradeSellRevoke) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptTradeSellRevoke.Unmarshal(m, b)
}
func (m *ReceiptTradeSellRevoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptTradeSellRevoke.Marshal(b, m, deterministic)
}
func (m *ReceiptTradeSellRevoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptTradeSellRevoke.Merge(m, src)
}
func (m *ReceiptTradeSellRevoke) XXX_Size() int {
	return xxx_messageInfo_ReceiptTradeSellRevoke.Size(m)
}
func (m *ReceiptTradeSellRevoke) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptTradeSellRevoke.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptTradeSellRevoke proto.InternalMessageInfo

func (m *ReceiptTradeSellRevoke) GetBase() *ReceiptSellBase {
	if m != nil {
		return m.Base
	}
	return nil
}

type ReqAddrAssets struct {
	Addr   string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// ??
	Token                []string `protobuf:"bytes,3,rep,name=token,proto3" json:"token,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Count                int32    `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	FromKey              string   `protobuf:"bytes,6,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqAddrAssets) Reset()         { *m = ReqAddrAssets{} }
func (m *ReqAddrAssets) String() string { return proto.CompactTextString(m) }
func (*ReqAddrAssets) ProtoMessage()    {}
func (*ReqAddrAssets) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{17}
}

func (m *ReqAddrAssets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqAddrAssets.Unmarshal(m, b)
}
func (m *ReqAddrAssets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqAddrAssets.Marshal(b, m, deterministic)
}
func (m *ReqAddrAssets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqAddrAssets.Merge(m, src)
}
func (m *ReqAddrAssets) XXX_Size() int {
	return xxx_messageInfo_ReqAddrAssets.Size(m)
}
func (m *ReqAddrAssets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqAddrAssets.DiscardUnknown(m)
}

var xxx_messageInfo_ReqAddrAssets proto.InternalMessageInfo

func (m *ReqAddrAssets) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ReqAddrAssets) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqAddrAssets) GetToken() []string {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ReqAddrAssets) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqAddrAssets) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqAddrAssets) GetFromKey() string {
	if m != nil {
		return m.FromKey
	}
	return ""
}

// 获取Token未完成卖单的交易列表
// 	 fromKey : 第一次传参为空，获取卖单单价最低的列表。 当要获得下一页时，
// 传当前页最后一个；当要获得上一页时， 传当前页第一个。 	 count
// :获取交易列表的个数。 	 direction :查找方式；0，上一页；1，下一页。
// 越靠后的也单价越贵
type ReqTokenSellOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	FromKey              string   `protobuf:"bytes,2,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokenSellOrder) Reset()         { *m = ReqTokenSellOrder{} }
func (m *ReqTokenSellOrder) String() string { return proto.CompactTextString(m) }
func (*ReqTokenSellOrder) ProtoMessage()    {}
func (*ReqTokenSellOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{18}
}

func (m *ReqTokenSellOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokenSellOrder.Unmarshal(m, b)
}
func (m *ReqTokenSellOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokenSellOrder.Marshal(b, m, deterministic)
}
func (m *ReqTokenSellOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokenSellOrder.Merge(m, src)
}
func (m *ReqTokenSellOrder) XXX_Size() int {
	return xxx_messageInfo_ReqTokenSellOrder.Size(m)
}
func (m *ReqTokenSellOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokenSellOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokenSellOrder proto.InternalMessageInfo

func (m *ReqTokenSellOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReqTokenSellOrder) GetFromKey() string {
	if m != nil {
		return m.FromKey
	}
	return ""
}

func (m *ReqTokenSellOrder) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqTokenSellOrder) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqTokenSellOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReqTokenBuyOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	FromKey              string   `protobuf:"bytes,2,opt,name=fromKey,proto3" json:"fromKey,omitempty"`
	Count                int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction            int32    `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Status               int32    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqTokenBuyOrder) Reset()         { *m = ReqTokenBuyOrder{} }
func (m *ReqTokenBuyOrder) String() string { return proto.CompactTextString(m) }
func (*ReqTokenBuyOrder) ProtoMessage()    {}
func (*ReqTokenBuyOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{19}
}

func (m *ReqTokenBuyOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqTokenBuyOrder.Unmarshal(m, b)
}
func (m *ReqTokenBuyOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqTokenBuyOrder.Marshal(b, m, deterministic)
}
func (m *ReqTokenBuyOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqTokenBuyOrder.Merge(m, src)
}
func (m *ReqTokenBuyOrder) XXX_Size() int {
	return xxx_messageInfo_ReqTokenBuyOrder.Size(m)
}
func (m *ReqTokenBuyOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqTokenBuyOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ReqTokenBuyOrder proto.InternalMessageInfo

func (m *ReqTokenBuyOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReqTokenBuyOrder) GetFromKey() string {
	if m != nil {
		return m.FromKey
	}
	return ""
}

func (m *ReqTokenBuyOrder) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqTokenBuyOrder) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqTokenBuyOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ReplyBuyOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	BoughtBoardlot       int64    `protobuf:"varint,7,opt,name=boughtBoardlot,proto3" json:"boughtBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SellID               string   `protobuf:"bytes,10,opt,name=sellID,proto3" json:"sellID,omitempty"`
	TxHash               string   `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	Key                  string   `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	AssetExec            string   `protobuf:"bytes,14,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyBuyOrder) Reset()         { *m = ReplyBuyOrder{} }
func (m *ReplyBuyOrder) String() string { return proto.CompactTextString(m) }
func (*ReplyBuyOrder) ProtoMessage()    {}
func (*ReplyBuyOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{20}
}

func (m *ReplyBuyOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBuyOrder.Unmarshal(m, b)
}
func (m *ReplyBuyOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBuyOrder.Marshal(b, m, deterministic)
}
func (m *ReplyBuyOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBuyOrder.Merge(m, src)
}
func (m *ReplyBuyOrder) XXX_Size() int {
	return xxx_messageInfo_ReplyBuyOrder.Size(m)
}
func (m *ReplyBuyOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBuyOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBuyOrder proto.InternalMessageInfo

func (m *ReplyBuyOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReplyBuyOrder) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReplyBuyOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *ReplyBuyOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *ReplyBuyOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *ReplyBuyOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *ReplyBuyOrder) GetBoughtBoardlot() int64 {
	if m != nil {
		return m.BoughtBoardlot
	}
	return 0
}

func (m *ReplyBuyOrder) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *ReplyBuyOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReplyBuyOrder) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *ReplyBuyOrder) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReplyBuyOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReplyBuyOrder) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplyBuyOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

type ReplySellOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	SoldBoardlot         int64    `protobuf:"varint,7,opt,name=soldBoardlot,proto3" json:"soldBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SellID               string   `protobuf:"bytes,10,opt,name=sellID,proto3" json:"sellID,omitempty"`
	TxHash               string   `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	Key                  string   `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	AssetExec            string   `protobuf:"bytes,14,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplySellOrder) Reset()         { *m = ReplySellOrder{} }
func (m *ReplySellOrder) String() string { return proto.CompactTextString(m) }
func (*ReplySellOrder) ProtoMessage()    {}
func (*ReplySellOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{21}
}

func (m *ReplySellOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplySellOrder.Unmarshal(m, b)
}
func (m *ReplySellOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplySellOrder.Marshal(b, m, deterministic)
}
func (m *ReplySellOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplySellOrder.Merge(m, src)
}
func (m *ReplySellOrder) XXX_Size() int {
	return xxx_messageInfo_ReplySellOrder.Size(m)
}
func (m *ReplySellOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplySellOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ReplySellOrder proto.InternalMessageInfo

func (m *ReplySellOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReplySellOrder) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReplySellOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *ReplySellOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *ReplySellOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *ReplySellOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *ReplySellOrder) GetSoldBoardlot() int64 {
	if m != nil {
		return m.SoldBoardlot
	}
	return 0
}

func (m *ReplySellOrder) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *ReplySellOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReplySellOrder) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *ReplySellOrder) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReplySellOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReplySellOrder) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplySellOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

type ReplySellOrders struct {
	SellOrders           []*ReplySellOrder `protobuf:"bytes,1,rep,name=sellOrders,proto3" json:"sellOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReplySellOrders) Reset()         { *m = ReplySellOrders{} }
func (m *ReplySellOrders) String() string { return proto.CompactTextString(m) }
func (*ReplySellOrders) ProtoMessage()    {}
func (*ReplySellOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{22}
}

func (m *ReplySellOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplySellOrders.Unmarshal(m, b)
}
func (m *ReplySellOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplySellOrders.Marshal(b, m, deterministic)
}
func (m *ReplySellOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplySellOrders.Merge(m, src)
}
func (m *ReplySellOrders) XXX_Size() int {
	return xxx_messageInfo_ReplySellOrders.Size(m)
}
func (m *ReplySellOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplySellOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ReplySellOrders proto.InternalMessageInfo

func (m *ReplySellOrders) GetSellOrders() []*ReplySellOrder {
	if m != nil {
		return m.SellOrders
	}
	return nil
}

type ReplyBuyOrders struct {
	BuyOrders            []*ReplyBuyOrder `protobuf:"bytes,1,rep,name=buyOrders,proto3" json:"buyOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReplyBuyOrders) Reset()         { *m = ReplyBuyOrders{} }
func (m *ReplyBuyOrders) String() string { return proto.CompactTextString(m) }
func (*ReplyBuyOrders) ProtoMessage()    {}
func (*ReplyBuyOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{23}
}

func (m *ReplyBuyOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyBuyOrders.Unmarshal(m, b)
}
func (m *ReplyBuyOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyBuyOrders.Marshal(b, m, deterministic)
}
func (m *ReplyBuyOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyBuyOrders.Merge(m, src)
}
func (m *ReplyBuyOrders) XXX_Size() int {
	return xxx_messageInfo_ReplyBuyOrders.Size(m)
}
func (m *ReplyBuyOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyBuyOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyBuyOrders proto.InternalMessageInfo

func (m *ReplyBuyOrders) GetBuyOrders() []*ReplyBuyOrder {
	if m != nil {
		return m.BuyOrders
	}
	return nil
}

type ReplyTradeOrder struct {
	TokenSymbol          string   `protobuf:"bytes,1,opt,name=tokenSymbol,proto3" json:"tokenSymbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	TradedBoardlot       int64    `protobuf:"varint,7,opt,name=tradedBoardlot,proto3" json:"tradedBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SellID               string   `protobuf:"bytes,10,opt,name=sellID,proto3" json:"sellID,omitempty"`
	TxHash               string   `protobuf:"bytes,11,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	Key                  string   `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	BlockTime            int64    `protobuf:"varint,14,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	IsSellOrder          bool     `protobuf:"varint,15,opt,name=isSellOrder,proto3" json:"isSellOrder,omitempty"`
	AssetExec            string   `protobuf:"bytes,16,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyTradeOrder) Reset()         { *m = ReplyTradeOrder{} }
func (m *ReplyTradeOrder) String() string { return proto.CompactTextString(m) }
func (*ReplyTradeOrder) ProtoMessage()    {}
func (*ReplyTradeOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{24}
}

func (m *ReplyTradeOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTradeOrder.Unmarshal(m, b)
}
func (m *ReplyTradeOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTradeOrder.Marshal(b, m, deterministic)
}
func (m *ReplyTradeOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTradeOrder.Merge(m, src)
}
func (m *ReplyTradeOrder) XXX_Size() int {
	return xxx_messageInfo_ReplyTradeOrder.Size(m)
}
func (m *ReplyTradeOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTradeOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTradeOrder proto.InternalMessageInfo

func (m *ReplyTradeOrder) GetTokenSymbol() string {
	if m != nil {
		return m.TokenSymbol
	}
	return ""
}

func (m *ReplyTradeOrder) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ReplyTradeOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *ReplyTradeOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *ReplyTradeOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *ReplyTradeOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *ReplyTradeOrder) GetTradedBoardlot() int64 {
	if m != nil {
		return m.TradedBoardlot
	}
	return 0
}

func (m *ReplyTradeOrder) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *ReplyTradeOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReplyTradeOrder) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *ReplyTradeOrder) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *ReplyTradeOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ReplyTradeOrder) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ReplyTradeOrder) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *ReplyTradeOrder) GetIsSellOrder() bool {
	if m != nil {
		return m.IsSellOrder
	}
	return false
}

func (m *ReplyTradeOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

type ReplyTradeOrders struct {
	Orders               []*ReplyTradeOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReplyTradeOrders) Reset()         { *m = ReplyTradeOrders{} }
func (m *ReplyTradeOrders) String() string { return proto.CompactTextString(m) }
func (*ReplyTradeOrders) ProtoMessage()    {}
func (*ReplyTradeOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{25}
}

func (m *ReplyTradeOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTradeOrders.Unmarshal(m, b)
}
func (m *ReplyTradeOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTradeOrders.Marshal(b, m, deterministic)
}
func (m *ReplyTradeOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTradeOrders.Merge(m, src)
}
func (m *ReplyTradeOrders) XXX_Size() int {
	return xxx_messageInfo_ReplyTradeOrders.Size(m)
}
func (m *ReplyTradeOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTradeOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTradeOrders proto.InternalMessageInfo

func (m *ReplyTradeOrders) GetOrders() []*ReplyTradeOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

type ReqSellToken struct {
	Sell                 *TradeForSell `protobuf:"bytes,1,opt,name=sell,proto3" json:"sell,omitempty"`
	Owner                string        `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReqSellToken) Reset()         { *m = ReqSellToken{} }
func (m *ReqSellToken) String() string { return proto.CompactTextString(m) }
func (*ReqSellToken) ProtoMessage()    {}
func (*ReqSellToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{26}
}

func (m *ReqSellToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqSellToken.Unmarshal(m, b)
}
func (m *ReqSellToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqSellToken.Marshal(b, m, deterministic)
}
func (m *ReqSellToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqSellToken.Merge(m, src)
}
func (m *ReqSellToken) XXX_Size() int {
	return xxx_messageInfo_ReqSellToken.Size(m)
}
func (m *ReqSellToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqSellToken.DiscardUnknown(m)
}

var xxx_messageInfo_ReqSellToken proto.InternalMessageInfo

func (m *ReqSellToken) GetSell() *TradeForSell {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *ReqSellToken) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ReqRevokeSell struct {
	Revoke               *TradeForRevokeSell `protobuf:"bytes,1,opt,name=revoke,proto3" json:"revoke,omitempty"`
	Owner                string              `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReqRevokeSell) Reset()         { *m = ReqRevokeSell{} }
func (m *ReqRevokeSell) String() string { return proto.CompactTextString(m) }
func (*ReqRevokeSell) ProtoMessage()    {}
func (*ReqRevokeSell) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{27}
}

func (m *ReqRevokeSell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqRevokeSell.Unmarshal(m, b)
}
func (m *ReqRevokeSell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqRevokeSell.Marshal(b, m, deterministic)
}
func (m *ReqRevokeSell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqRevokeSell.Merge(m, src)
}
func (m *ReqRevokeSell) XXX_Size() int {
	return xxx_messageInfo_ReqRevokeSell.Size(m)
}
func (m *ReqRevokeSell) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqRevokeSell.DiscardUnknown(m)
}

var xxx_messageInfo_ReqRevokeSell proto.InternalMessageInfo

func (m *ReqRevokeSell) GetRevoke() *TradeForRevokeSell {
	if m != nil {
		return m.Revoke
	}
	return nil
}

func (m *ReqRevokeSell) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type ReqBuyToken struct {
	Buy                  *TradeForBuy `protobuf:"bytes,1,opt,name=buy,proto3" json:"buy,omitempty"`
	Buyer                string       `protobuf:"bytes,2,opt,name=buyer,proto3" json:"buyer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReqBuyToken) Reset()         { *m = ReqBuyToken{} }
func (m *ReqBuyToken) String() string { return proto.CompactTextString(m) }
func (*ReqBuyToken) ProtoMessage()    {}
func (*ReqBuyToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{28}
}

func (m *ReqBuyToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqBuyToken.Unmarshal(m, b)
}
func (m *ReqBuyToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqBuyToken.Marshal(b, m, deterministic)
}
func (m *ReqBuyToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqBuyToken.Merge(m, src)
}
func (m *ReqBuyToken) XXX_Size() int {
	return xxx_messageInfo_ReqBuyToken.Size(m)
}
func (m *ReqBuyToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqBuyToken.DiscardUnknown(m)
}

var xxx_messageInfo_ReqBuyToken proto.InternalMessageInfo

func (m *ReqBuyToken) GetBuy() *TradeForBuy {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *ReqBuyToken) GetBuyer() string {
	if m != nil {
		return m.Buyer
	}
	return ""
}

type LocalOrder struct {
	AssetSymbol          string   `protobuf:"bytes,1,opt,name=assetSymbol,proto3" json:"assetSymbol,omitempty"`
	Owner                string   `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	AmountPerBoardlot    int64    `protobuf:"varint,3,opt,name=amountPerBoardlot,proto3" json:"amountPerBoardlot,omitempty"`
	MinBoardlot          int64    `protobuf:"varint,4,opt,name=minBoardlot,proto3" json:"minBoardlot,omitempty"`
	PricePerBoardlot     int64    `protobuf:"varint,5,opt,name=pricePerBoardlot,proto3" json:"pricePerBoardlot,omitempty"`
	TotalBoardlot        int64    `protobuf:"varint,6,opt,name=totalBoardlot,proto3" json:"totalBoardlot,omitempty"`
	TradedBoardlot       int64    `protobuf:"varint,7,opt,name=tradedBoardlot,proto3" json:"tradedBoardlot,omitempty"`
	BuyID                string   `protobuf:"bytes,8,opt,name=buyID,proto3" json:"buyID,omitempty"`
	Status               int32    `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	SellID               string   `protobuf:"bytes,10,opt,name=sellID,proto3" json:"sellID,omitempty"`
	TxHash               []string `protobuf:"bytes,11,rep,name=txHash,proto3" json:"txHash,omitempty"`
	Height               int64    `protobuf:"varint,12,opt,name=height,proto3" json:"height,omitempty"`
	Key                  string   `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	BlockTime            int64    `protobuf:"varint,14,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	IsSellOrder          bool     `protobuf:"varint,15,opt,name=isSellOrder,proto3" json:"isSellOrder,omitempty"`
	AssetExec            string   `protobuf:"bytes,16,opt,name=assetExec,proto3" json:"assetExec,omitempty"`
	TxIndex              string   `protobuf:"bytes,17,opt,name=txIndex,proto3" json:"txIndex,omitempty"`
	IsFinished           bool     `protobuf:"varint,18,opt,name=isFinished,proto3" json:"isFinished,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalOrder) Reset()         { *m = LocalOrder{} }
func (m *LocalOrder) String() string { return proto.CompactTextString(m) }
func (*LocalOrder) ProtoMessage()    {}
func (*LocalOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{29}
}

func (m *LocalOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalOrder.Unmarshal(m, b)
}
func (m *LocalOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalOrder.Marshal(b, m, deterministic)
}
func (m *LocalOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalOrder.Merge(m, src)
}
func (m *LocalOrder) XXX_Size() int {
	return xxx_messageInfo_LocalOrder.Size(m)
}
func (m *LocalOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalOrder.DiscardUnknown(m)
}

var xxx_messageInfo_LocalOrder proto.InternalMessageInfo

func (m *LocalOrder) GetAssetSymbol() string {
	if m != nil {
		return m.AssetSymbol
	}
	return ""
}

func (m *LocalOrder) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *LocalOrder) GetAmountPerBoardlot() int64 {
	if m != nil {
		return m.AmountPerBoardlot
	}
	return 0
}

func (m *LocalOrder) GetMinBoardlot() int64 {
	if m != nil {
		return m.MinBoardlot
	}
	return 0
}

func (m *LocalOrder) GetPricePerBoardlot() int64 {
	if m != nil {
		return m.PricePerBoardlot
	}
	return 0
}

func (m *LocalOrder) GetTotalBoardlot() int64 {
	if m != nil {
		return m.TotalBoardlot
	}
	return 0
}

func (m *LocalOrder) GetTradedBoardlot() int64 {
	if m != nil {
		return m.TradedBoardlot
	}
	return 0
}

func (m *LocalOrder) GetBuyID() string {
	if m != nil {
		return m.BuyID
	}
	return ""
}

func (m *LocalOrder) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *LocalOrder) GetSellID() string {
	if m != nil {
		return m.SellID
	}
	return ""
}

func (m *LocalOrder) GetTxHash() []string {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *LocalOrder) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *LocalOrder) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LocalOrder) GetBlockTime() int64 {
	if m != nil {
		return m.BlockTime
	}
	return 0
}

func (m *LocalOrder) GetIsSellOrder() bool {
	if m != nil {
		return m.IsSellOrder
	}
	return false
}

func (m *LocalOrder) GetAssetExec() string {
	if m != nil {
		return m.AssetExec
	}
	return ""
}

func (m *LocalOrder) GetTxIndex() string {
	if m != nil {
		return m.TxIndex
	}
	return ""
}

func (m *LocalOrder) GetIsFinished() bool {
	if m != nil {
		return m.IsFinished
	}
	return false
}

func init() {
	proto.RegisterType((*Trade)(nil), "types.Trade")
	proto.RegisterType((*TradeForSell)(nil), "types.TradeForSell")
	proto.RegisterType((*TradeForBuy)(nil), "types.TradeForBuy")
	proto.RegisterType((*TradeForRevokeSell)(nil), "types.TradeForRevokeSell")
	proto.RegisterType((*TradeForBuyLimit)(nil), "types.TradeForBuyLimit")
	proto.RegisterType((*TradeForSellMarket)(nil), "types.TradeForSellMarket")
	proto.RegisterType((*TradeForRevokeBuy)(nil), "types.TradeForRevokeBuy")
	proto.RegisterType((*SellOrder)(nil), "types.SellOrder")
	proto.RegisterType((*BuyLimitOrder)(nil), "types.BuyLimitOrder")
	proto.RegisterType((*ReceiptBuyBase)(nil), "types.ReceiptBuyBase")
	proto.RegisterType((*ReceiptSellBase)(nil), "types.ReceiptSellBase")
	proto.RegisterType((*ReceiptTradeBuyMarket)(nil), "types.ReceiptTradeBuyMarket")
	proto.RegisterType((*ReceiptTradeBuyLimit)(nil), "types.ReceiptTradeBuyLimit")
	proto.RegisterType((*ReceiptTradeBuyRevoke)(nil), "types.ReceiptTradeBuyRevoke")
	proto.RegisterType((*ReceiptTradeSellLimit)(nil), "types.ReceiptTradeSellLimit")
	proto.RegisterType((*ReceiptSellMarket)(nil), "types.ReceiptSellMarket")
	proto.RegisterType((*ReceiptTradeSellRevoke)(nil), "types.ReceiptTradeSellRevoke")
	proto.RegisterType((*ReqAddrAssets)(nil), "types.ReqAddrAssets")
	proto.RegisterType((*ReqTokenSellOrder)(nil), "types.ReqTokenSellOrder")
	proto.RegisterType((*ReqTokenBuyOrder)(nil), "types.ReqTokenBuyOrder")
	proto.RegisterType((*ReplyBuyOrder)(nil), "types.ReplyBuyOrder")
	proto.RegisterType((*ReplySellOrder)(nil), "types.ReplySellOrder")
	proto.RegisterType((*ReplySellOrders)(nil), "types.ReplySellOrders")
	proto.RegisterType((*ReplyBuyOrders)(nil), "types.ReplyBuyOrders")
	proto.RegisterType((*ReplyTradeOrder)(nil), "types.ReplyTradeOrder")
	proto.RegisterType((*ReplyTradeOrders)(nil), "types.ReplyTradeOrders")
	proto.RegisterType((*ReqSellToken)(nil), "types.ReqSellToken")
	proto.RegisterType((*ReqRevokeSell)(nil), "types.ReqRevokeSell")
	proto.RegisterType((*ReqBuyToken)(nil), "types.ReqBuyToken")
	proto.RegisterType((*LocalOrder)(nil), "types.LocalOrder")
}

func init() { proto.RegisterFile("trade.proto", fileDescriptor_ee944bd90e8a0312) }

var fileDescriptor_ee944bd90e8a0312 = []byte{
	// 1306 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x59, 0x41, 0x6f, 0xe3, 0x44,
	0x14, 0x6e, 0xe2, 0x38, 0x8d, 0x5f, 0x9a, 0x34, 0x9d, 0xcd, 0x16, 0x6f, 0x85, 0x50, 0x64, 0xad,
	0xa0, 0xbb, 0x5a, 0x55, 0xa2, 0xab, 0x95, 0x90, 0x40, 0xa0, 0xa6, 0xa5, 0xa4, 0xd0, 0x15, 0x68,
	0x1a, 0x24, 0xae, 0x4e, 0x3c, 0xdb, 0x5a, 0x75, 0xec, 0xd4, 0x1e, 0x6f, 0xe3, 0xbf, 0x02, 0x07,
	0x6e, 0x5c, 0x90, 0x38, 0x21, 0xf1, 0x17, 0x90, 0xf8, 0x3b, 0x7b, 0x59, 0x71, 0x41, 0x33, 0x9e,
	0xd8, 0x63, 0xc7, 0xee, 0x26, 0xd2, 0x1e, 0xba, 0x5d, 0x6e, 0x99, 0x37, 0x6f, 0xbe, 0x79, 0xfe,
	0xbe, 0xf7, 0x66, 0x9e, 0x1d, 0x68, 0x52, 0xdf, 0xb4, 0xc8, 0xde, 0xd4, 0xf7, 0xa8, 0x87, 0x54,
	0x1a, 0x4d, 0x49, 0xb0, 0xb3, 0x45, 0x7d, 0xd3, 0x0d, 0xcc, 0x31, 0xb5, 0x3d, 0x37, 0x9e, 0x31,
	0x5e, 0x55, 0x41, 0x1d, 0x32, 0x4f, 0xf4, 0x14, 0xb4, 0x80, 0x38, 0xce, 0xa9, 0x3d, 0xb1, 0xa9,
	0x5e, 0xe9, 0x55, 0x76, 0x9b, 0xfb, 0xf7, 0xf6, 0xf8, 0xba, 0x3d, 0xee, 0x70, 0xec, 0xf9, 0x67,
	0xc4, 0x71, 0x06, 0x6b, 0x38, 0xf5, 0x43, 0xfb, 0xa0, 0x8d, 0xc2, 0xe8, 0xb9, 0xe9, 0x5f, 0x12,
	0xaa, 0x57, 0xf9, 0x22, 0x94, 0x5b, 0xd4, 0x0f, 0x23, 0xb6, 0x26, 0x71, 0x43, 0x9f, 0x03, 0xf8,
	0xe4, 0xa5, 0x77, 0x49, 0x18, 0x9c, 0xae, 0xf0, 0x45, 0x0f, 0x72, 0x8b, 0x70, 0xe2, 0x30, 0x58,
	0xc3, 0x92, 0x3b, 0x7a, 0x06, 0x8d, 0x51, 0x18, 0xc5, 0x41, 0xaa, 0x7c, 0xe9, 0x07, 0x8b, 0xfb,
	0xf1, 0xe9, 0xc1, 0x1a, 0x4e, 0x5c, 0xd9, 0x9e, 0x2c, 0x68, 0x11, 0x68, 0xbd, 0x70, 0xcf, 0xb3,
	0xc4, 0x81, 0xed, 0x99, 0xba, 0xa3, 0xcf, 0x40, 0x8b, 0x23, 0xe8, 0x87, 0x91, 0xbe, 0xce, 0xd7,
	0xea, 0x85, 0xf1, 0x8a, 0x47, 0x4d, 0x9c, 0x51, 0x1b, 0xaa, 0x34, 0xd2, 0x6b, 0xbd, 0xca, 0xae,
	0x8a, 0xab, 0x34, 0xea, 0xaf, 0x83, 0xfa, 0xd2, 0x74, 0x42, 0x62, 0xfc, 0x5d, 0x85, 0x0d, 0x79,
	0x5f, 0xd4, 0x83, 0x26, 0xf5, 0x2e, 0x89, 0x7b, 0x16, 0x4d, 0x46, 0x9e, 0xc3, 0xf9, 0xd7, 0xb0,
	0x6c, 0x42, 0x4f, 0x60, 0xcb, 0x9c, 0x78, 0xa1, 0x4b, 0x7f, 0x20, 0x7e, 0xdf, 0x33, 0x7d, 0xcb,
	0xf1, 0x62, 0xca, 0x15, 0xbc, 0x38, 0xc1, 0xf0, 0x26, 0xb6, 0x9b, 0xf8, 0x29, 0xdc, 0x4f, 0x36,
	0xa1, 0xc7, 0xd0, 0x99, 0xfa, 0xf6, 0x98, 0xc8, 0x70, 0x35, 0xee, 0xb6, 0x60, 0x47, 0x0f, 0xa1,
	0x45, 0x3d, 0x6a, 0x3a, 0x89, 0xa3, 0xca, 0x1d, 0xb3, 0x46, 0xf4, 0x21, 0x68, 0x01, 0x35, 0x7d,
	0x4a, 0xed, 0x09, 0xe1, 0x1c, 0x2b, 0x38, 0x35, 0xa0, 0x1d, 0x68, 0x04, 0xd4, 0x9b, 0xf2, 0xc9,
	0x75, 0x3e, 0x99, 0x8c, 0xd9, 0xca, 0xb1, 0xef, 0x5d, 0x5b, 0x2f, 0x42, 0xd7, 0xd2, 0x1b, 0xbd,
	0xca, 0x6e, 0x03, 0xa7, 0x06, 0x36, 0x6b, 0x06, 0x01, 0xa1, 0x5f, 0xcf, 0xc8, 0x58, 0xd7, 0x38,
	0x33, 0xa9, 0xc1, 0xf8, 0x06, 0x9a, 0x92, 0xf4, 0x68, 0x1b, 0xea, 0x4c, 0xba, 0x93, 0x23, 0xc1,
	0xa1, 0x18, 0x31, 0x42, 0x46, 0x22, 0xd0, 0x43, 0x77, 0x4e, 0x9c, 0x6c, 0x32, 0x9e, 0x00, 0x5a,
	0x4c, 0xbf, 0x32, 0x3c, 0xe3, 0x55, 0x05, 0x3a, 0xf9, 0x94, 0xbb, 0x2b, 0x2a, 0xa6, 0x6c, 0xd7,
	0xf3, 0x6c, 0x9f, 0xa6, 0x24, 0xa5, 0xf5, 0x82, 0xba, 0xa0, 0x8e, 0xc2, 0x28, 0xe1, 0x28, 0x1e,
	0x2c, 0x41, 0xf9, 0x23, 0xd8, 0x5a, 0xa8, 0xa0, 0x62, 0x30, 0xe3, 0x1f, 0x05, 0x34, 0xb6, 0xe3,
	0xf7, 0xbe, 0x45, 0xfc, 0x25, 0x88, 0xd6, 0x61, 0xdd, 0xb4, 0x2c, 0x9f, 0x04, 0x01, 0xdf, 0x58,
	0xc3, 0xf3, 0x61, 0xb1, 0x04, 0xca, 0x92, 0x12, 0xd4, 0x96, 0x93, 0x40, 0x5d, 0x56, 0x82, 0x7a,
	0x91, 0x04, 0x06, 0x6c, 0x04, 0x9e, 0x63, 0x25, 0x4e, 0x71, 0xb9, 0x64, 0x6c, 0xd9, 0x62, 0x6b,
	0xdc, 0x54, 0x6c, 0xda, 0x4d, 0xc5, 0x06, 0xf9, 0x62, 0x4b, 0xf3, 0xbd, 0x99, 0xa9, 0x1f, 0x66,
	0xa7, 0x26, 0x0d, 0x03, 0x7d, 0x83, 0x1f, 0x67, 0x62, 0xc4, 0xec, 0x17, 0xc4, 0x3e, 0xbf, 0xa0,
	0x7a, 0x8b, 0xef, 0x23, 0x46, 0xd9, 0x34, 0x6a, 0xe7, 0xd3, 0xe8, 0x75, 0x15, 0x5a, 0xf3, 0xaa,
	0x79, 0x1f, 0x14, 0xfd, 0x18, 0xda, 0x23, 0x2f, 0x3c, 0xbf, 0xa0, 0x39, 0x4d, 0x73, 0xd6, 0x34,
	0xf7, 0x1b, 0x72, 0x21, 0xa5, 0xdc, 0x6b, 0x25, 0xdc, 0x43, 0x39, 0xf7, 0xcd, 0x3c, 0xf7, 0xbf,
	0x29, 0xd0, 0xc6, 0x64, 0x4c, 0xec, 0x29, 0xed, 0x87, 0x51, 0xdf, 0x0c, 0xc8, 0x12, 0xe4, 0x77,
	0x41, 0xf5, 0xae, 0x5d, 0xe2, 0x0b, 0xea, 0xe3, 0x41, 0x39, 0xf1, 0xda, 0xdb, 0x25, 0x5e, 0xbb,
	0x15, 0xc4, 0x6b, 0x32, 0xf1, 0xa2, 0x48, 0x20, 0x5f, 0x24, 0x74, 0x36, 0x30, 0x83, 0x8b, 0x79,
	0xf1, 0xc4, 0x23, 0x49, 0xa8, 0x8d, 0x72, 0xa1, 0x5a, 0x79, 0xa1, 0xfe, 0x55, 0x60, 0x53, 0x08,
	0xc5, 0x4e, 0xbe, 0x3b, 0xae, 0xd4, 0xed, 0x3f, 0xf4, 0x52, 0xfd, 0x93, 0x6c, 0x69, 0xe5, 0xb2,
	0x45, 0xa8, 0xdf, 0x2e, 0x51, 0x7f, 0xb3, 0x5c, 0xfd, 0x4e, 0x5e, 0xfd, 0x3e, 0xdc, 0x17, 0xe2,
	0xf3, 0x2b, 0xb2, 0x9f, 0xf4, 0xcf, 0x8f, 0xa0, 0x36, 0x32, 0x03, 0x22, 0x7a, 0xf4, 0xfb, 0xa2,
	0x13, 0xcd, 0x56, 0x34, 0xe6, 0x2e, 0xc6, 0x01, 0x74, 0x73, 0x18, 0x71, 0x9f, 0xb2, 0x02, 0xc4,
	0x62, 0x18, 0xf1, 0x4d, 0xbd, 0x0a, 0xc6, 0x61, 0x16, 0xe3, 0x2c, 0x79, 0x7d, 0x78, 0x9c, 0xc1,
	0xd8, 0xce, 0x62, 0xcc, 0x73, 0x5e, 0x80, 0x7c, 0x05, 0x5b, 0xd2, 0x84, 0xe0, 0x62, 0x15, 0x80,
	0x23, 0xd8, 0xce, 0x47, 0x21, 0x1e, 0x65, 0x15, 0x94, 0x5f, 0x2b, 0xd0, 0xc2, 0xe4, 0xea, 0xc0,
	0xb2, 0xfc, 0x03, 0xa6, 0x55, 0x80, 0x10, 0xd4, 0xd8, 0x45, 0x24, 0x6a, 0x91, 0xff, 0x96, 0x12,
	0xa7, 0x9a, 0x39, 0xb1, 0xbb, 0xa0, 0xf2, 0x5a, 0xd5, 0x95, 0x9e, 0xc2, 0x12, 0x87, 0x0f, 0x58,
	0x22, 0x58, 0xb6, 0x4f, 0xf8, 0x7b, 0x99, 0x78, 0x5b, 0x48, 0x0d, 0x6c, 0xcd, 0x98, 0x15, 0x28,
	0xaf, 0x2f, 0x15, 0xc7, 0x03, 0x76, 0x1b, 0xbe, 0xf0, 0xbd, 0xc9, 0x77, 0x24, 0x12, 0x4d, 0xda,
	0x7c, 0x68, 0xfc, 0x52, 0x61, 0x4c, 0x5d, 0x0d, 0xf9, 0x99, 0xb0, 0x5a, 0xc7, 0x34, 0x47, 0xac,
	0x66, 0x10, 0xd3, 0x08, 0x14, 0x39, 0x82, 0x9b, 0xa3, 0x4e, 0x19, 0x50, 0x65, 0x06, 0x8c, 0x9f,
	0x2b, 0xd0, 0x99, 0x47, 0xd7, 0x0f, 0xa3, 0xdb, 0x15, 0xdc, 0x5f, 0x0a, 0x13, 0x77, 0xea, 0x44,
	0x2b, 0x44, 0xb6, 0xe2, 0x79, 0x7b, 0xf7, 0x5b, 0x92, 0xb7, 0x72, 0x33, 0x76, 0x40, 0xb9, 0x24,
	0x91, 0x38, 0x5f, 0xd9, 0xcf, 0x37, 0x34, 0x94, 0x7f, 0xf2, 0xa6, 0x66, 0xea, 0x44, 0xab, 0x64,
	0xfc, 0xbb, 0x2a, 0xdd, 0x32, 0x57, 0xe5, 0xbb, 0x21, 0xdb, 0x80, 0x75, 0x38, 0xb2, 0x6a, 0x01,
	0x7a, 0x16, 0x7f, 0xaa, 0x89, 0x47, 0x7a, 0xa5, 0xa7, 0x64, 0x6e, 0x17, 0xd9, 0x17, 0x4b, 0x8e,
	0xc6, 0x91, 0xd0, 0x7f, 0x5e, 0xb9, 0x81, 0xf8, 0x36, 0x95, 0xc1, 0xe9, 0xca, 0x38, 0x73, 0x4f,
	0x9c, 0xba, 0x19, 0xaf, 0x15, 0x11, 0x10, 0xbf, 0x22, 0xde, 0x83, 0x23, 0x80, 0x7f, 0x25, 0xcc,
	0x67, 0x52, 0xce, 0x7a, 0x9b, 0x72, 0x69, 0xe4, 0x78, 0xe3, 0xcb, 0x21, 0xeb, 0xf0, 0xda, 0x71,
	0xfb, 0x97, 0x18, 0x18, 0x83, 0x76, 0x90, 0x24, 0x07, 0xef, 0xb5, 0x1a, 0x58, 0x36, 0xbd, 0xb1,
	0xe1, 0xea, 0xe4, 0xa4, 0x0f, 0xd0, 0x1e, 0xd4, 0x3d, 0x39, 0x81, 0xb6, 0xe5, 0x04, 0x4a, 0x1d,
	0xb1, 0xf0, 0x32, 0x9e, 0xc3, 0x06, 0x26, 0x57, 0x6c, 0x47, 0x7e, 0xc1, 0xa1, 0x4f, 0xa0, 0xc6,
	0x9e, 0xfe, 0x86, 0xef, 0xa9, 0x98, 0x3b, 0x14, 0xa7, 0x90, 0xf1, 0x13, 0xef, 0x35, 0xa4, 0xaf,
	0x51, 0x9f, 0x42, 0x3d, 0xfe, 0xba, 0x28, 0x10, 0xcb, 0xbf, 0x9b, 0x62, 0xe1, 0x58, 0x82, 0x7c,
	0x02, 0x4d, 0x4c, 0xae, 0xfa, 0x61, 0x14, 0xc7, 0xf9, 0x10, 0x94, 0x51, 0x18, 0x09, 0xd0, 0x82,
	0x2f, 0xb8, 0x98, 0x4d, 0x8b, 0x3c, 0x48, 0xa1, 0xf8, 0xc0, 0xf8, 0xa3, 0x06, 0x70, 0xea, 0x8d,
	0xcd, 0xf4, 0xd8, 0xe5, 0x9c, 0x66, 0xcb, 0x45, 0x32, 0xfd, 0x5f, 0x2e, 0x2b, 0x97, 0x8b, 0x72,
	0xfb, 0xca, 0x85, 0x75, 0x64, 0x74, 0x76, 0xe2, 0x5a, 0x64, 0xa6, 0x6f, 0xc5, 0x1d, 0x99, 0x18,
	0xa2, 0x8f, 0x00, 0xec, 0xe0, 0xd8, 0x76, 0xed, 0xe0, 0x82, 0x58, 0x3a, 0xe2, 0xc0, 0x92, 0x65,
	0xff, 0x77, 0x05, 0x54, 0x4e, 0x19, 0xfa, 0x12, 0xba, 0x87, 0x3e, 0x31, 0x29, 0xc1, 0xe6, 0x75,
	0xd2, 0x94, 0x0f, 0x67, 0xa8, 0xa8, 0x50, 0x76, 0x36, 0x85, 0xf1, 0x47, 0x37, 0xb0, 0xcf, 0xdd,
	0xe1, 0xcc, 0x58, 0x43, 0x5f, 0xc0, 0xbd, 0xec, 0x7a, 0x96, 0xd0, 0x33, 0x54, 0x90, 0xc0, 0x45,
	0xab, 0x8f, 0x61, 0x3b, 0xbb, 0x3a, 0xae, 0x9e, 0xe1, 0x0c, 0x95, 0x97, 0x55, 0x31, 0x8e, 0xbe,
	0x10, 0x05, 0x7f, 0xbf, 0x19, 0xce, 0x50, 0xd9, 0xbf, 0x13, 0x45, 0x38, 0xdf, 0xc2, 0xce, 0x22,
	0x1b, 0xf1, 0x8b, 0x4e, 0x41, 0x4c, 0xe9, 0x64, 0x11, 0xd6, 0x00, 0x1e, 0x14, 0x3d, 0x5b, 0xcc,
	0x4f, 0xe9, 0xbf, 0x17, 0x05, 0x48, 0xa3, 0x3a, 0xff, 0xa3, 0xe8, 0xe9, 0x7f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xe7, 0xe7, 0x49, 0x74, 0x51, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TradeClient is the client API for Trade service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TradeClient interface {
	CreateRawTradeSellTx(ctx context.Context, in *TradeForSell, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateRawTradeBuyTx(ctx context.Context, in *TradeForBuy, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateRawTradeRevokeTx(ctx context.Context, in *TradeForRevokeSell, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateRawTradeBuyLimitTx(ctx context.Context, in *TradeForBuyLimit, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateRawTradeSellMarketTx(ctx context.Context, in *TradeForSellMarket, opts ...grpc.CallOption) (*types.UnsignTx, error)
	CreateRawTradeRevokeBuyTx(ctx context.Context, in *TradeForRevokeBuy, opts ...grpc.CallOption) (*types.UnsignTx, error)
}

type tradeClient struct {
	cc *grpc.ClientConn
}

func NewTradeClient(cc *grpc.ClientConn) TradeClient {
	return &tradeClient{cc}
}

func (c *tradeClient) CreateRawTradeSellTx(ctx context.Context, in *TradeForSell, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeSellTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeClient) CreateRawTradeBuyTx(ctx context.Context, in *TradeForBuy, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeBuyTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeClient) CreateRawTradeRevokeTx(ctx context.Context, in *TradeForRevokeSell, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeRevokeTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeClient) CreateRawTradeBuyLimitTx(ctx context.Context, in *TradeForBuyLimit, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeBuyLimitTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeClient) CreateRawTradeSellMarketTx(ctx context.Context, in *TradeForSellMarket, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeSellMarketTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tradeClient) CreateRawTradeRevokeBuyTx(ctx context.Context, in *TradeForRevokeBuy, opts ...grpc.CallOption) (*types.UnsignTx, error) {
	out := new(types.UnsignTx)
	err := c.cc.Invoke(ctx, "/types.trade/CreateRawTradeRevokeBuyTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TradeServer is the server API for Trade service.
type TradeServer interface {
	CreateRawTradeSellTx(context.Context, *TradeForSell) (*types.UnsignTx, error)
	CreateRawTradeBuyTx(context.Context, *TradeForBuy) (*types.UnsignTx, error)
	CreateRawTradeRevokeTx(context.Context, *TradeForRevokeSell) (*types.UnsignTx, error)
	CreateRawTradeBuyLimitTx(context.Context, *TradeForBuyLimit) (*types.UnsignTx, error)
	CreateRawTradeSellMarketTx(context.Context, *TradeForSellMarket) (*types.UnsignTx, error)
	CreateRawTradeRevokeBuyTx(context.Context, *TradeForRevokeBuy) (*types.UnsignTx, error)
}

func RegisterTradeServer(s *grpc.Server, srv TradeServer) {
	s.RegisterService(&_Trade_serviceDesc, srv)
}

func _Trade_CreateRawTradeSellTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForSell)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeSellTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeSellTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeSellTx(ctx, req.(*TradeForSell))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trade_CreateRawTradeBuyTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeBuyTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeBuyTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeBuyTx(ctx, req.(*TradeForBuy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trade_CreateRawTradeRevokeTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForRevokeSell)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeRevokeTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeRevokeTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeRevokeTx(ctx, req.(*TradeForRevokeSell))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trade_CreateRawTradeBuyLimitTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForBuyLimit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeBuyLimitTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeBuyLimitTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeBuyLimitTx(ctx, req.(*TradeForBuyLimit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trade_CreateRawTradeSellMarketTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForSellMarket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeSellMarketTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeSellMarketTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeSellMarketTx(ctx, req.(*TradeForSellMarket))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trade_CreateRawTradeRevokeBuyTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TradeForRevokeBuy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TradeServer).CreateRawTradeRevokeBuyTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.trade/CreateRawTradeRevokeBuyTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TradeServer).CreateRawTradeRevokeBuyTx(ctx, req.(*TradeForRevokeBuy))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trade_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.trade",
	HandlerType: (*TradeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRawTradeSellTx",
			Handler:    _Trade_CreateRawTradeSellTx_Handler,
		},
		{
			MethodName: "CreateRawTradeBuyTx",
			Handler:    _Trade_CreateRawTradeBuyTx_Handler,
		},
		{
			MethodName: "CreateRawTradeRevokeTx",
			Handler:    _Trade_CreateRawTradeRevokeTx_Handler,
		},
		{
			MethodName: "CreateRawTradeBuyLimitTx",
			Handler:    _Trade_CreateRawTradeBuyLimitTx_Handler,
		},
		{
			MethodName: "CreateRawTradeSellMarketTx",
			Handler:    _Trade_CreateRawTradeSellMarketTx_Handler,
		},
		{
			MethodName: "CreateRawTradeRevokeBuyTx",
			Handler:    _Trade_CreateRawTradeRevokeBuyTx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trade.proto",
}
