// Code generated by protoc-gen-go. DO NOT EDIT.
// source: project.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AutonomyProposalProject struct {
	PropProject *ProposalProject `protobuf:"bytes,1,opt,name=propProject" json:"propProject,omitempty"`
	// 投票该提案的规则
	CurRule *RuleConfig `protobuf:"bytes,2,opt,name=CurRule" json:"CurRule,omitempty"`
	// 投票该提案的董事会成员
	Boards []string `protobuf:"bytes,3,rep,name=boards" json:"boards,omitempty"`
	// 董事会投票结果
	BoardVoteRes *VoteResult `protobuf:"bytes,4,opt,name=boardVoteRes" json:"boardVoteRes,omitempty"`
	// 公示投票
	PubVote *PublicVote `protobuf:"bytes,5,opt,name=pubVote" json:"pubVote,omitempty"`
	// 状态
	Status  int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	Address string `protobuf:"bytes,7,opt,name=address" json:"address,omitempty"`
	Height  int64  `protobuf:"varint,8,opt,name=height" json:"height,omitempty"`
	Index   int32  `protobuf:"varint,9,opt,name=index" json:"index,omitempty"`
}

func (m *AutonomyProposalProject) Reset()                    { *m = AutonomyProposalProject{} }
func (m *AutonomyProposalProject) String() string            { return proto.CompactTextString(m) }
func (*AutonomyProposalProject) ProtoMessage()               {}
func (*AutonomyProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *AutonomyProposalProject) GetPropProject() *ProposalProject {
	if m != nil {
		return m.PropProject
	}
	return nil
}

func (m *AutonomyProposalProject) GetCurRule() *RuleConfig {
	if m != nil {
		return m.CurRule
	}
	return nil
}

func (m *AutonomyProposalProject) GetBoards() []string {
	if m != nil {
		return m.Boards
	}
	return nil
}

func (m *AutonomyProposalProject) GetBoardVoteRes() *VoteResult {
	if m != nil {
		return m.BoardVoteRes
	}
	return nil
}

func (m *AutonomyProposalProject) GetPubVote() *PublicVote {
	if m != nil {
		return m.PubVote
	}
	return nil
}

func (m *AutonomyProposalProject) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AutonomyProposalProject) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AutonomyProposalProject) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *AutonomyProposalProject) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ProposalProject struct {
	// 提案时间
	Year  int32 `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month int32 `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,3,opt,name=day" json:"day,omitempty"`
	// 项目相关
	FirstStage   string `protobuf:"bytes,4,opt,name=firstStage" json:"firstStage,omitempty"`
	LastStage    string `protobuf:"bytes,5,opt,name=lastStage" json:"lastStage,omitempty"`
	Production   string `protobuf:"bytes,6,opt,name=production" json:"production,omitempty"`
	Description  string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	Contractor   string `protobuf:"bytes,8,opt,name=contractor" json:"contractor,omitempty"`
	Amount       int64  `protobuf:"varint,9,opt,name=amount" json:"amount,omitempty"`
	AmountDetail string `protobuf:"bytes,10,opt,name=amountDetail" json:"amountDetail,omitempty"`
	// 支付相关
	ToAddr string `protobuf:"bytes,11,opt,name=toAddr" json:"toAddr,omitempty"`
	// 投票相关
	StartBlockHeight    int64 `protobuf:"varint,12,opt,name=startBlockHeight" json:"startBlockHeight,omitempty"`
	EndBlockHeight      int64 `protobuf:"varint,13,opt,name=endBlockHeight" json:"endBlockHeight,omitempty"`
	RealEndBlockHeight  int64 `protobuf:"varint,14,opt,name=realEndBlockHeight" json:"realEndBlockHeight,omitempty"`
	ProjectNeedBlockNum int32 `protobuf:"varint,15,opt,name=projectNeedBlockNum" json:"projectNeedBlockNum,omitempty"`
}

func (m *ProposalProject) Reset()                    { *m = ProposalProject{} }
func (m *ProposalProject) String() string            { return proto.CompactTextString(m) }
func (*ProposalProject) ProtoMessage()               {}
func (*ProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *ProposalProject) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *ProposalProject) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *ProposalProject) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *ProposalProject) GetFirstStage() string {
	if m != nil {
		return m.FirstStage
	}
	return ""
}

func (m *ProposalProject) GetLastStage() string {
	if m != nil {
		return m.LastStage
	}
	return ""
}

func (m *ProposalProject) GetProduction() string {
	if m != nil {
		return m.Production
	}
	return ""
}

func (m *ProposalProject) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProposalProject) GetContractor() string {
	if m != nil {
		return m.Contractor
	}
	return ""
}

func (m *ProposalProject) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ProposalProject) GetAmountDetail() string {
	if m != nil {
		return m.AmountDetail
	}
	return ""
}

func (m *ProposalProject) GetToAddr() string {
	if m != nil {
		return m.ToAddr
	}
	return ""
}

func (m *ProposalProject) GetStartBlockHeight() int64 {
	if m != nil {
		return m.StartBlockHeight
	}
	return 0
}

func (m *ProposalProject) GetEndBlockHeight() int64 {
	if m != nil {
		return m.EndBlockHeight
	}
	return 0
}

func (m *ProposalProject) GetRealEndBlockHeight() int64 {
	if m != nil {
		return m.RealEndBlockHeight
	}
	return 0
}

func (m *ProposalProject) GetProjectNeedBlockNum() int32 {
	if m != nil {
		return m.ProjectNeedBlockNum
	}
	return 0
}

type RevokeProposalProject struct {
	ProposalID string `protobuf:"bytes,1,opt,name=proposalID" json:"proposalID,omitempty"`
}

func (m *RevokeProposalProject) Reset()                    { *m = RevokeProposalProject{} }
func (m *RevokeProposalProject) String() string            { return proto.CompactTextString(m) }
func (*RevokeProposalProject) ProtoMessage()               {}
func (*RevokeProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *RevokeProposalProject) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

type VoteProposalProject struct {
	ProposalID string `protobuf:"bytes,1,opt,name=proposalID" json:"proposalID,omitempty"`
	Approve    bool   `protobuf:"varint,2,opt,name=approve" json:"approve,omitempty"`
}

func (m *VoteProposalProject) Reset()                    { *m = VoteProposalProject{} }
func (m *VoteProposalProject) String() string            { return proto.CompactTextString(m) }
func (*VoteProposalProject) ProtoMessage()               {}
func (*VoteProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *VoteProposalProject) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

func (m *VoteProposalProject) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type PubVoteProposalProject struct {
	ProposalID string `protobuf:"bytes,1,opt,name=proposalID" json:"proposalID,omitempty"`
	Oppose     bool   `protobuf:"varint,2,opt,name=oppose" json:"oppose,omitempty"`
}

func (m *PubVoteProposalProject) Reset()                    { *m = PubVoteProposalProject{} }
func (m *PubVoteProposalProject) String() string            { return proto.CompactTextString(m) }
func (*PubVoteProposalProject) ProtoMessage()               {}
func (*PubVoteProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *PubVoteProposalProject) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

func (m *PubVoteProposalProject) GetOppose() bool {
	if m != nil {
		return m.Oppose
	}
	return false
}

type TerminateProposalProject struct {
	ProposalID string `protobuf:"bytes,1,opt,name=proposalID" json:"proposalID,omitempty"`
}

func (m *TerminateProposalProject) Reset()                    { *m = TerminateProposalProject{} }
func (m *TerminateProposalProject) String() string            { return proto.CompactTextString(m) }
func (*TerminateProposalProject) ProtoMessage()               {}
func (*TerminateProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *TerminateProposalProject) GetProposalID() string {
	if m != nil {
		return m.ProposalID
	}
	return ""
}

// receipt
type ReceiptProposalProject struct {
	Prev    *AutonomyProposalProject `protobuf:"bytes,1,opt,name=prev" json:"prev,omitempty"`
	Current *AutonomyProposalProject `protobuf:"bytes,2,opt,name=current" json:"current,omitempty"`
}

func (m *ReceiptProposalProject) Reset()                    { *m = ReceiptProposalProject{} }
func (m *ReceiptProposalProject) String() string            { return proto.CompactTextString(m) }
func (*ReceiptProposalProject) ProtoMessage()               {}
func (*ReceiptProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *ReceiptProposalProject) GetPrev() *AutonomyProposalProject {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *ReceiptProposalProject) GetCurrent() *AutonomyProposalProject {
	if m != nil {
		return m.Current
	}
	return nil
}

type LocalProposalProject struct {
	PropPrj  *AutonomyProposalProject `protobuf:"bytes,1,opt,name=propPrj" json:"propPrj,omitempty"`
	Comments []string                 `protobuf:"bytes,2,rep,name=comments" json:"comments,omitempty"`
}

func (m *LocalProposalProject) Reset()                    { *m = LocalProposalProject{} }
func (m *LocalProposalProject) String() string            { return proto.CompactTextString(m) }
func (*LocalProposalProject) ProtoMessage()               {}
func (*LocalProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *LocalProposalProject) GetPropPrj() *AutonomyProposalProject {
	if m != nil {
		return m.PropPrj
	}
	return nil
}

func (m *LocalProposalProject) GetComments() []string {
	if m != nil {
		return m.Comments
	}
	return nil
}

// query
type ReqQueryProposalProject struct {
	// 优先根据status查询
	Status    int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Count     int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Direction int32 `protobuf:"varint,3,opt,name=direction" json:"direction,omitempty"`
	Index     int64 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
}

func (m *ReqQueryProposalProject) Reset()                    { *m = ReqQueryProposalProject{} }
func (m *ReqQueryProposalProject) String() string            { return proto.CompactTextString(m) }
func (*ReqQueryProposalProject) ProtoMessage()               {}
func (*ReqQueryProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *ReqQueryProposalProject) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ReqQueryProposalProject) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ReqQueryProposalProject) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *ReqQueryProposalProject) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ReplyQueryProposalProject struct {
	PropProjects []*AutonomyProposalProject `protobuf:"bytes,1,rep,name=propProjects" json:"propProjects,omitempty"`
}

func (m *ReplyQueryProposalProject) Reset()                    { *m = ReplyQueryProposalProject{} }
func (m *ReplyQueryProposalProject) String() string            { return proto.CompactTextString(m) }
func (*ReplyQueryProposalProject) ProtoMessage()               {}
func (*ReplyQueryProposalProject) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *ReplyQueryProposalProject) GetPropProjects() []*AutonomyProposalProject {
	if m != nil {
		return m.PropProjects
	}
	return nil
}

func init() {
	proto.RegisterType((*AutonomyProposalProject)(nil), "types.AutonomyProposalProject")
	proto.RegisterType((*ProposalProject)(nil), "types.ProposalProject")
	proto.RegisterType((*RevokeProposalProject)(nil), "types.RevokeProposalProject")
	proto.RegisterType((*VoteProposalProject)(nil), "types.VoteProposalProject")
	proto.RegisterType((*PubVoteProposalProject)(nil), "types.PubVoteProposalProject")
	proto.RegisterType((*TerminateProposalProject)(nil), "types.TerminateProposalProject")
	proto.RegisterType((*ReceiptProposalProject)(nil), "types.ReceiptProposalProject")
	proto.RegisterType((*LocalProposalProject)(nil), "types.LocalProposalProject")
	proto.RegisterType((*ReqQueryProposalProject)(nil), "types.ReqQueryProposalProject")
	proto.RegisterType((*ReplyQueryProposalProject)(nil), "types.ReplyQueryProposalProject")
}

func init() { proto.RegisterFile("project.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 684 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0x97, 0xa6, 0x5d, 0x6f, 0xbb, 0x0f, 0xbc, 0xd1, 0x99, 0x09, 0x4d, 0x55, 0x1e, 0x50,
	0x05, 0x52, 0x85, 0x86, 0x10, 0x13, 0x6f, 0xfb, 0x40, 0x02, 0x09, 0x8d, 0x62, 0x10, 0xaf, 0xc8,
	0x4d, 0xbc, 0x2d, 0x5b, 0x1a, 0x1b, 0xc7, 0x99, 0xa8, 0x78, 0xe7, 0x57, 0xf2, 0x3f, 0x78, 0x45,
	0xbe, 0x76, 0x68, 0xd3, 0x0d, 0xb1, 0xbd, 0xf9, 0x9c, 0x7b, 0xce, 0x4d, 0x7d, 0x6d, 0x9f, 0xc2,
	0x9a, 0xd2, 0xf2, 0x52, 0xc4, 0x66, 0xa4, 0xb4, 0x34, 0x92, 0x84, 0x66, 0xa6, 0x44, 0xb1, 0xbb,
	0x96, 0xc5, 0x72, 0x3a, 0x95, 0xb9, 0x63, 0xa3, 0x5f, 0x2b, 0xb0, 0x73, 0x58, 0x1a, 0x99, 0xcb,
	0xe9, 0x6c, 0xac, 0xa5, 0x92, 0x05, 0xcf, 0xc6, 0xce, 0x47, 0x0e, 0xa0, 0xab, 0xb4, 0x54, 0x1e,
	0xd2, 0xc6, 0xa0, 0x31, 0xec, 0xee, 0xf7, 0x47, 0xd8, 0x67, 0xb4, 0x24, 0x66, 0x8b, 0x52, 0xf2,
	0x0c, 0xda, 0xc7, 0xa5, 0x66, 0x65, 0x26, 0xe8, 0x0a, 0xba, 0x1e, 0x78, 0x97, 0xa5, 0x8e, 0x65,
	0x7e, 0x96, 0x9e, 0xb3, 0x4a, 0x41, 0xfa, 0xd0, 0x9a, 0x48, 0xae, 0x93, 0x82, 0x06, 0x83, 0x60,
	0xd8, 0x61, 0x1e, 0x91, 0x97, 0xd0, 0xc3, 0xd5, 0x17, 0x69, 0x04, 0x13, 0x05, 0x6d, 0xd6, 0x3a,
	0x79, 0xb6, 0xcc, 0x0c, 0xab, 0xc9, 0xec, 0xb7, 0x55, 0x39, 0xb1, 0x88, 0x86, 0x35, 0xc7, 0xb8,
	0x9c, 0x64, 0x69, 0x8c, 0xb2, 0x4a, 0x61, 0xbf, 0x5d, 0x18, 0x6e, 0xca, 0x82, 0xb6, 0x06, 0x8d,
	0x61, 0xc8, 0x3c, 0x22, 0x14, 0xda, 0x3c, 0x49, 0xb4, 0x28, 0x0a, 0xda, 0x1e, 0x34, 0x86, 0x1d,
	0x56, 0x41, 0xeb, 0xb8, 0x10, 0xe9, 0xf9, 0x85, 0xa1, 0xab, 0x83, 0xc6, 0x30, 0x60, 0x1e, 0x91,
	0x6d, 0x08, 0xd3, 0x3c, 0x11, 0xdf, 0x69, 0x07, 0x1b, 0x39, 0x10, 0xfd, 0x0e, 0x60, 0x63, 0x79,
	0xac, 0x04, 0x9a, 0x33, 0xc1, 0x35, 0xce, 0x33, 0x64, 0xb8, 0xb6, 0xee, 0xa9, 0xcc, 0xcd, 0x05,
	0x8e, 0x2b, 0x64, 0x0e, 0x90, 0x4d, 0x08, 0x12, 0x3e, 0xa3, 0x01, 0x72, 0x76, 0x49, 0xf6, 0x00,
	0xce, 0x52, 0x5d, 0x98, 0x4f, 0x86, 0x9f, 0x0b, 0x9c, 0x48, 0x87, 0x2d, 0x30, 0xe4, 0x31, 0x74,
	0x32, 0x5e, 0x95, 0x43, 0x2c, 0xcf, 0x09, 0xeb, 0x56, 0x5a, 0x26, 0x65, 0x6c, 0x52, 0x99, 0xe3,
	0x8e, 0x3b, 0x6c, 0x81, 0x21, 0x03, 0xe8, 0x26, 0xa2, 0x88, 0x75, 0xaa, 0x50, 0xe0, 0x76, 0xbe,
	0x48, 0xd9, 0x0e, 0xb1, 0xcc, 0x8d, 0xe6, 0xb1, 0x91, 0x1a, 0x27, 0xd0, 0x61, 0x0b, 0x8c, 0x9d,
	0x0e, 0x9f, 0xca, 0x32, 0x37, 0x38, 0x86, 0x80, 0x79, 0x44, 0x22, 0xe8, 0xb9, 0xd5, 0x89, 0x30,
	0x3c, 0xcd, 0x28, 0xa0, 0xb3, 0xc6, 0x59, 0xaf, 0x91, 0x87, 0x49, 0xa2, 0x69, 0x17, 0xab, 0x1e,
	0x91, 0xa7, 0xb0, 0x59, 0x18, 0xae, 0xcd, 0x51, 0x26, 0xe3, 0xab, 0xb7, 0x6e, 0xf6, 0x3d, 0xec,
	0x7e, 0x83, 0x27, 0x4f, 0x60, 0x5d, 0xe4, 0xc9, 0xa2, 0x72, 0x0d, 0x95, 0x4b, 0x2c, 0x19, 0x01,
	0xd1, 0x82, 0x67, 0x6f, 0xea, 0xda, 0x75, 0xd4, 0xde, 0x52, 0x21, 0xcf, 0x61, 0xcb, 0xbf, 0xa6,
	0x53, 0x21, 0x5c, 0xe5, 0xb4, 0x9c, 0xd2, 0x0d, 0x3c, 0x99, 0xdb, 0x4a, 0xd1, 0x2b, 0x78, 0xc8,
	0xc4, 0xb5, 0xbc, 0x12, 0xcb, 0xc7, 0xef, 0x0e, 0x01, 0xa9, 0x77, 0x27, 0x78, 0x09, 0xdc, 0x21,
	0x78, 0x26, 0xfa, 0x00, 0x5b, 0xf6, 0x6a, 0xde, 0xd3, 0x86, 0x37, 0x56, 0x29, 0x2d, 0xaf, 0xdd,
	0x93, 0x5b, 0x65, 0x15, 0x8c, 0xc6, 0xd0, 0x1f, 0xbb, 0xeb, 0x7e, 0xdf, 0x9e, 0x7d, 0x68, 0x49,
	0xa5, 0x64, 0x51, 0xb5, 0xf4, 0x28, 0x7a, 0x0d, 0xf4, 0xb3, 0xd0, 0xd3, 0x34, 0xe7, 0xf7, 0xee,
	0x19, 0xfd, 0x6c, 0x40, 0x9f, 0x89, 0x58, 0xa4, 0xca, 0x2c, 0x5b, 0xf7, 0xa1, 0xa9, 0xb4, 0xb8,
	0xf6, 0x41, 0xb3, 0xe7, 0x9f, 0xed, 0x3f, 0xd2, 0x89, 0xa1, 0x96, 0x1c, 0x40, 0x3b, 0x2e, 0xb5,
	0x16, 0xb9, 0xf1, 0x49, 0xf3, 0x3f, 0x5b, 0x25, 0x8f, 0x32, 0xd8, 0x7e, 0x2f, 0x63, 0x2c, 0x2c,
	0xa5, 0x5e, 0xdb, 0x45, 0xd9, 0xe5, 0x1d, 0x7f, 0x48, 0x25, 0x27, 0xbb, 0xb0, 0x6a, 0xb3, 0x55,
	0xe4, 0xa6, 0xa0, 0x2b, 0x18, 0x65, 0x7f, 0x71, 0xf4, 0x03, 0x76, 0x98, 0xf8, 0xf6, 0xb1, 0x14,
	0xfa, 0x46, 0xcc, 0xce, 0x33, 0xa8, 0x51, 0xcb, 0xa0, 0x6d, 0x08, 0x63, 0x7c, 0x4a, 0x3e, 0x13,
	0x10, 0xd8, 0x17, 0x9e, 0xa4, 0x5a, 0xb8, 0x27, 0xec, 0x92, 0x61, 0x4e, 0xcc, 0x53, 0xa8, 0x89,
	0x57, 0xd9, 0xa7, 0xd0, 0x57, 0x78, 0xc4, 0x84, 0xca, 0x66, 0xb7, 0x7e, 0xfe, 0x08, 0x7a, 0x0b,
	0xd1, 0x6d, 0x7f, 0x44, 0x70, 0x87, 0x4d, 0xd7, 0x3c, 0x93, 0x16, 0xfe, 0x99, 0xbc, 0xf8, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x8d, 0x4a, 0xb0, 0x36, 0x73, 0x06, 0x00, 0x00,
}
