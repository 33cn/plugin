// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autonomy.proto

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	autonomy.proto
	board.proto
	lcommon.proto
	project.proto
	rule.proto

It has these top-level messages:
	AutonomyAction
	AutonomyProposalBoard
	ProposalBoard
	RevokeProposalBoard
	VoteProposalBoard
	TerminateProposalBoard
	ReceiptProposalBoard
	LocalProposalBoard
	ReplyQueryProposalBoard
	ReplyProposalBoard
	VotesResult
	VotesRecord
	AutonomyProposalProject
	ProposalProject
	RevokeProposalProject
	TerminateProposalProject
	ReceiptProposalProject
	LocalProposalProject
	ReplyQueryProposalProject
	ReplyProposalProject
	AutonomyProposalRule
	ProposalRule
	RevokeProposalRule
	TerminateProposalRule
	ReceiptProposalRule
	LocalProposalRule
	ReplyQueryProposalRule
	ReplyProposalRule
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// message for execs.Autonomy
type AutonomyAction struct {
	// Types that are valid to be assigned to Value:
	//	*AutonomyAction_PropBoard
	//	*AutonomyAction_RvkPropBoard
	//	*AutonomyAction_VotePropBoard
	//	*AutonomyAction_TmintPropBoard
	//	*AutonomyAction_PropProject
	//	*AutonomyAction_RvkPropProject
	//	*AutonomyAction_VotePropProject
	//	*AutonomyAction_TmintPropProject
	//	*AutonomyAction_PropRule
	//	*AutonomyAction_RvkPropRule
	//	*AutonomyAction_VotePropRule
	//	*AutonomyAction_TmintPropRule
	Value isAutonomyAction_Value `protobuf_oneof:"value"`
	Ty    int32                  `protobuf:"varint,13,opt,name=ty" json:"ty,omitempty"`
}

func (m *AutonomyAction) Reset()                    { *m = AutonomyAction{} }
func (m *AutonomyAction) String() string            { return proto.CompactTextString(m) }
func (*AutonomyAction) ProtoMessage()               {}
func (*AutonomyAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isAutonomyAction_Value interface {
	isAutonomyAction_Value()
}

type AutonomyAction_PropBoard struct {
	PropBoard *ProposalBoard `protobuf:"bytes,1,opt,name=propBoard,oneof"`
}
type AutonomyAction_RvkPropBoard struct {
	RvkPropBoard *RevokeProposalBoard `protobuf:"bytes,2,opt,name=rvkPropBoard,oneof"`
}
type AutonomyAction_VotePropBoard struct {
	VotePropBoard *VoteProposalBoard `protobuf:"bytes,3,opt,name=votePropBoard,oneof"`
}
type AutonomyAction_TmintPropBoard struct {
	TmintPropBoard *TerminateProposalBoard `protobuf:"bytes,4,opt,name=tmintPropBoard,oneof"`
}
type AutonomyAction_PropProject struct {
	PropProject *ProposalProject `protobuf:"bytes,5,opt,name=propProject,oneof"`
}
type AutonomyAction_RvkPropProject struct {
	RvkPropProject *RevokeProposalProject `protobuf:"bytes,6,opt,name=rvkPropProject,oneof"`
}
type AutonomyAction_VotePropProject struct {
	VotePropProject *VoteProposalBoard `protobuf:"bytes,7,opt,name=votePropProject,oneof"`
}
type AutonomyAction_TmintPropProject struct {
	TmintPropProject *TerminateProposalProject `protobuf:"bytes,8,opt,name=tmintPropProject,oneof"`
}
type AutonomyAction_PropRule struct {
	PropRule *ProposalRule `protobuf:"bytes,9,opt,name=propRule,oneof"`
}
type AutonomyAction_RvkPropRule struct {
	RvkPropRule *RevokeProposalRule `protobuf:"bytes,10,opt,name=rvkPropRule,oneof"`
}
type AutonomyAction_VotePropRule struct {
	VotePropRule *VoteProposalBoard `protobuf:"bytes,11,opt,name=votePropRule,oneof"`
}
type AutonomyAction_TmintPropRule struct {
	TmintPropRule *TerminateProposalRule `protobuf:"bytes,12,opt,name=tmintPropRule,oneof"`
}

func (*AutonomyAction_PropBoard) isAutonomyAction_Value()        {}
func (*AutonomyAction_RvkPropBoard) isAutonomyAction_Value()     {}
func (*AutonomyAction_VotePropBoard) isAutonomyAction_Value()    {}
func (*AutonomyAction_TmintPropBoard) isAutonomyAction_Value()   {}
func (*AutonomyAction_PropProject) isAutonomyAction_Value()      {}
func (*AutonomyAction_RvkPropProject) isAutonomyAction_Value()   {}
func (*AutonomyAction_VotePropProject) isAutonomyAction_Value()  {}
func (*AutonomyAction_TmintPropProject) isAutonomyAction_Value() {}
func (*AutonomyAction_PropRule) isAutonomyAction_Value()         {}
func (*AutonomyAction_RvkPropRule) isAutonomyAction_Value()      {}
func (*AutonomyAction_VotePropRule) isAutonomyAction_Value()     {}
func (*AutonomyAction_TmintPropRule) isAutonomyAction_Value()    {}

func (m *AutonomyAction) GetValue() isAutonomyAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *AutonomyAction) GetPropBoard() *ProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_PropBoard); ok {
		return x.PropBoard
	}
	return nil
}

func (m *AutonomyAction) GetRvkPropBoard() *RevokeProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_RvkPropBoard); ok {
		return x.RvkPropBoard
	}
	return nil
}

func (m *AutonomyAction) GetVotePropBoard() *VoteProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_VotePropBoard); ok {
		return x.VotePropBoard
	}
	return nil
}

func (m *AutonomyAction) GetTmintPropBoard() *TerminateProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_TmintPropBoard); ok {
		return x.TmintPropBoard
	}
	return nil
}

func (m *AutonomyAction) GetPropProject() *ProposalProject {
	if x, ok := m.GetValue().(*AutonomyAction_PropProject); ok {
		return x.PropProject
	}
	return nil
}

func (m *AutonomyAction) GetRvkPropProject() *RevokeProposalProject {
	if x, ok := m.GetValue().(*AutonomyAction_RvkPropProject); ok {
		return x.RvkPropProject
	}
	return nil
}

func (m *AutonomyAction) GetVotePropProject() *VoteProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_VotePropProject); ok {
		return x.VotePropProject
	}
	return nil
}

func (m *AutonomyAction) GetTmintPropProject() *TerminateProposalProject {
	if x, ok := m.GetValue().(*AutonomyAction_TmintPropProject); ok {
		return x.TmintPropProject
	}
	return nil
}

func (m *AutonomyAction) GetPropRule() *ProposalRule {
	if x, ok := m.GetValue().(*AutonomyAction_PropRule); ok {
		return x.PropRule
	}
	return nil
}

func (m *AutonomyAction) GetRvkPropRule() *RevokeProposalRule {
	if x, ok := m.GetValue().(*AutonomyAction_RvkPropRule); ok {
		return x.RvkPropRule
	}
	return nil
}

func (m *AutonomyAction) GetVotePropRule() *VoteProposalBoard {
	if x, ok := m.GetValue().(*AutonomyAction_VotePropRule); ok {
		return x.VotePropRule
	}
	return nil
}

func (m *AutonomyAction) GetTmintPropRule() *TerminateProposalRule {
	if x, ok := m.GetValue().(*AutonomyAction_TmintPropRule); ok {
		return x.TmintPropRule
	}
	return nil
}

func (m *AutonomyAction) GetTy() int32 {
	if m != nil {
		return m.Ty
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AutonomyAction) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AutonomyAction_OneofMarshaler, _AutonomyAction_OneofUnmarshaler, _AutonomyAction_OneofSizer, []interface{}{
		(*AutonomyAction_PropBoard)(nil),
		(*AutonomyAction_RvkPropBoard)(nil),
		(*AutonomyAction_VotePropBoard)(nil),
		(*AutonomyAction_TmintPropBoard)(nil),
		(*AutonomyAction_PropProject)(nil),
		(*AutonomyAction_RvkPropProject)(nil),
		(*AutonomyAction_VotePropProject)(nil),
		(*AutonomyAction_TmintPropProject)(nil),
		(*AutonomyAction_PropRule)(nil),
		(*AutonomyAction_RvkPropRule)(nil),
		(*AutonomyAction_VotePropRule)(nil),
		(*AutonomyAction_TmintPropRule)(nil),
	}
}

func _AutonomyAction_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AutonomyAction)
	// value
	switch x := m.Value.(type) {
	case *AutonomyAction_PropBoard:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PropBoard); err != nil {
			return err
		}
	case *AutonomyAction_RvkPropBoard:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RvkPropBoard); err != nil {
			return err
		}
	case *AutonomyAction_VotePropBoard:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VotePropBoard); err != nil {
			return err
		}
	case *AutonomyAction_TmintPropBoard:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TmintPropBoard); err != nil {
			return err
		}
	case *AutonomyAction_PropProject:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PropProject); err != nil {
			return err
		}
	case *AutonomyAction_RvkPropProject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RvkPropProject); err != nil {
			return err
		}
	case *AutonomyAction_VotePropProject:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VotePropProject); err != nil {
			return err
		}
	case *AutonomyAction_TmintPropProject:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TmintPropProject); err != nil {
			return err
		}
	case *AutonomyAction_PropRule:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PropRule); err != nil {
			return err
		}
	case *AutonomyAction_RvkPropRule:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RvkPropRule); err != nil {
			return err
		}
	case *AutonomyAction_VotePropRule:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.VotePropRule); err != nil {
			return err
		}
	case *AutonomyAction_TmintPropRule:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TmintPropRule); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AutonomyAction.Value has unexpected type %T", x)
	}
	return nil
}

func _AutonomyAction_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AutonomyAction)
	switch tag {
	case 1: // value.propBoard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_PropBoard{msg}
		return true, err
	case 2: // value.rvkPropBoard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevokeProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_RvkPropBoard{msg}
		return true, err
	case 3: // value.votePropBoard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoteProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_VotePropBoard{msg}
		return true, err
	case 4: // value.tmintPropBoard
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TerminateProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_TmintPropBoard{msg}
		return true, err
	case 5: // value.propProject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProposalProject)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_PropProject{msg}
		return true, err
	case 6: // value.rvkPropProject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevokeProposalProject)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_RvkPropProject{msg}
		return true, err
	case 7: // value.votePropProject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoteProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_VotePropProject{msg}
		return true, err
	case 8: // value.tmintPropProject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TerminateProposalProject)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_TmintPropProject{msg}
		return true, err
	case 9: // value.propRule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ProposalRule)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_PropRule{msg}
		return true, err
	case 10: // value.rvkPropRule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RevokeProposalRule)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_RvkPropRule{msg}
		return true, err
	case 11: // value.votePropRule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VoteProposalBoard)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_VotePropRule{msg}
		return true, err
	case 12: // value.tmintPropRule
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TerminateProposalRule)
		err := b.DecodeMessage(msg)
		m.Value = &AutonomyAction_TmintPropRule{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AutonomyAction_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AutonomyAction)
	// value
	switch x := m.Value.(type) {
	case *AutonomyAction_PropBoard:
		s := proto.Size(x.PropBoard)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_RvkPropBoard:
		s := proto.Size(x.RvkPropBoard)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_VotePropBoard:
		s := proto.Size(x.VotePropBoard)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_TmintPropBoard:
		s := proto.Size(x.TmintPropBoard)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_PropProject:
		s := proto.Size(x.PropProject)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_RvkPropProject:
		s := proto.Size(x.RvkPropProject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_VotePropProject:
		s := proto.Size(x.VotePropProject)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_TmintPropProject:
		s := proto.Size(x.TmintPropProject)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_PropRule:
		s := proto.Size(x.PropRule)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_RvkPropRule:
		s := proto.Size(x.RvkPropRule)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_VotePropRule:
		s := proto.Size(x.VotePropRule)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AutonomyAction_TmintPropRule:
		s := proto.Size(x.TmintPropRule)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*AutonomyAction)(nil), "types.AutonomyAction")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Autonomy service

type AutonomyClient interface {
	QueryProposalBoard(ctx context.Context, in *ReplyQueryProposalBoard, opts ...grpc.CallOption) (*ReplyProposalBoard, error)
	QueryProposalProject(ctx context.Context, in *ReplyQueryProposalProject, opts ...grpc.CallOption) (*ReplyProposalProject, error)
	QueryProposalRule(ctx context.Context, in *ReplyQueryProposalRule, opts ...grpc.CallOption) (*ReplyProposalRule, error)
}

type autonomyClient struct {
	cc *grpc.ClientConn
}

func NewAutonomyClient(cc *grpc.ClientConn) AutonomyClient {
	return &autonomyClient{cc}
}

func (c *autonomyClient) QueryProposalBoard(ctx context.Context, in *ReplyQueryProposalBoard, opts ...grpc.CallOption) (*ReplyProposalBoard, error) {
	out := new(ReplyProposalBoard)
	err := grpc.Invoke(ctx, "/types.autonomy/QueryProposalBoard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autonomyClient) QueryProposalProject(ctx context.Context, in *ReplyQueryProposalProject, opts ...grpc.CallOption) (*ReplyProposalProject, error) {
	out := new(ReplyProposalProject)
	err := grpc.Invoke(ctx, "/types.autonomy/QueryProposalProject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autonomyClient) QueryProposalRule(ctx context.Context, in *ReplyQueryProposalRule, opts ...grpc.CallOption) (*ReplyProposalRule, error) {
	out := new(ReplyProposalRule)
	err := grpc.Invoke(ctx, "/types.autonomy/QueryProposalRule", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Autonomy service

type AutonomyServer interface {
	QueryProposalBoard(context.Context, *ReplyQueryProposalBoard) (*ReplyProposalBoard, error)
	QueryProposalProject(context.Context, *ReplyQueryProposalProject) (*ReplyProposalProject, error)
	QueryProposalRule(context.Context, *ReplyQueryProposalRule) (*ReplyProposalRule, error)
}

func RegisterAutonomyServer(s *grpc.Server, srv AutonomyServer) {
	s.RegisterService(&_Autonomy_serviceDesc, srv)
}

func _Autonomy_QueryProposalBoard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyQueryProposalBoard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutonomyServer).QueryProposalBoard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.autonomy/QueryProposalBoard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutonomyServer).QueryProposalBoard(ctx, req.(*ReplyQueryProposalBoard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Autonomy_QueryProposalProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyQueryProposalProject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutonomyServer).QueryProposalProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.autonomy/QueryProposalProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutonomyServer).QueryProposalProject(ctx, req.(*ReplyQueryProposalProject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Autonomy_QueryProposalRule_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplyQueryProposalRule)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutonomyServer).QueryProposalRule(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.autonomy/QueryProposalRule",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutonomyServer).QueryProposalRule(ctx, req.(*ReplyQueryProposalRule))
	}
	return interceptor(ctx, in, info, handler)
}

var _Autonomy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.autonomy",
	HandlerType: (*AutonomyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryProposalBoard",
			Handler:    _Autonomy_QueryProposalBoard_Handler,
		},
		{
			MethodName: "QueryProposalProject",
			Handler:    _Autonomy_QueryProposalProject_Handler,
		},
		{
			MethodName: "QueryProposalRule",
			Handler:    _Autonomy_QueryProposalRule_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autonomy.proto",
}

func init() { proto.RegisterFile("autonomy.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xcf, 0xae, 0xd2, 0x40,
	0x14, 0xc6, 0x4b, 0xb5, 0x5c, 0xee, 0x29, 0xad, 0x7a, 0xbc, 0x31, 0xbd, 0xd5, 0xab, 0xa4, 0x2b,
	0x56, 0x24, 0xa2, 0x2b, 0x13, 0x0d, 0x10, 0xa2, 0x6c, 0x34, 0xd0, 0x18, 0x5d, 0x17, 0x9c, 0x05,
	0x52, 0x3a, 0xcd, 0x30, 0x6d, 0xd2, 0x17, 0xf0, 0xad, 0x7c, 0xb7, 0x9b, 0x0e, 0xd3, 0x3f, 0xd3,
	0x96, 0xb0, 0x83, 0x7e, 0xe7, 0xf7, 0xcb, 0x7c, 0x67, 0xd2, 0x82, 0x1d, 0x24, 0x9c, 0x46, 0xf4,
	0x98, 0x4d, 0x62, 0x46, 0x39, 0x45, 0x83, 0x67, 0x31, 0x39, 0xb9, 0xe6, 0x96, 0x06, 0xec, 0xcf,
	0xf9, 0x99, 0x6b, 0xc5, 0x8c, 0xfe, 0x25, 0x3b, 0x2e, 0xff, 0x02, 0x4b, 0x42, 0x72, 0xfe, 0xed,
	0xfd, 0xef, 0x83, 0x3d, 0x97, 0x86, 0xf9, 0x8e, 0xef, 0x69, 0x84, 0x1f, 0xe1, 0x36, 0x66, 0x34,
	0x5e, 0xe4, 0x02, 0xa7, 0x37, 0xea, 0x8d, 0xcd, 0xe9, 0xdd, 0x44, 0x58, 0x27, 0x6b, 0x46, 0x63,
	0x7a, 0x0a, 0x42, 0x91, 0xad, 0x34, 0xbf, 0x1a, 0xc4, 0x19, 0x0c, 0x59, 0x7a, 0x58, 0x97, 0xa0,
	0x2e, 0x40, 0x57, 0x82, 0x3e, 0x49, 0xe9, 0x81, 0x34, 0x71, 0x85, 0xc0, 0x19, 0x58, 0x29, 0xe5,
	0xa4, 0x52, 0x3c, 0x11, 0x0a, 0x47, 0x2a, 0x7e, 0xc9, 0xac, 0x2e, 0x50, 0x01, 0xfc, 0x06, 0x36,
	0x3f, 0xee, 0x23, 0x5e, 0x29, 0x9e, 0x0a, 0xc5, 0x83, 0x54, 0xfc, 0x24, 0xec, 0xb8, 0x8f, 0x82,
	0xb6, 0xa7, 0x81, 0xe1, 0x27, 0x30, 0xf3, 0x66, 0xeb, 0xf3, 0xda, 0x1c, 0x43, 0x58, 0x5e, 0x35,
	0x96, 0x20, 0xd3, 0x95, 0xe6, 0xd7, 0x87, 0xf1, 0x2b, 0xd8, 0xb2, 0x56, 0x81, 0xf7, 0x05, 0xfe,
	0xa6, 0x73, 0x15, 0x95, 0xa4, 0x41, 0xe1, 0x12, 0x9e, 0x15, 0xed, 0x0a, 0xd1, 0xcd, 0xd5, 0x85,
	0x34, 0x11, 0xfc, 0x0e, 0xcf, 0xcb, 0x6e, 0x85, 0x66, 0x20, 0x34, 0xef, 0x2e, 0x2d, 0xa5, 0x3a,
	0x52, 0x0b, 0xc5, 0xf7, 0x30, 0xc8, 0xbb, 0xfa, 0x49, 0x48, 0x9c, 0x5b, 0xa1, 0x79, 0xd9, 0xd8,
	0x4a, 0x1e, 0xad, 0x34, 0xbf, 0x1c, 0xc3, 0xcf, 0x60, 0xca, 0x66, 0x82, 0x02, 0x41, 0xdd, 0x77,
	0x2e, 0x43, 0xb2, 0xf5, 0x79, 0xfc, 0x02, 0xc3, 0xa2, 0x93, 0xe0, 0xcd, 0xab, 0x3b, 0x50, 0xe6,
	0x71, 0x09, 0x56, 0xd9, 0x42, 0x08, 0x86, 0xca, 0x6d, 0xb4, 0xda, 0xcb, 0x33, 0xa8, 0x10, 0xda,
	0xa0, 0xf3, 0xcc, 0xb1, 0x46, 0xbd, 0xb1, 0xe1, 0xeb, 0x3c, 0x5b, 0xdc, 0x80, 0x91, 0x06, 0x61,
	0x42, 0xa6, 0xff, 0x74, 0x18, 0x14, 0x6f, 0x20, 0x6e, 0x00, 0x37, 0x09, 0x61, 0x99, 0x72, 0x22,
	0x7c, 0x5b, 0x76, 0x8d, 0xc3, 0xac, 0x9d, 0xbb, 0xf7, 0xf5, 0x5c, 0x89, 0x3c, 0x0d, 0x7f, 0xc3,
	0x9d, 0x82, 0x14, 0x17, 0x31, 0xba, 0x28, 0x95, 0x13, 0xee, 0xeb, 0x2e, 0xad, 0x0c, 0x3d, 0x0d,
	0x7f, 0xc0, 0x0b, 0x05, 0x13, 0x35, 0x1f, 0x2e, 0x5a, 0xf3, 0xd8, 0x75, 0xba, 0x94, 0x79, 0xe2,
	0x69, 0xdb, 0xbe, 0xf8, 0x9e, 0x7c, 0x78, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x9d, 0xc2, 0xca, 0x38,
	0x90, 0x04, 0x00, 0x00,
}
