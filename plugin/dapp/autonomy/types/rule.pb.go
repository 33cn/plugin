// Copyright Fuzamei Corp. 2018 All Rights Reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: rule.proto

package types

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AutonomyProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropRule *ProposalRule `protobuf:"bytes,1,opt,name=propRule,proto3" json:"propRule,omitempty"`
	CurRule  *RuleConfig   `protobuf:"bytes,2,opt,name=curRule,proto3" json:"curRule,omitempty"`
	// 全体持票人投票结果
	VoteResult *VoteResult `protobuf:"bytes,3,opt,name=voteResult,proto3" json:"voteResult,omitempty"`
	// 状态
	Status     int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Address    string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Height     int64  `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Index      int32  `protobuf:"varint,7,opt,name=index,proto3" json:"index,omitempty"`
	ProposalID string `protobuf:"bytes,8,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
}

func (x *AutonomyProposalRule) Reset() {
	*x = AutonomyProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutonomyProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutonomyProposalRule) ProtoMessage() {}

func (x *AutonomyProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutonomyProposalRule.ProtoReflect.Descriptor instead.
func (*AutonomyProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{0}
}

func (x *AutonomyProposalRule) GetPropRule() *ProposalRule {
	if x != nil {
		return x.PropRule
	}
	return nil
}

func (x *AutonomyProposalRule) GetCurRule() *RuleConfig {
	if x != nil {
		return x.CurRule
	}
	return nil
}

func (x *AutonomyProposalRule) GetVoteResult() *VoteResult {
	if x != nil {
		return x.VoteResult
	}
	return nil
}

func (x *AutonomyProposalRule) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AutonomyProposalRule) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AutonomyProposalRule) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *AutonomyProposalRule) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AutonomyProposalRule) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

type ProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提案时间
	Year  int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day   int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	// 规则可修改项,如果某项不修改则置为-1
	RuleCfg *RuleConfig `protobuf:"bytes,4,opt,name=ruleCfg,proto3" json:"ruleCfg,omitempty"`
	// 投票相关
	StartBlockHeight   int64 `protobuf:"varint,5,opt,name=startBlockHeight,proto3" json:"startBlockHeight,omitempty"`     // 提案开始投票高度
	EndBlockHeight     int64 `protobuf:"varint,6,opt,name=endBlockHeight,proto3" json:"endBlockHeight,omitempty"`         // 提案结束投票高度
	RealEndBlockHeight int64 `protobuf:"varint,7,opt,name=realEndBlockHeight,proto3" json:"realEndBlockHeight,omitempty"` // 实际提案结束投票高度
}

func (x *ProposalRule) Reset() {
	*x = ProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalRule) ProtoMessage() {}

func (x *ProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalRule.ProtoReflect.Descriptor instead.
func (*ProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalRule) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *ProposalRule) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *ProposalRule) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *ProposalRule) GetRuleCfg() *RuleConfig {
	if x != nil {
		return x.RuleCfg
	}
	return nil
}

func (x *ProposalRule) GetStartBlockHeight() int64 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *ProposalRule) GetEndBlockHeight() int64 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *ProposalRule) GetRealEndBlockHeight() int64 {
	if x != nil {
		return x.RealEndBlockHeight
	}
	return 0
}

type RevokeProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID string `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
}

func (x *RevokeProposalRule) Reset() {
	*x = RevokeProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeProposalRule) ProtoMessage() {}

func (x *RevokeProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeProposalRule.ProtoReflect.Descriptor instead.
func (*RevokeProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeProposalRule) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

type VoteProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID string   `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Approve    bool     `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	OriginAddr []string `protobuf:"bytes,3,rep,name=originAddr,proto3" json:"originAddr,omitempty"`
}

func (x *VoteProposalRule) Reset() {
	*x = VoteProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteProposalRule) ProtoMessage() {}

func (x *VoteProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteProposalRule.ProtoReflect.Descriptor instead.
func (*VoteProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{3}
}

func (x *VoteProposalRule) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *VoteProposalRule) GetApprove() bool {
	if x != nil {
		return x.Approve
	}
	return false
}

func (x *VoteProposalRule) GetOriginAddr() []string {
	if x != nil {
		return x.OriginAddr
	}
	return nil
}

type TerminateProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID string `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
}

func (x *TerminateProposalRule) Reset() {
	*x = TerminateProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateProposalRule) ProtoMessage() {}

func (x *TerminateProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateProposalRule.ProtoReflect.Descriptor instead.
func (*TerminateProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{4}
}

func (x *TerminateProposalRule) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

// receipt
type ReceiptProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prev    *AutonomyProposalRule `protobuf:"bytes,1,opt,name=prev,proto3" json:"prev,omitempty"`
	Current *AutonomyProposalRule `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *ReceiptProposalRule) Reset() {
	*x = ReceiptProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptProposalRule) ProtoMessage() {}

func (x *ReceiptProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptProposalRule.ProtoReflect.Descriptor instead.
func (*ReceiptProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{5}
}

func (x *ReceiptProposalRule) GetPrev() *AutonomyProposalRule {
	if x != nil {
		return x.Prev
	}
	return nil
}

func (x *ReceiptProposalRule) GetCurrent() *AutonomyProposalRule {
	if x != nil {
		return x.Current
	}
	return nil
}

type LocalProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropRule *AutonomyProposalRule `protobuf:"bytes,1,opt,name=propRule,proto3" json:"propRule,omitempty"`
	Comments []string              `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *LocalProposalRule) Reset() {
	*x = LocalProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalProposalRule) ProtoMessage() {}

func (x *LocalProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalProposalRule.ProtoReflect.Descriptor instead.
func (*LocalProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{6}
}

func (x *LocalProposalRule) GetPropRule() *AutonomyProposalRule {
	if x != nil {
		return x.PropRule
	}
	return nil
}

func (x *LocalProposalRule) GetComments() []string {
	if x != nil {
		return x.Comments
	}
	return nil
}

// query
type ReqQueryProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Addr      string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Count     int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Direction int32  `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Height    int64  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Index     int32  `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReqQueryProposalRule) Reset() {
	*x = ReqQueryProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqQueryProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqQueryProposalRule) ProtoMessage() {}

func (x *ReqQueryProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqQueryProposalRule.ProtoReflect.Descriptor instead.
func (*ReqQueryProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{7}
}

func (x *ReqQueryProposalRule) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReqQueryProposalRule) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReqQueryProposalRule) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqQueryProposalRule) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *ReqQueryProposalRule) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ReqQueryProposalRule) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ReplyQueryProposalRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropRules []*AutonomyProposalRule `protobuf:"bytes,1,rep,name=propRules,proto3" json:"propRules,omitempty"`
}

func (x *ReplyQueryProposalRule) Reset() {
	*x = ReplyQueryProposalRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyQueryProposalRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyQueryProposalRule) ProtoMessage() {}

func (x *ReplyQueryProposalRule) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyQueryProposalRule.ProtoReflect.Descriptor instead.
func (*ReplyQueryProposalRule) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyQueryProposalRule) GetPropRules() []*AutonomyProposalRule {
	if x != nil {
		return x.PropRules
	}
	return nil
}

// TransferFund action
type TransferFund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Note   string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *TransferFund) Reset() {
	*x = TransferFund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFund) ProtoMessage() {}

func (x *TransferFund) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFund.ProtoReflect.Descriptor instead.
func (*TransferFund) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{9}
}

func (x *TransferFund) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferFund) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// Comment action
type Comment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID string `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	RepHash    string `protobuf:"bytes,2,opt,name=repHash,proto3" json:"repHash,omitempty"`
	Comment    string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *Comment) Reset() {
	*x = Comment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{10}
}

func (x *Comment) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *Comment) GetRepHash() string {
	if x != nil {
		return x.RepHash
	}
	return ""
}

func (x *Comment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ReceiptProposalComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmt    *Comment `protobuf:"bytes,1,opt,name=cmt,proto3" json:"cmt,omitempty"`
	Height int64    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Index  int32    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Hash   string   `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *ReceiptProposalComment) Reset() {
	*x = ReceiptProposalComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptProposalComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptProposalComment) ProtoMessage() {}

func (x *ReceiptProposalComment) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptProposalComment.ProtoReflect.Descriptor instead.
func (*ReceiptProposalComment) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{11}
}

func (x *ReceiptProposalComment) GetCmt() *Comment {
	if x != nil {
		return x.Cmt
	}
	return nil
}

func (x *ReceiptProposalComment) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ReceiptProposalComment) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ReceiptProposalComment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

// query
type ReqQueryProposalComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalID string `protobuf:"bytes,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	Count      int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Direction  int32  `protobuf:"varint,3,opt,name=direction,proto3" json:"direction,omitempty"`
	Height     int64  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Index      int32  `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ReqQueryProposalComment) Reset() {
	*x = ReqQueryProposalComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqQueryProposalComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqQueryProposalComment) ProtoMessage() {}

func (x *ReqQueryProposalComment) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqQueryProposalComment.ProtoReflect.Descriptor instead.
func (*ReqQueryProposalComment) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{12}
}

func (x *ReqQueryProposalComment) GetProposalID() string {
	if x != nil {
		return x.ProposalID
	}
	return ""
}

func (x *ReqQueryProposalComment) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReqQueryProposalComment) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *ReqQueryProposalComment) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ReqQueryProposalComment) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type RelationCmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepHash string `protobuf:"bytes,1,opt,name=repHash,proto3" json:"repHash,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Height  int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Index   int32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	Hash    string `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *RelationCmt) Reset() {
	*x = RelationCmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationCmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationCmt) ProtoMessage() {}

func (x *RelationCmt) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationCmt.ProtoReflect.Descriptor instead.
func (*RelationCmt) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{13}
}

func (x *RelationCmt) GetRepHash() string {
	if x != nil {
		return x.RepHash
	}
	return ""
}

func (x *RelationCmt) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RelationCmt) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RelationCmt) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *RelationCmt) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ReplyQueryProposalComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RltCmt []*RelationCmt `protobuf:"bytes,1,rep,name=rltCmt,proto3" json:"rltCmt,omitempty"`
}

func (x *ReplyQueryProposalComment) Reset() {
	*x = ReplyQueryProposalComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyQueryProposalComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyQueryProposalComment) ProtoMessage() {}

func (x *ReplyQueryProposalComment) ProtoReflect() protoreflect.Message {
	mi := &file_rule_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyQueryProposalComment.ProtoReflect.Descriptor instead.
func (*ReplyQueryProposalComment) Descriptor() ([]byte, []int) {
	return file_rule_proto_rawDescGZIP(), []int{14}
}

func (x *ReplyQueryProposalComment) GetRltCmt() []*RelationCmt {
	if x != nil {
		return x.RltCmt
	}
	return nil
}

var File_rule_proto protoreflect.FileDescriptor

var file_rule_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x1a, 0x0d, 0x6c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa7, 0x02, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x07, 0x63, 0x75, 0x72, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x76, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x22, 0xfb, 0x01, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x75, 0x6c,
	0x65, 0x43, 0x66, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x72,
	0x75, 0x6c, 0x65, 0x43, 0x66, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65,
	0x61, 0x6c, 0x45, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x34, 0x0a, 0x12, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44,
	0x22, 0x6c, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x22, 0x37,
	0x0a, 0x15, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x22, 0x7d, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x70, 0x72, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x70, 0x72, 0x65, 0x76, 0x12,
	0x35, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x68, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0xa4, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x53, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x5d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x70, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x03, 0x63, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x03,
	0x63, 0x6d, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x9b, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6d, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x70, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x47, 0x0a, 0x19, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x6c, 0x74, 0x43, 0x6d, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6d, 0x74, 0x52, 0x06, 0x72, 0x6c, 0x74, 0x43,
	0x6d, 0x74, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rule_proto_rawDescOnce sync.Once
	file_rule_proto_rawDescData = file_rule_proto_rawDesc
)

func file_rule_proto_rawDescGZIP() []byte {
	file_rule_proto_rawDescOnce.Do(func() {
		file_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_rule_proto_rawDescData)
	})
	return file_rule_proto_rawDescData
}

var file_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_rule_proto_goTypes = []interface{}{
	(*AutonomyProposalRule)(nil),      // 0: types.AutonomyProposalRule
	(*ProposalRule)(nil),              // 1: types.ProposalRule
	(*RevokeProposalRule)(nil),        // 2: types.RevokeProposalRule
	(*VoteProposalRule)(nil),          // 3: types.VoteProposalRule
	(*TerminateProposalRule)(nil),     // 4: types.TerminateProposalRule
	(*ReceiptProposalRule)(nil),       // 5: types.ReceiptProposalRule
	(*LocalProposalRule)(nil),         // 6: types.LocalProposalRule
	(*ReqQueryProposalRule)(nil),      // 7: types.ReqQueryProposalRule
	(*ReplyQueryProposalRule)(nil),    // 8: types.ReplyQueryProposalRule
	(*TransferFund)(nil),              // 9: types.TransferFund
	(*Comment)(nil),                   // 10: types.Comment
	(*ReceiptProposalComment)(nil),    // 11: types.ReceiptProposalComment
	(*ReqQueryProposalComment)(nil),   // 12: types.ReqQueryProposalComment
	(*RelationCmt)(nil),               // 13: types.RelationCmt
	(*ReplyQueryProposalComment)(nil), // 14: types.ReplyQueryProposalComment
	(*RuleConfig)(nil),                // 15: types.RuleConfig
	(*VoteResult)(nil),                // 16: types.VoteResult
}
var file_rule_proto_depIdxs = []int32{
	1,  // 0: types.AutonomyProposalRule.propRule:type_name -> types.ProposalRule
	15, // 1: types.AutonomyProposalRule.curRule:type_name -> types.RuleConfig
	16, // 2: types.AutonomyProposalRule.voteResult:type_name -> types.VoteResult
	15, // 3: types.ProposalRule.ruleCfg:type_name -> types.RuleConfig
	0,  // 4: types.ReceiptProposalRule.prev:type_name -> types.AutonomyProposalRule
	0,  // 5: types.ReceiptProposalRule.current:type_name -> types.AutonomyProposalRule
	0,  // 6: types.LocalProposalRule.propRule:type_name -> types.AutonomyProposalRule
	0,  // 7: types.ReplyQueryProposalRule.propRules:type_name -> types.AutonomyProposalRule
	10, // 8: types.ReceiptProposalComment.cmt:type_name -> types.Comment
	13, // 9: types.ReplyQueryProposalComment.rltCmt:type_name -> types.RelationCmt
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_rule_proto_init() }
func file_rule_proto_init() {
	if File_rule_proto != nil {
		return
	}
	file_lcommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutonomyProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqQueryProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyQueryProposalRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptProposalComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqQueryProposalComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationCmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyQueryProposalComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rule_proto_goTypes,
		DependencyIndexes: file_rule_proto_depIdxs,
		MessageInfos:      file_rule_proto_msgTypes,
	}.Build()
	File_rule_proto = out.File
	file_rule_proto_rawDesc = nil
	file_rule_proto_goTypes = nil
	file_rule_proto_depIdxs = nil
}
