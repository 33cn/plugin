// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.9.1
// source: oracle.proto

package types

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//事件
type OracleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID      string       `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`           //事件ID
	Addr         string       `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`                 //发布者地址
	Type         string       `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`                 //游戏类别
	SubType      string       `protobuf:"bytes,4,opt,name=subType,proto3" json:"subType,omitempty"`           //游戏子类别
	Time         int64        `protobuf:"varint,5,opt,name=time,proto3" json:"time,omitempty"`                //结果公布参考时间
	Content      string       `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`           //事件内容
	Introduction string       `protobuf:"bytes,7,opt,name=introduction,proto3" json:"introduction,omitempty"` //事件描述
	Status       *EventStatus `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`             //操作状态
	Source       string       `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`             //数据来源
	Result       string       `protobuf:"bytes,10,opt,name=result,proto3" json:"result,omitempty"`            //事件结果
	PreStatus    *EventStatus `protobuf:"bytes,11,opt,name=preStatus,proto3" json:"preStatus,omitempty"`      //上次操作后状态及操作者地址
}

func (x *OracleStatus) Reset() {
	*x = OracleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OracleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleStatus) ProtoMessage() {}

func (x *OracleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleStatus.ProtoReflect.Descriptor instead.
func (*OracleStatus) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{0}
}

func (x *OracleStatus) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *OracleStatus) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *OracleStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OracleStatus) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *OracleStatus) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *OracleStatus) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *OracleStatus) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *OracleStatus) GetStatus() *EventStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OracleStatus) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OracleStatus) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *OracleStatus) GetPreStatus() *EventStatus {
	if x != nil {
		return x.PreStatus
	}
	return nil
}

// action
type OracleAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*OracleAction_EventPublish
	//	*OracleAction_EventAbort
	//	*OracleAction_ResultPrePublish
	//	*OracleAction_ResultPublish
	//	*OracleAction_ResultAbort
	Value isOracleAction_Value `protobuf_oneof:"value"`
	Ty    int32                `protobuf:"varint,7,opt,name=Ty,proto3" json:"Ty,omitempty"`
}

func (x *OracleAction) Reset() {
	*x = OracleAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OracleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OracleAction) ProtoMessage() {}

func (x *OracleAction) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OracleAction.ProtoReflect.Descriptor instead.
func (*OracleAction) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{1}
}

func (m *OracleAction) GetValue() isOracleAction_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *OracleAction) GetEventPublish() *EventPublish {
	if x, ok := x.GetValue().(*OracleAction_EventPublish); ok {
		return x.EventPublish
	}
	return nil
}

func (x *OracleAction) GetEventAbort() *EventAbort {
	if x, ok := x.GetValue().(*OracleAction_EventAbort); ok {
		return x.EventAbort
	}
	return nil
}

func (x *OracleAction) GetResultPrePublish() *ResultPrePublish {
	if x, ok := x.GetValue().(*OracleAction_ResultPrePublish); ok {
		return x.ResultPrePublish
	}
	return nil
}

func (x *OracleAction) GetResultPublish() *ResultPublish {
	if x, ok := x.GetValue().(*OracleAction_ResultPublish); ok {
		return x.ResultPublish
	}
	return nil
}

func (x *OracleAction) GetResultAbort() *ResultAbort {
	if x, ok := x.GetValue().(*OracleAction_ResultAbort); ok {
		return x.ResultAbort
	}
	return nil
}

func (x *OracleAction) GetTy() int32 {
	if x != nil {
		return x.Ty
	}
	return 0
}

type isOracleAction_Value interface {
	isOracleAction_Value()
}

type OracleAction_EventPublish struct {
	EventPublish *EventPublish `protobuf:"bytes,1,opt,name=eventPublish,proto3,oneof"`
}

type OracleAction_EventAbort struct {
	EventAbort *EventAbort `protobuf:"bytes,2,opt,name=eventAbort,proto3,oneof"`
}

type OracleAction_ResultPrePublish struct {
	ResultPrePublish *ResultPrePublish `protobuf:"bytes,3,opt,name=resultPrePublish,proto3,oneof"`
}

type OracleAction_ResultPublish struct {
	ResultPublish *ResultPublish `protobuf:"bytes,4,opt,name=resultPublish,proto3,oneof"`
}

type OracleAction_ResultAbort struct {
	ResultAbort *ResultAbort `protobuf:"bytes,5,opt,name=resultAbort,proto3,oneof"`
}

func (*OracleAction_EventPublish) isOracleAction_Value() {}

func (*OracleAction_EventAbort) isOracleAction_Value() {}

func (*OracleAction_ResultPrePublish) isOracleAction_Value() {}

func (*OracleAction_ResultPublish) isOracleAction_Value() {}

func (*OracleAction_ResultAbort) isOracleAction_Value() {}

type EventStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpAddr string `protobuf:"bytes,1,opt,name=opAddr,proto3" json:"opAddr,omitempty"`  //修改事件状态的地址
	Status int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` //事件状态
}

func (x *EventStatus) Reset() {
	*x = EventStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatus) ProtoMessage() {}

func (x *EventStatus) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatus.ProtoReflect.Descriptor instead.
func (*EventStatus) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{2}
}

func (x *EventStatus) GetOpAddr() string {
	if x != nil {
		return x.OpAddr
	}
	return ""
}

func (x *EventStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type EventPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                 //游戏类别
	SubType      string `protobuf:"bytes,3,opt,name=subType,proto3" json:"subType,omitempty"`           //游戏子类别
	Time         int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`                //结果公布参考时间
	Content      string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`           //事件内容
	Introduction string `protobuf:"bytes,6,opt,name=introduction,proto3" json:"introduction,omitempty"` //事件描述
}

func (x *EventPublish) Reset() {
	*x = EventPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPublish) ProtoMessage() {}

func (x *EventPublish) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPublish.ProtoReflect.Descriptor instead.
func (*EventPublish) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{3}
}

func (x *EventPublish) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventPublish) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *EventPublish) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *EventPublish) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EventPublish) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

type EventAbort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"` //发布事件的ID
}

func (x *EventAbort) Reset() {
	*x = EventAbort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventAbort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventAbort) ProtoMessage() {}

func (x *EventAbort) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventAbort.ProtoReflect.Descriptor instead.
func (*EventAbort) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{4}
}

func (x *EventAbort) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type ResultPrePublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"` //发布事件的ID
	Source  string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`   //数据来源
	Result  string `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`   //发布数据
}

func (x *ResultPrePublish) Reset() {
	*x = ResultPrePublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPrePublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPrePublish) ProtoMessage() {}

func (x *ResultPrePublish) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPrePublish.ProtoReflect.Descriptor instead.
func (*ResultPrePublish) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{5}
}

func (x *ResultPrePublish) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *ResultPrePublish) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ResultPrePublish) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ResultPublish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"` //发布事件的ID
	Source  string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`   //数据来源
	Result  string `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`   //发布数据
}

func (x *ResultPublish) Reset() {
	*x = ResultPublish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultPublish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultPublish) ProtoMessage() {}

func (x *ResultPublish) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultPublish.ProtoReflect.Descriptor instead.
func (*ResultPublish) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{6}
}

func (x *ResultPublish) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *ResultPublish) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ResultPublish) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ResultAbort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"` //发布事件的ID
}

func (x *ResultAbort) Reset() {
	*x = ResultAbort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultAbort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultAbort) ProtoMessage() {}

func (x *ResultAbort) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultAbort.ProtoReflect.Descriptor instead.
func (*ResultAbort) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{7}
}

func (x *ResultAbort) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

// localDB
type EventRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"` //发布的事件的ID
}

func (x *EventRecord) Reset() {
	*x = EventRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRecord) ProtoMessage() {}

func (x *EventRecord) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRecord.ProtoReflect.Descriptor instead.
func (*EventRecord) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{8}
}

func (x *EventRecord) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type QueryOracleInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID []string `protobuf:"bytes,1,rep,name=eventID,proto3" json:"eventID,omitempty"` //发布的事件的ID
}

func (x *QueryOracleInfos) Reset() {
	*x = QueryOracleInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOracleInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOracleInfos) ProtoMessage() {}

func (x *QueryOracleInfos) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOracleInfos.ProtoReflect.Descriptor instead.
func (*QueryOracleInfos) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{9}
}

func (x *QueryOracleInfos) GetEventID() []string {
	if x != nil {
		return x.EventID
	}
	return nil
}

type ReplyEventIDs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID []string `protobuf:"bytes,1,rep,name=eventID,proto3" json:"eventID,omitempty"` //发布事件的ID
}

func (x *ReplyEventIDs) Reset() {
	*x = ReplyEventIDs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyEventIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyEventIDs) ProtoMessage() {}

func (x *ReplyEventIDs) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyEventIDs.ProtoReflect.Descriptor instead.
func (*ReplyEventIDs) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{10}
}

func (x *ReplyEventIDs) GetEventID() []string {
	if x != nil {
		return x.EventID
	}
	return nil
}

type QueryEventID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`  //事件状态
	Addr    string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`       //事件发布者的地址
	Type    string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`       //事件类型
	EventID string `protobuf:"bytes,4,opt,name=eventID,proto3" json:"eventID,omitempty"` //事件ID
}

func (x *QueryEventID) Reset() {
	*x = QueryEventID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryEventID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventID) ProtoMessage() {}

func (x *QueryEventID) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventID.ProtoReflect.Descriptor instead.
func (*QueryEventID) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{11}
}

func (x *QueryEventID) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryEventID) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *QueryEventID) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueryEventID) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

type ReceiptOracle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID   string `protobuf:"bytes,1,opt,name=eventID,proto3" json:"eventID,omitempty"`      //发布事件ID
	Status    int32  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`       //事件状态
	Addr      string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`            //事件发布者的地址
	Type      string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`            //事件类型
	PreStatus int32  `protobuf:"varint,6,opt,name=preStatus,proto3" json:"preStatus,omitempty"` //事件的前一个状态
}

func (x *ReceiptOracle) Reset() {
	*x = ReceiptOracle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptOracle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptOracle) ProtoMessage() {}

func (x *ReceiptOracle) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptOracle.ProtoReflect.Descriptor instead.
func (*ReceiptOracle) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{12}
}

func (x *ReceiptOracle) GetEventID() string {
	if x != nil {
		return x.EventID
	}
	return ""
}

func (x *ReceiptOracle) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ReceiptOracle) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *ReceiptOracle) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReceiptOracle) GetPreStatus() int32 {
	if x != nil {
		return x.PreStatus
	}
	return 0
}

type ReplyOracleStatusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*OracleStatus `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"` //状态集
}

func (x *ReplyOracleStatusList) Reset() {
	*x = ReplyOracleStatusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oracle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyOracleStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyOracleStatusList) ProtoMessage() {}

func (x *ReplyOracleStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_oracle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyOracleStatusList.ProtoReflect.Descriptor instead.
func (*ReplyOracleStatusList) Descriptor() ([]byte, []int) {
	return file_oracle_proto_rawDescGZIP(), []int{13}
}

func (x *ReplyOracleStatusList) GetStatus() []*OracleStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_oracle_proto protoreflect.FileDescriptor

var file_oracle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xca, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xd4, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00,
	0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x33,
	0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x62, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x65, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x72, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x36, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x62, 0x6f, 0x72,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x62, 0x6f, 0x72, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x54, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x54, 0x79,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x0a, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x44, 0x22, 0x5c, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x65, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x59, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x0b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x22, 0x27, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x0d, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x87, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x15, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_oracle_proto_rawDescOnce sync.Once
	file_oracle_proto_rawDescData = file_oracle_proto_rawDesc
)

func file_oracle_proto_rawDescGZIP() []byte {
	file_oracle_proto_rawDescOnce.Do(func() {
		file_oracle_proto_rawDescData = protoimpl.X.CompressGZIP(file_oracle_proto_rawDescData)
	})
	return file_oracle_proto_rawDescData
}

var file_oracle_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_oracle_proto_goTypes = []interface{}{
	(*OracleStatus)(nil),          // 0: types.OracleStatus
	(*OracleAction)(nil),          // 1: types.OracleAction
	(*EventStatus)(nil),           // 2: types.EventStatus
	(*EventPublish)(nil),          // 3: types.EventPublish
	(*EventAbort)(nil),            // 4: types.EventAbort
	(*ResultPrePublish)(nil),      // 5: types.ResultPrePublish
	(*ResultPublish)(nil),         // 6: types.ResultPublish
	(*ResultAbort)(nil),           // 7: types.ResultAbort
	(*EventRecord)(nil),           // 8: types.EventRecord
	(*QueryOracleInfos)(nil),      // 9: types.QueryOracleInfos
	(*ReplyEventIDs)(nil),         // 10: types.ReplyEventIDs
	(*QueryEventID)(nil),          // 11: types.QueryEventID
	(*ReceiptOracle)(nil),         // 12: types.ReceiptOracle
	(*ReplyOracleStatusList)(nil), // 13: types.ReplyOracleStatusList
}
var file_oracle_proto_depIdxs = []int32{
	2, // 0: types.OracleStatus.status:type_name -> types.EventStatus
	2, // 1: types.OracleStatus.preStatus:type_name -> types.EventStatus
	3, // 2: types.OracleAction.eventPublish:type_name -> types.EventPublish
	4, // 3: types.OracleAction.eventAbort:type_name -> types.EventAbort
	5, // 4: types.OracleAction.resultPrePublish:type_name -> types.ResultPrePublish
	6, // 5: types.OracleAction.resultPublish:type_name -> types.ResultPublish
	7, // 6: types.OracleAction.resultAbort:type_name -> types.ResultAbort
	0, // 7: types.ReplyOracleStatusList.status:type_name -> types.OracleStatus
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_oracle_proto_init() }
func file_oracle_proto_init() {
	if File_oracle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oracle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OracleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OracleAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventAbort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultPrePublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultPublish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultAbort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOracleInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyEventIDs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryEventID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptOracle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oracle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyOracleStatusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_oracle_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*OracleAction_EventPublish)(nil),
		(*OracleAction_EventAbort)(nil),
		(*OracleAction_ResultPrePublish)(nil),
		(*OracleAction_ResultPublish)(nil),
		(*OracleAction_ResultAbort)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oracle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oracle_proto_goTypes,
		DependencyIndexes: file_oracle_proto_depIdxs,
		MessageInfos:      file_oracle_proto_msgTypes,
	}.Build()
	File_oracle_proto = out.File
	file_oracle_proto_rawDesc = nil
	file_oracle_proto_goTypes = nil
	file_oracle_proto_depIdxs = nil
}
