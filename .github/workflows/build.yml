name: ci_base
on: [push,pull_request]

jobs:
  check_fmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'

      - name: Intsall Golangci-lint
        run: |
          # add executables installed with go get to PATH
          # TODO: this will hopefully be fixed by
          # https://github.com/actions/setup-go/issues/14
          export PATH=${PATH}:`go env GOPATH`/bin
          echo $GOPATH
          echo $PATH
          go install golang.org/x/tools/cmd/goimports@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.44.2
          go install mvdan.cc/sh/cmd/shfmt@latest
          go install mvdan.cc/sh/cmd/gosh@latest

      - name: Lint
        run: |
          make largefile-check
          make checkgofmt && make fmt_go
          make linter
          make

  unit-test:
    name: unit-test
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
        id: go
      - name: set go env
        run: export PATH=${PATH}:`go env GOPATH`/bin
      - name: checkout
        uses: actions/checkout@v2
      - name: unit-test
        run: make test

  coverage:
    name: coverage
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
        id: go
      - name: set go env
        run: export PATH=${PATH}:`go env GOPATH`/bin
      - name: checkout
        uses: actions/checkout@v3
      - name: ut coverage
        run: make coverage
      - name: cover report
        if: success()
        run: bash <(curl -s https://codecov.io/bash)

  autotest:
    name: autotest
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
        id: go
      - name: set go env
        run: export PATH=${PATH}:`go env GOPATH`/bin
      - name: checkout
        uses: actions/checkout@v3
      - name: deploy
        run: |
          make build_ci
          make autotest dapp=all

  ci_base:
    name: ci_base
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Golang
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
        id: go
      - name: set go env
        run: export PATH=${PATH}:`go env GOPATH`/bin
      - name: checkout
        uses: actions/checkout@v3
      - name: deploy
        run: |
          make docker-compose
          make docker-compose-down

  test-arch-386:
    name: Test GOARCH 386
    runs-on: ubuntu-20.04
    env:
      GOARCH: 386
      CGO_ENABLED: 1

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
      - run: sudo apt-get install --fix-missing gcc-multilib

      - name: Build
        run: make build

      - name: Run unit tests
        run: go test ./... -covermode=atomic
